{
  "contractName": "Reader",
  "abi": [
    {
      "constant": false,
      "inputs": [
        {
          "name": "_timestamp",
          "type": "uint256"
        }
      ],
      "name": "getTellorValues",
      "outputs": [
        {
          "name": "_value",
          "type": "uint256"
        },
        {
          "name": "_didGet",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getCurrentValue",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "endValue",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_timestamp",
          "type": "uint256"
        }
      ],
      "name": "disputeOptimisticValue",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_timestamp",
          "type": "uint256"
        }
      ],
      "name": "getNumberOfValuesPerTimestamp",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "isValue",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "disputedValues",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "endDateTime",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "startValue",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_requestId",
          "type": "uint256"
        }
      ],
      "name": "getCurrentValue",
      "outputs": [
        {
          "name": "ifRetrieve",
          "type": "bool"
        },
        {
          "name": "value",
          "type": "uint256"
        },
        {
          "name": "_timestampRetrieved",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_request",
          "type": "string"
        },
        {
          "name": "_symbol",
          "type": "string"
        },
        {
          "name": "_granularity",
          "type": "uint256"
        },
        {
          "name": "_tip",
          "type": "uint256"
        }
      ],
      "name": "requestData",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_request",
          "type": "string"
        },
        {
          "name": "_symbol",
          "type": "string"
        },
        {
          "name": "_granularity",
          "type": "uint256"
        },
        {
          "name": "_tip",
          "type": "uint256"
        }
      ],
      "name": "requestDataWithEther",
      "outputs": [],
      "payable": true,
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "uint256"
        },
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "requestIdsIncluded",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "granularity",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getTimestamps",
      "outputs": [
        {
          "name": "",
          "type": "uint256[]"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "disputePeriod",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_requestId",
          "type": "uint256"
        },
        {
          "name": "_timestamp",
          "type": "uint256"
        }
      ],
      "name": "getFirstVerifiedDataAfter",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        },
        {
          "name": "",
          "type": "uint256"
        },
        {
          "name": "_timestampRetrieved",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getNumberOfDisputedValues",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_timestamp",
          "type": "uint256"
        }
      ],
      "name": "getFirstUndisputedValueAfter",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        },
        {
          "name": "",
          "type": "uint256"
        },
        {
          "name": "_timestampRetrieved",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_index",
          "type": "uint256"
        }
      ],
      "name": "getDisputedValueByIndex",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_requestId",
          "type": "uint256"
        },
        {
          "name": "_tip",
          "type": "uint256"
        }
      ],
      "name": "addTip",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "startDateTime",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_timestamp",
          "type": "uint256"
        },
        {
          "name": "_value",
          "type": "uint256"
        }
      ],
      "name": "setValue",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_timestamp",
          "type": "uint256"
        }
      ],
      "name": "isDisputed",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "contractEnded",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_timestamp",
          "type": "uint256"
        }
      ],
      "name": "getIsValue",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_userContract",
          "type": "address"
        }
      ],
      "name": "setUserContract",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getRequestIds",
      "outputs": [
        {
          "name": "",
          "type": "uint256[]"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getDisputedValues",
      "outputs": [
        {
          "name": "",
          "type": "uint256[]"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "disputeFee",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "longWins",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_requestId",
          "type": "uint256"
        },
        {
          "name": "_timestamp",
          "type": "uint256"
        }
      ],
      "name": "getAnyDataAfter",
      "outputs": [
        {
          "name": "_ifRetrieve",
          "type": "bool"
        },
        {
          "name": "_value",
          "type": "uint256"
        },
        {
          "name": "_timestampRetrieved",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_timestamp",
          "type": "uint256"
        }
      ],
      "name": "getRequestIdsIncluded",
      "outputs": [
        {
          "name": "",
          "type": "uint256[]"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_timestamp",
          "type": "uint256"
        }
      ],
      "name": "getMyValuesByTimestamp",
      "outputs": [
        {
          "name": "value",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_requestId",
          "type": "uint256"
        },
        {
          "name": "_tip",
          "type": "uint256"
        }
      ],
      "name": "addTipWithEther",
      "outputs": [],
      "payable": true,
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "name": "_userContract",
          "type": "address"
        },
        {
          "name": "_disputeFeeRequired",
          "type": "uint256"
        },
        {
          "name": "_disputePeriod",
          "type": "uint256"
        },
        {
          "name": "_requestIds",
          "type": "uint256[]"
        },
        {
          "name": "_granularity",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "_svalue",
          "type": "uint256"
        },
        {
          "indexed": false,
          "name": "_evalue",
          "type": "uint256"
        }
      ],
      "name": "ContractSettled",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "_timestamp",
          "type": "uint256"
        },
        {
          "indexed": false,
          "name": "_value",
          "type": "uint256"
        }
      ],
      "name": "NewValueSet",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "_disputer",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "_timestamp",
          "type": "uint256"
        },
        {
          "indexed": false,
          "name": "_value",
          "type": "uint256"
        }
      ],
      "name": "ValueDisputed",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "_timestamp",
          "type": "uint256"
        },
        {
          "indexed": false,
          "name": "_value",
          "type": "uint256"
        }
      ],
      "name": "TellorValuePlaced",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "_call",
          "type": "bool"
        }
      ],
      "name": "Print",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "_1",
          "type": "uint256"
        },
        {
          "indexed": false,
          "name": "_2",
          "type": "uint256"
        }
      ],
      "name": "Print2",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "_previousOwner",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "_newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "_s",
          "type": "string"
        },
        {
          "indexed": false,
          "name": "_num",
          "type": "uint256"
        }
      ],
      "name": "Print",
      "type": "event"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_duration",
          "type": "uint256"
        }
      ],
      "name": "testContract",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "settleContracts",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.5.8+commit.23d335f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":false,\"inputs\":[{\"name\":\"_timestamp\",\"type\":\"uint256\"}],\"name\":\"getTellorValues\",\"outputs\":[{\"name\":\"_value\",\"type\":\"uint256\"},{\"name\":\"_didGet\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getCurrentValue\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"endValue\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_duration\",\"type\":\"uint256\"}],\"name\":\"testContract\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_timestamp\",\"type\":\"uint256\"}],\"name\":\"disputeOptimisticValue\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_timestamp\",\"type\":\"uint256\"}],\"name\":\"getNumberOfValuesPerTimestamp\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"isValue\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"disputedValues\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"endDateTime\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"startValue\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_requestId\",\"type\":\"uint256\"}],\"name\":\"getCurrentValue\",\"outputs\":[{\"name\":\"ifRetrieve\",\"type\":\"bool\"},{\"name\":\"value\",\"type\":\"uint256\"},{\"name\":\"_timestampRetrieved\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_request\",\"type\":\"string\"},{\"name\":\"_symbol\",\"type\":\"string\"},{\"name\":\"_granularity\",\"type\":\"uint256\"},{\"name\":\"_tip\",\"type\":\"uint256\"}],\"name\":\"requestData\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_request\",\"type\":\"string\"},{\"name\":\"_symbol\",\"type\":\"string\"},{\"name\":\"_granularity\",\"type\":\"uint256\"},{\"name\":\"_tip\",\"type\":\"uint256\"}],\"name\":\"requestDataWithEther\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"},{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"requestIdsIncluded\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"granularity\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getTimestamps\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"disputePeriod\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_requestId\",\"type\":\"uint256\"},{\"name\":\"_timestamp\",\"type\":\"uint256\"}],\"name\":\"getFirstVerifiedDataAfter\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"},{\"name\":\"\",\"type\":\"uint256\"},{\"name\":\"_timestampRetrieved\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getNumberOfDisputedValues\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_timestamp\",\"type\":\"uint256\"}],\"name\":\"getFirstUndisputedValueAfter\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"},{\"name\":\"\",\"type\":\"uint256\"},{\"name\":\"_timestampRetrieved\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_index\",\"type\":\"uint256\"}],\"name\":\"getDisputedValueByIndex\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_requestId\",\"type\":\"uint256\"},{\"name\":\"_tip\",\"type\":\"uint256\"}],\"name\":\"addTip\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"startDateTime\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_timestamp\",\"type\":\"uint256\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"setValue\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_timestamp\",\"type\":\"uint256\"}],\"name\":\"isDisputed\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"settleContracts\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"contractEnded\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_timestamp\",\"type\":\"uint256\"}],\"name\":\"getIsValue\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_userContract\",\"type\":\"address\"}],\"name\":\"setUserContract\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getRequestIds\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getDisputedValues\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"disputeFee\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"longWins\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_requestId\",\"type\":\"uint256\"},{\"name\":\"_timestamp\",\"type\":\"uint256\"}],\"name\":\"getAnyDataAfter\",\"outputs\":[{\"name\":\"_ifRetrieve\",\"type\":\"bool\"},{\"name\":\"_value\",\"type\":\"uint256\"},{\"name\":\"_timestampRetrieved\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_timestamp\",\"type\":\"uint256\"}],\"name\":\"getRequestIdsIncluded\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_timestamp\",\"type\":\"uint256\"}],\"name\":\"getMyValuesByTimestamp\",\"outputs\":[{\"name\":\"value\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_requestId\",\"type\":\"uint256\"},{\"name\":\"_tip\",\"type\":\"uint256\"}],\"name\":\"addTipWithEther\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"_userContract\",\"type\":\"address\"},{\"name\":\"_disputeFeeRequired\",\"type\":\"uint256\"},{\"name\":\"_disputePeriod\",\"type\":\"uint256\"},{\"name\":\"_requestIds\",\"type\":\"uint256[]\"},{\"name\":\"_granularity\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"_svalue\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"_evalue\",\"type\":\"uint256\"}],\"name\":\"ContractSettled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_timestamp\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"NewValueSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"_disputer\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_timestamp\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"ValueDisputed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"_timestamp\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"TellorValuePlaced\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"_call\",\"type\":\"bool\"}],\"name\":\"Print\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"_1\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"_2\",\"type\":\"uint256\"}],\"name\":\"Print2\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"_previousOwner\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"_s\",\"type\":\"string\"},{\"indexed\":false,\"name\":\"_num\",\"type\":\"uint256\"}],\"name\":\"Print\",\"type\":\"event\"}],\"devdoc\":{\"methods\":{\"addTip(uint256,uint256)\":{\"details\":\"Allows the user to tip miners for the specified request using Tributes\",\"params\":{\"_requestId\":\"to tip\",\"_tip\":\"amount\"}},\"addTipWithEther(uint256,uint256)\":{\"details\":\"Allows user to add tip with Ether by sending the ETH to the userContract and exchanging it for Tributes at the price specified by the userContract owner.\",\"params\":{\"_requestId\":\"to tip\",\"_tip\":\"amount\"}},\"constructor\":{\"details\":\"This constructor function is used to pass variables to the optimistic contract's constructor and the function is blank\",\"params\":{\"_disputeFeeRequired\":\"the fee to dispute the optimistic price(price sumbitted by known trusted party)\",\"_disputePeriod\":\"is the time frame a value can be disputed after being imputed\",\"_granularity\":\"is the amount of decimals desired on the requested value\",\"_requestIds\":\"are the requests Id's on the Tellor System corresponding to the data types used on this contract. It is recommended to use several requestId's that pull from several API's. If requestsId's don't exist in the Tellor  System be sure to create some.\",\"_userContract\":\"address for UserContract\"}},\"disputeOptimisticValue(uint256)\":{\"details\":\"allows user to initiate dispute on the value of the specified timestamp\",\"params\":{\"_timestamp\":\"is the timestamp for the value to be disputed\"}},\"getAnyDataAfter(uint256,uint256)\":{\"details\":\"Allows the user to get the first value for the requestId after the specified timestamp\",\"params\":{\"_requestId\":\"is the requestId to look up the value for\",\"_timestamp\":\"after which to search for first verified value\"},\"return\":\"bool true if it is able to retreive a value, the value, and the value's timestamp\"},\"getCurrentValue()\":{\"details\":\"Getter function for latest value available\",\"return\":\"latest value available\"},\"getCurrentValue(uint256)\":{\"details\":\"Allows the user to get the latest value for the requestId specified\",\"params\":{\"_requestId\":\"is the requestId to look up the value for\"},\"return\":\"bool true if it is able to retreive a value, the value, and the value's timestamp\"},\"getDisputedValueByIndex(uint256)\":{\"details\":\"Getter function for the dispute value by index\",\"return\":\"the value\"},\"getDisputedValues()\":{\"details\":\"Getter function for all disputed values\",\"return\":\"the array with all values under dispute\"},\"getFirstUndisputedValueAfter(uint256)\":{\"details\":\"Get the first undisputed value after the timestamp specified. This function is used within the getTellorValues but can be used on its own. \",\"params\":{\"_timestamp\":\"to search the first undisputed value there after\"}},\"getFirstVerifiedDataAfter(uint256,uint256)\":{\"details\":\"Allows the user to get the first verified value for the requestId after the specified timestamp\",\"params\":{\"_requestId\":\"is the requestId to look up the value for\",\"_timestamp\":\"after which to search for first verified value\"},\"return\":\"bool true if it is able to retreive a value, the value, and the value's timestamp, the timestamp after which it searched for the first verified value\"},\"getIsValue(uint256)\":{\"details\":\"Checks to if a value exists for the specifived timestamp\",\"params\":{\"_timestamp\":\"to verify\"},\"return\":\"ture if it exists\"},\"getMyValuesByTimestamp(uint256)\":{\"details\":\"Getter function for the value based on the timestamp specified\",\"params\":{\"_timestamp\":\"to retreive value from\"}},\"getNumberOfDisputedValues()\":{\"details\":\"Getter function for the number of disputed values \",\"return\":\"uint count of number of values for the spedified timestamp\"},\"getNumberOfValuesPerTimestamp(uint256)\":{\"details\":\"Getter function for the number of RequestIds associated with a timestamp, based on the timestamp specified\",\"params\":{\"_timestamp\":\"to retreive number of requestIds\"},\"return\":\"uint count of number of values for the spedified timestamp\"},\"getRequestIds()\":{\"details\":\"Getter function for the requests Ids' from Tellor associated with this price feed\",\"return\":\"uint array of requests Ids'\"},\"getRequestIdsIncluded(uint256)\":{\"details\":\"Getter function for the requests Ids' from Tellor associated with this price feed at the specified timestamp. This only gets populated after a dispute is initiated and the  function getTellorValues is ran.\",\"params\":{\"_timestamp\":\"to retreive the requestIds\"},\"return\":\"uint array of requests Ids' included in the calcluation of the value\"},\"getTellorValues(uint256)\":{\"details\":\"This function gets the Tellor requestIds values for the disputed timestamp. It averages the values on the  requestsIds and replaces the value set by the contract owner, centralized party.\",\"params\":{\"_timestamp\":\"to get Tellor data from\"},\"return\":\"uint of new value and true if it was able to get Tellor data\"},\"getTimestamps()\":{\"details\":\"Getter function for the timestamps available\",\"return\":\"uint array of timestamps available\"},\"isDisputed(uint256)\":{\"details\":\"This checks if the value for the specified timestamp is under dispute \",\"params\":{\"_timestamp\":\"to check if it is under dispute\"},\"return\":\"true if it is under dispute\"},\"requestData(string,string,uint256,uint256)\":{\"details\":\"Allows the user to submit a request for data to the oracle using Tributes Allowing this prevents us from increasing spread too high (since if we set the price too hight users will just go to an exchange and get tokens from there)\",\"params\":{\"_granularity\":\"is the number of decimals miners should include on the submitted value\",\"_request\":\"string API being requested to be mined\",\"_symbol\":\"is the short string symbol for the api request\",\"_tip\":\"amount the requester is willing to pay to be get on queue. Miners mine the onDeckQueryHash, or the api with the highest payout pool\"}},\"requestDataWithEther(string,string,uint256,uint256)\":{\"details\":\"Allows the user to submit a request for data to the oracle using ETH\",\"params\":{\"_granularity\":\"is the number of decimals miners should include on the submitted value\",\"_request\":\"string API being requested to be mined\",\"_symbol\":\"is the short string symbol for the api request\",\"_tip\":\"amount the requester is willing to pay to be get on queue. Miners mine the onDeckQueryHash, or the api with the highest payout pool\"}},\"setUserContract(address)\":{\"details\":\"allows owner to set the user contract address\",\"params\":{\"_userContract\":\"address\"}},\"setValue(uint256,uint256)\":{\"details\":\"allows contract owner, a centralized party to enter value\",\"params\":{\"_timestamp\":\"is the timestamp for the value\",\"_value\":\"is the value for the timestamp specified\"}},\"settleContracts()\":{\"details\":\"testing fucntion that settles the contract by getting the first undisputed value after the startDateTime and the first undisputed value after the end time of the contract and settleling(payin off) it.\"},\"testContract(uint256)\":{\"details\":\"creates a start(now) and end time(now + duration specified) for testing a contract start and end period\",\"params\":{\"_duration\":\"in seconds\"}},\"transferOwnership(address)\":{\"details\":\"allows owner to transfer ownership\",\"params\":{\"_newOwner\":\"address\"}}},\"title\":\"Reader This contracts is a pretend contract using Tellor that compares two time values\"},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"/Users/mdcoon/git/TellorCore/contracts/userFiles/Reader.sol\":\"Reader\"},\"evmVersion\":\"petersburg\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/Users/mdcoon/git/TellorCore/contracts/Tellor.sol\":{\"keccak256\":\"0x42d5388beeda0d50c4cf1bd9b309f7ecba1ebb8f5a62610801c71e708cfebbe2\",\"urls\":[\"bzzr://27398b6daa44042685744db33139bfd399fe854ea75603e72c58a8c6690742ac\"]},\"/Users/mdcoon/git/TellorCore/contracts/TellorGetters.sol\":{\"keccak256\":\"0x7b339f0bcc57e2311e599822ad246e1c124dc4cb8181af62f3c23767be99643f\",\"urls\":[\"bzzr://a87cc90a4b1e423be0ed935dd12505a10551be40f663bc30ae7e6b1c8e3951a7\"]},\"/Users/mdcoon/git/TellorCore/contracts/TellorMaster.sol\":{\"keccak256\":\"0xd305a18aa947d750d4726df98b1cf5d1a0f90aae0cb9bd347cffeccd165af744\",\"urls\":[\"bzzr://0921f78c39b35f7bb5abc9d60e94359d09c22167cb69c48e4e91a68e76225f92\"]},\"/Users/mdcoon/git/TellorCore/contracts/libraries/SafeMath.sol\":{\"keccak256\":\"0x536b8239017cc14773e30459c671447b3564adca6e0c2ab24d0ee70c85912830\",\"urls\":[\"bzzr://c26363f199291757c3891c37b66deddcf11c2449d5a6a4c376b7aca0922e309f\"]},\"/Users/mdcoon/git/TellorCore/contracts/libraries/TellorDispute.sol\":{\"keccak256\":\"0xfc845c82c3f10657295db620a3c37985c7ac18221723fdef7683f8c6cb70fe58\",\"urls\":[\"bzzr://f1e9e837af48b9b7f1684b8847eae32861a76aa4bbcc1ed5b4ad2d6772f254ce\"]},\"/Users/mdcoon/git/TellorCore/contracts/libraries/TellorGettersLibrary.sol\":{\"keccak256\":\"0x31c8d3c7792ee1a9fac98ec809cc766a500421caff269b9c0c0753d95956732a\",\"urls\":[\"bzzr://e2cbdb3911ef3b9debd03020b8e3465b795f53609eb71703f4b4d201aa805bef\"]},\"/Users/mdcoon/git/TellorCore/contracts/libraries/TellorLibrary.sol\":{\"keccak256\":\"0x0a9fd3b4589a0675fc2d7b84c16739dd0cc7dde37c0a48e4843ddaa878e3b293\",\"urls\":[\"bzzr://47a291a4f0d930974d1d4d89790ec2e9dda6f5f54a688fbac0bce248bb137644\"]},\"/Users/mdcoon/git/TellorCore/contracts/libraries/TellorStake.sol\":{\"keccak256\":\"0x1a9700b28a50062094b6aec9a399342c5a9527aa920c7f2d6df6d7337f04c961\",\"urls\":[\"bzzr://c1ab35711bf01aed791533b0572114f82ed320d185b66ba752ae9833eeb1f9ee\"]},\"/Users/mdcoon/git/TellorCore/contracts/libraries/TellorStorage.sol\":{\"keccak256\":\"0xc4705e47846af08077f685a50eaf01afbbfe9b32f5cdf62fa2489ba6b8ae6d92\",\"urls\":[\"bzzr://9101b29a2e3df0bee696d17b51bac53be3e8ab1c9330db867c1de8f3aac41414\"]},\"/Users/mdcoon/git/TellorCore/contracts/libraries/TellorTransfer.sol\":{\"keccak256\":\"0xbc792f25ae0ff1487416ac8766b131c2c28f3a811c0a4755306b26d610e8353f\",\"urls\":[\"bzzr://d3a52c6b6d749bb6bef356f037467203c3498202ea5909cba7850812d919bf8b\"]},\"/Users/mdcoon/git/TellorCore/contracts/libraries/Utilities.sol\":{\"keccak256\":\"0x85b9b3dc3f792b50a8c256813fc2d6ddeed17253d7ed3fea7d9e8f6ea565224a\",\"urls\":[\"bzzr://c56f21a0920fa10b709188f05647397e442f6363888bb9e878779fdb0766383f\"]},\"/Users/mdcoon/git/TellorCore/contracts/userFiles/Optimistic.sol\":{\"keccak256\":\"0xa2c8225175f69e80428325118608e6e7d8a609e551eff57d7394312b9ea9be62\",\"urls\":[\"bzzr://5c3607dc21d6ea79bfea8326ea0af40bca4ff1d47cbe8ce99e328303942640ba\"]},\"/Users/mdcoon/git/TellorCore/contracts/userFiles/Reader.sol\":{\"keccak256\":\"0x44b5869f7d1fad4c4b27154b37c0c64fadbba669ff29af9bc00e010efb807947\",\"urls\":[\"bzzr://6ab4945ac2fa55ced294086496809d0f00d9aaa55ae50fcc2af78487c180da2e\"]},\"/Users/mdcoon/git/TellorCore/contracts/userFiles/UserContract.sol\":{\"keccak256\":\"0x330b6e0d78378b5febac60985039b4ba34e8b0ed219e82eed886d0115d75104c\",\"urls\":[\"bzzr://f681972c871f12219ed298865b1874c9e823d438be982a2ac393c309adccff53\"]},\"/Users/mdcoon/git/TellorCore/contracts/userFiles/UsingTellor.sol\":{\"keccak256\":\"0xf9937dc2fc45c049f1c23c0e781958b6c449c99371aa328ff07f4a440600bb23\",\"urls\":[\"bzzr://20f0518fa02827b2540081219d0c29f2f33ad541969f7cb9684f1caeb41da889\"]}},\"version\":1}",
  "bytecode": "0x60806040523480156200001157600080fd5b50604051620037e6380380620037e6833981018060405260a08110156200003757600080fd5b8101908080519060200190929190805190602001909291908051906020019092919080516401000000008111156200006e57600080fd5b828101905060208101848111156200008557600080fd5b8151856020820283011164010000000082111715620000a357600080fd5b505092919060200180519060200190929190505050848484848484806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555033600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505083600a8190555082600b819055508060098190555081600790805190602001906200016d9291906200017e565b5050505050505050505050620001f8565b828054828255906000526020600020908101928215620001bd579160200282015b82811115620001bc5782518255916020019190600101906200019f565b5b509050620001cc9190620001d0565b5090565b620001f591905b80821115620001f1576000816000905550600101620001d7565b5090565b90565b6135de80620002086000396000f3fe6080604052600436106102305760003560e01c806369949a861161012e578063a1206d4e116100ab578063d269a83c1161006f578063d269a83c14610cb4578063dc7ebf0e14610d1f578063e631def714610daf578063e723e3b514610dfe578063f2fde38b14610e3657610230565b8063a1206d4e14610b31578063ac33a27314610b82578063b63f210a14610bee578063b9ce896b14610c5a578063bad4d21e14610c8557610230565b80637ccc586e116100f25780637ccc586e146109ee5780638710580114610a415780638da5cb5b14610a5857806391bf116f14610aaf5780639a64f07014610ade57610230565b806369949a861461088957806371d8dd19146108ea578063752d49a114610939578063775f75df1461097e5780637b8d56e3146109a957610230565b80633f35ff32116101bc578063556f0dc711610180578063556f0dc71461073157806359abbfe41461075c5780635bf31d4d146107c85780635f059f3e146107f3578063681012e51461085e57610230565b80633f35ff321461047b5780633fcad964146104a65780633fff2816146105075780634482e6f3146105f6578063550921d4146106d857610230565b8063292b8cce11610203578063292b8cce146103205780632aa0bc1f1461035b57806336e9d632146103aa57806337ae9e43146103fd5780633c9177cd1461045057610230565b8063062777ff146102355780630f76c1141461028f57806316e72abb146102ba5780631714b0c5146102e5575b600080fd5b34801561024157600080fd5b5061026e6004803603602081101561025857600080fd5b8101908080359060200190929190505050610e87565b60405180838152602001821515151581526020019250505060405180910390f35b34801561029b57600080fd5b506102a461147d565b6040518082815260200191505060405180910390f35b3480156102c657600080fd5b506102cf6114bd565b6040518082815260200191505060405180910390f35b3480156102f157600080fd5b5061031e6004803603602081101561030857600080fd5b81019080803590602001909291905050506114c3565b005b34801561032c57600080fd5b506103596004803603602081101561034357600080fd5b81019080803590602001909291905050506114f0565b005b34801561036757600080fd5b506103946004803603602081101561037e57600080fd5b81019080803590602001909291905050506119ef565b6040518082815260200191505060405180910390f35b3480156103b657600080fd5b506103e3600480360360208110156103cd57600080fd5b8101908080359060200190929190505050611a0f565b604051808215151515815260200191505060405180910390f35b34801561040957600080fd5b506104366004803603602081101561042057600080fd5b8101908080359060200190929190505050611a2f565b604051808215151515815260200191505060405180910390f35b34801561045c57600080fd5b50610465611a4f565b6040518082815260200191505060405180910390f35b34801561048757600080fd5b50610490611a55565b6040518082815260200191505060405180910390f35b3480156104b257600080fd5b506104df600480360360208110156104c957600080fd5b8101908080359060200190929190505050611a5b565b6040518084151515158152602001838152602001828152602001935050505060405180910390f35b34801561051357600080fd5b506105f46004803603608081101561052a57600080fd5b810190808035906020019064010000000081111561054757600080fd5b82018360208201111561055957600080fd5b8035906020019184600183028401116401000000008311171561057b57600080fd5b90919293919293908035906020019064010000000081111561059c57600080fd5b8201836020820111156105ae57600080fd5b803590602001918460018302840111640100000000831117156105d057600080fd5b90919293919293908035906020019092919080359060200190929190505050611cf6565b005b6106d66004803603608081101561060c57600080fd5b810190808035906020019064010000000081111561062957600080fd5b82018360208201111561063b57600080fd5b8035906020019184600183028401116401000000008311171561065d57600080fd5b90919293919293908035906020019064010000000081111561067e57600080fd5b82018360208201111561069057600080fd5b803590602001918460018302840111640100000000831117156106b257600080fd5b90919293919293908035906020019092919080359060200190929190505050611f89565b005b3480156106e457600080fd5b5061071b600480360360408110156106fb57600080fd5b81019080803590602001909291908035906020019092919050505061208e565b6040518082815260200191505060405180910390f35b34801561073d57600080fd5b506107466120bc565b6040518082815260200191505060405180910390f35b34801561076857600080fd5b506107716120c2565b6040518080602001828103825283818151815260200191508051906020019060200280838360005b838110156107b4578082015181840152602081019050610799565b505050509050019250505060405180910390f35b3480156107d457600080fd5b506107dd61211a565b6040518082815260200191505060405180910390f35b3480156107ff57600080fd5b506108366004803603604081101561081657600080fd5b810190808035906020019092919080359060200190929190505050612120565b6040518084151515158152602001838152602001828152602001935050505060405180910390f35b34801561086a57600080fd5b50610873612528565b6040518082815260200191505060405180910390f35b34801561089557600080fd5b506108c2600480360360208110156108ac57600080fd5b8101908080359060200190929190505050612535565b6040518084151515158152602001838152602001828152602001935050505060405180910390f35b3480156108f657600080fd5b506109236004803603602081101561090d57600080fd5b8101908080359060200190929190505050612631565b6040518082815260200191505060405180910390f35b34801561094557600080fd5b5061097c6004803603604081101561095c57600080fd5b810190808035906020019092919080359060200190929190505050612652565b005b34801561098a57600080fd5b5061099361286f565b6040518082815260200191505060405180910390f35b3480156109b557600080fd5b506109ec600480360360408110156109cc57600080fd5b810190808035906020019092919080359060200190929190505050612875565b005b3480156109fa57600080fd5b50610a2760048036036020811015610a1157600080fd5b8101908080359060200190929190505050612994565b604051808215151515815260200191505060405180910390f35b348015610a4d57600080fd5b50610a566129be565b005b348015610a6457600080fd5b50610a6d612ab7565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b348015610abb57600080fd5b50610ac4612add565b604051808215151515815260200191505060405180910390f35b348015610aea57600080fd5b50610b1760048036036020811015610b0157600080fd5b8101908080359060200190929190505050612af0565b604051808215151515815260200191505060405180910390f35b348015610b3d57600080fd5b50610b8060048036036020811015610b5457600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050612b1a565b005b348015610b8e57600080fd5b50610b97612bb7565b6040518080602001828103825283818151815260200191508051906020019060200280838360005b83811015610bda578082015181840152602081019050610bbf565b505050509050019250505060405180910390f35b348015610bfa57600080fd5b50610c03612c0f565b6040518080602001828103825283818151815260200191508051906020019060200280838360005b83811015610c46578082015181840152602081019050610c2b565b505050509050019250505060405180910390f35b348015610c6657600080fd5b50610c6f612c67565b6040518082815260200191505060405180910390f35b348015610c9157600080fd5b50610c9a612c6d565b604051808215151515815260200191505060405180910390f35b348015610cc057600080fd5b50610cf760048036036040811015610cd757600080fd5b810190808035906020019092919080359060200190929190505050612c80565b6040518084151515158152602001838152602001828152602001935050505060405180910390f35b348015610d2b57600080fd5b50610d5860048036036020811015610d4257600080fd5b810190808035906020019092919050505061333a565b6040518080602001828103825283818151815260200191508051906020019060200280838360005b83811015610d9b578082015181840152602081019050610d80565b505050509050019250505060405180910390f35b348015610dbb57600080fd5b50610de860048036036020811015610dd257600080fd5b81019080803590602001909291905050506133a5565b6040518082815260200191505060405180910390f35b610e3460048036036040811015610e1457600080fd5b8101908080359060200190929190803590602001909291905050506133c2565b005b348015610e4257600080fd5b50610e8560048036036020811015610e5957600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061345b565b005b60008060008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a80209736040518163ffffffff1660e01b815260040160206040518083038186803b158015610ef357600080fd5b505afa158015610f07573d6000803e3d6000fd5b505050506040513d6020811015610f1d57600080fd5b8101908080519060200190929190505050905060008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a80209736040518163ffffffff1660e01b815260040160206040518083038186803b158015610f9957600080fd5b505afa158015610fad573d6000803e3d6000fd5b505050506040513d6020811015610fc357600080fd5b810190808051906020019092919050505090506000808373ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060206040518083038186803b15801561105657600080fd5b505afa15801561106a573d6000803e3d6000fd5b505050506040513d602081101561108057600080fd5b810190808051906020019092919050505090506000600190505b6007805490508111611473576110b08189612120565b809550819950829850505050851561131f57600060095484816110cf57fe5b06840390506000600160056000848152602001908152602001600020805490500160056000848152602001908152602001600020805490506003600085815260200190815260200160002054028a018161112557fe5b0490508060036000848152602001908152602001600020819055507f11d6fa234e47ea0871bd2e6efeb4e7be326a7216c36990b799a61a501cfcf1c38282604051808381526020018281526020019250505060405180910390a17f1bb2bc67728a7c173d466345ee6a8cd0c679d4059e35bd5615eb87363f7dca22818a604051808381526020018281526020019250505060405180910390a160056000838152602001908152602001600020839080600181540180825580915050906001820390600052602060002001600090919290919091505550600015156002600084815260200190815260200160002060009054906101000a900460ff16151514156112bd57600682908060018154018082558091505090600182039060005260206000200160009091929091909150555060016002600084815260200190815260200160002060006101000a81548160ff021916908315150217905550817f2afa03c814297ffc234ff967b6f0863d3c358be243103f20217c8d3a4d39f9c08a6040518082815260200191505060405180910390a2611318565b600115156004600084815260200190815260200160002060009054906101000a900460ff16151514156113175760006004600084815260200190815260200160002060006101000a81548160ff0219169083151502179055505b5b5050611466565b6007805490508573ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060206040518083038186803b1580156113a257600080fd5b505afa1580156113b6573d6000803e3d6000fd5b505050506040513d60208110156113cc57600080fd5b81019080805190602001909291905050501115611465578373ffffffffffffffffffffffffffffffffffffffff1663752d49a182600780549050858161140e57fe5b046040518363ffffffff1660e01b81526004018083815260200182815260200192505050600060405180830381600087803b15801561144c57600080fd5b505af1158015611460573d6000803e3d6000fd5b505050505b5b808060010191505061109a565b5050505050915091565b6000806006805490501161149057600080fd5b6114b86006600160068054905003815481106114a857fe5b90600052602060002001546133a5565b905090565b600f5481565b60095442816114ce57fe5b064203600c819055508060095442816114e357fe5b06420301600d8190555050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a80209736040518163ffffffff1660e01b815260040160206040518083038186803b15801561155957600080fd5b505afa15801561156d573d6000803e3d6000fd5b505050506040513d602081101561158357600080fd5b8101908080519060200190929190505050905060008173ffffffffffffffffffffffffffffffffffffffff1663612c8f7f60405180807f63757272656e74546f74616c5469707300000000000000000000000000000000815250601001905060405180910390206040518263ffffffff1660e01b81526004018082815260200191505060206040518083038186803b15801561161e57600080fd5b505afa158015611632573d6000803e3d6000fd5b505050506040513d602081101561164857600080fd5b810190808051906020019092919050505090506060333083604051602401808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200193505050506040516020818303038152906040527f23b872dd000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050905060008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a80209736040518163ffffffff1660e01b815260040160206040518083038186803b1580156117be57600080fd5b505afa1580156117d2573d6000803e3d6000fd5b505050506040513d60208110156117e857600080fd5b81019080805190602001909291905050509050600060608273ffffffffffffffffffffffffffffffffffffffff16846040518082805190602001908083835b6020831061184a5780518252602082019150602081019050602083039250611827565b6001836020036101000a0380198251168184511680821785525050505050509050019150506000604051808303816000865af19150503d80600081146118ac576040519150601f19603f3d011682016040523d82523d6000602084013e6118b1565b606091505b5091509150816118c057600080fd5b6002600088815260200190815260200160002060009054906101000a900460ff166118ea57600080fd5b600b54870160095442816118fa57fe5b064203111561190857600080fd5b60016004600089815260200190815260200160002060006101000a81548160ff02191690831515021790555060088790806001815401808255809150509060018203906000526020600020016000909192909190915055507fb199747b7b98ffd681a09c542f7f62ba4972f6f5b7d791b6f8bba36862cbdd2b3388600360008b815260200190815260200160002054604051808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001838152602001828152602001935050505060405180910390a150505050505050565b600060056000838152602001908152602001600020805490509050919050565b60026020528060005260406000206000915054906101000a900460ff1681565b60046020528060005260406000206000915054906101000a900460ff1681565b600d5481565b600e5481565b6000806000806000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a80209736040518163ffffffff1660e01b815260040160206040518083038186803b158015611ac857600080fd5b505afa158015611adc573d6000803e3d6000fd5b505050506040513d6020811015611af257600080fd5b8101908080519060200190929190505050905060008173ffffffffffffffffffffffffffffffffffffffff166346eee1c4876040518263ffffffff1660e01b81526004018082815260200191505060206040518083038186803b158015611b5857600080fd5b505afa158015611b6c573d6000803e3d6000fd5b505050506040513d6020811015611b8257600080fd5b810190808051906020019092919050505090506000811115611cdb578173ffffffffffffffffffffffffffffffffffffffff166377fbb66387600184036040518363ffffffff1660e01b8152600401808381526020018281526020019250505060206040518083038186803b158015611bfa57600080fd5b505afa158015611c0e573d6000803e3d6000fd5b505050506040513d6020811015611c2457600080fd5b8101908080519060200190929190505050925060018273ffffffffffffffffffffffffffffffffffffffff166393fa491588866040518363ffffffff1660e01b8152600401808381526020018281526020019250505060206040518083038186803b158015611c9257600080fd5b505afa158015611ca6573d6000803e3d6000fd5b505050506040513d6020811015611cbc57600080fd5b8101908080519060200190929190505050849450945094505050611cef565b600080600081915080905094509450945050505b9193909250565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a80209736040518163ffffffff1660e01b815260040160206040518083038186803b158015611d5f57600080fd5b505afa158015611d73573d6000803e3d6000fd5b505050506040513d6020811015611d8957600080fd5b810190808051906020019092919050505090506000821115611ea5578073ffffffffffffffffffffffffffffffffffffffff166323b872dd3330856040518463ffffffff1660e01b8152600401808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019350505050602060405180830381600087803b158015611e6057600080fd5b505af1158015611e74573d6000803e3d6000fd5b505050506040513d6020811015611e8a57600080fd5b8101908080519060200190929190505050611ea457600080fd5b5b8073ffffffffffffffffffffffffffffffffffffffff16633fff28168888888888886040518763ffffffff1660e01b81526004018080602001806020018581526020018481526020018381038352898982818152602001925080828437600081840152601f19601f8201169050808301925050508381038252878782818152602001925080828437600081840152601f19601f82011690508083019250505098505050505050505050600060405180830381600087803b158015611f6857600080fd5b505af1158015611f7c573d6000803e3d6000fd5b5050505050505050505050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16634482e6f3348888888888886040518863ffffffff1660e01b81526004018080602001806020018581526020018481526020018381038352898982818152602001925080828437600081840152601f19601f8201169050808301925050508381038252878782818152602001925080828437600081840152601f19601f820116905080830192505050985050505050505050506000604051808303818588803b15801561206d57600080fd5b505af1158015612081573d6000803e3d6000fd5b5050505050505050505050565b600560205281600052604060002081815481106120a757fe5b90600052602060002001600091509150505481565b60095481565b6060600680548060200260200160405190810160405280929190818152602001828054801561211057602002820191906000526020600020905b8154815260200190600101908083116120fc575b5050505050905090565b600b5481565b6000806000806000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a80209736040518163ffffffff1660e01b815260040160206040518083038186803b15801561218d57600080fd5b505afa1580156121a1573d6000803e3d6000fd5b505050506040513d60208110156121b757600080fd5b8101908080519060200190929190505050905060008173ffffffffffffffffffffffffffffffffffffffff166346eee1c4886040518263ffffffff1660e01b81526004018082815260200191505060206040518083038186803b15801561221d57600080fd5b505afa158015612231573d6000803e3d6000fd5b505050506040513d602081101561224757600080fd5b81019080805190602001909291905050509050600081111561250d5760008190505b600081111561245e57868373ffffffffffffffffffffffffffffffffffffffff166377fbb6638a600185036040518363ffffffff1660e01b8152600401808381526020018281526020019250505060206040518083038186803b1580156122cf57600080fd5b505afa1580156122e3573d6000803e3d6000fd5b505050506040513d60208110156122f957600080fd5b81019080805190602001909291905050501180156123b157506201518042038373ffffffffffffffffffffffffffffffffffffffff166377fbb6638a600185036040518363ffffffff1660e01b8152600401808381526020018281526020019250505060206040518083038186803b15801561237457600080fd5b505afa158015612388573d6000803e3d6000fd5b505050506040513d602081101561239e57600080fd5b8101908080519060200190929190505050105b15612450578273ffffffffffffffffffffffffffffffffffffffff166377fbb66389600184036040518363ffffffff1660e01b8152600401808381526020018281526020019250505060206040518083038186803b15801561241257600080fd5b505afa158015612426573d6000803e3d6000fd5b505050506040513d602081101561243c57600080fd5b810190808051906020019092919050505093505b808060019003915050612269565b50600083111561250c5760018273ffffffffffffffffffffffffffffffffffffffff166393fa491589866040518363ffffffff1660e01b8152600401808381526020018281526020019250505060206040518083038186803b1580156124c357600080fd5b505afa1580156124d7573d6000803e3d6000fd5b505050506040513d60208110156124ed57600080fd5b8101908080519060200190929190505050849450945094505050612521565b5b600080600081915080905094509450945050505b9250925092565b6000600880549050905090565b600080600080600680549050905060008111156126175760008190505b60008111156125f457856006600183038154811061256c57fe5b9060005260206000200154101580156125c3575060001515600460006006600185038154811061259857fe5b9060005260206000200154815260200190815260200160002060009054906101000a900460ff161515145b156125e657600660018203815481106125d857fe5b906000526020600020015492505b808060019003915050612552565b506000821115612616576001612609836133a5565b839350935093505061262a565b5b6000806000819150809050935093509350505b9193909250565b60006008828154811061264057fe5b90600052602060002001549050919050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a80209736040518163ffffffff1660e01b815260040160206040518083038186803b1580156126bb57600080fd5b505afa1580156126cf573d6000803e3d6000fd5b505050506040513d60208110156126e557600080fd5b810190808051906020019092919050505090508073ffffffffffffffffffffffffffffffffffffffff166323b872dd3330856040518463ffffffff1660e01b8152600401808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019350505050602060405180830381600087803b1580156127b357600080fd5b505af11580156127c7573d6000803e3d6000fd5b505050506040513d60208110156127dd57600080fd5b81019080805190602001909291905050506127f757600080fd5b8073ffffffffffffffffffffffffffffffffffffffff1663752d49a184846040518363ffffffff1660e01b81526004018083815260200182815260200192505050600060405180830381600087803b15801561285257600080fd5b505af1158015612866573d6000803e3d6000fd5b50505050505050565b600c5481565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146128cf57600080fd5b600015156128dc83612af0565b1515146128e857600080fd5b80600360008481526020019081526020016000208190555060016002600084815260200190815260200160002060006101000a81548160ff0219169083151502179055506006829080600181540180825580915050906001820390600052602060002001600090919290919091505550817f2afa03c814297ffc234ff967b6f0863d3c358be243103f20217c8d3a4d39f9c0826040518082815260200191505060405180910390a25050565b60006004600083815260200190815260200160002060009054906101000a900460ff169050919050565b6000806129cc600c54612af0565b15612ab3576129dc600c54612535565b600e60008295508391905055829450505050818015612a025750612a01600d54612af0565b5b15612ab257612a12600d54612535565b600f600082955083919050558294505050508115612ab157600e54600f541115612a52576001601060006101000a81548160ff0219169083151502179055505b6001601060016101000a81548160ff0219169083151502179055507fbbdea414ca4370d674fd5e370fbc6d7da2dafff34ec019faaf1c36b1180a314b600e54600f54604051808381526020018281526020019250505060405180910390a15b5b5b5050565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b601060019054906101000a900460ff1681565b60006002600083815260200190815260200160002060009054906101000a900460ff169050919050565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614612b7457600080fd5b806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60606007805480602002602001604051908101604052809291908181526020018280548015612c0557602002820191906000526020600020905b815481526020019060010190808311612bf1575b5050505050905090565b60606008805480602002602001604051908101604052809291908181526020018280548015612c5d57602002820191906000526020600020905b815481526020019060010190808311612c49575b5050505050905090565b600a5481565b601060009054906101000a900460ff1681565b6000806000806000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a80209736040518163ffffffff1660e01b815260040160206040518083038186803b158015612ced57600080fd5b505afa158015612d01573d6000803e3d6000fd5b505050506040513d6020811015612d1757600080fd5b8101908080519060200190929190505050905060008173ffffffffffffffffffffffffffffffffffffffff166346eee1c4886040518263ffffffff1660e01b81526004018082815260200191505060206040518083038186803b158015612d7d57600080fd5b505afa158015612d91573d6000803e3d6000fd5b505050506040513d6020811015612da757600080fd5b81019080805190602001909291905050509050600081111561331f577f5ecf36f705605fd144b15d76100246c2b9af70ede5b61b9f6b4f2a53c577ee14816040518080602001838152602001828103825260058152602001807f636f756e740000000000000000000000000000000000000000000000000000008152506020019250505060405180910390a160008190505b6000811115613270577f5ecf36f705605fd144b15d76100246c2b9af70ede5b61b9f6b4f2a53c577ee148373ffffffffffffffffffffffffffffffffffffffff166377fbb6638a600185036040518363ffffffff1660e01b8152600401808381526020018281526020019250505060206040518083038186803b158015612ebf57600080fd5b505afa158015612ed3573d6000803e3d6000fd5b505050506040513d6020811015612ee957600080fd5b81019080805190602001909291905050506040518080602001838152602001828103825260068152602001807f74657374657200000000000000000000000000000000000000000000000000008152506020019250505060405180910390a17f5ecf36f705605fd144b15d76100246c2b9af70ede5b61b9f6b4f2a53c577ee14876040518080602001838152602001828103825260068152602001807f61637475616c00000000000000000000000000000000000000000000000000008152506020019250505060405180910390a1868373ffffffffffffffffffffffffffffffffffffffff166377fbb6638a600185036040518363ffffffff1660e01b8152600401808381526020018281526020019250505060206040518083038186803b15801561301557600080fd5b505afa158015613029573d6000803e3d6000fd5b505050506040513d602081101561303f57600080fd5b810190808051906020019092919050505010613262578273ffffffffffffffffffffffffffffffffffffffff166377fbb66389600184036040518363ffffffff1660e01b8152600401808381526020018281526020019250505060206040518083038186803b1580156130b157600080fd5b505afa1580156130c5573d6000803e3d6000fd5b505050506040513d60208110156130db57600080fd5b810190808051906020019092919050505093507f5ecf36f705605fd144b15d76100246c2b9af70ede5b61b9f6b4f2a53c577ee14846040518080602001838152602001828103825260138152602001807f5f74696d657374616d70526574726965766564000000000000000000000000008152506020019250505060405180910390a17f5ecf36f705605fd144b15d76100246c2b9af70ede5b61b9f6b4f2a53c577ee148373ffffffffffffffffffffffffffffffffffffffff166393fa49158a876040518363ffffffff1660e01b8152600401808381526020018281526020019250505060206040518083038186803b1580156131d857600080fd5b505afa1580156131ec573d6000803e3d6000fd5b505050506040513d602081101561320257600080fd5b81019080805190602001909291905050506040518080602001838152602001828103825260058152602001807f76616c75650000000000000000000000000000000000000000000000000000008152506020019250505060405180910390a15b808060019003915050612e39565b50600083111561331e5760018273ffffffffffffffffffffffffffffffffffffffff166393fa491589866040518363ffffffff1660e01b8152600401808381526020018281526020019250505060206040518083038186803b1580156132d557600080fd5b505afa1580156132e9573d6000803e3d6000fd5b505050506040513d60208110156132ff57600080fd5b8101908080519060200190929190505050849450945094505050613333565b5b600080600081915080905094509450945050505b9250925092565b60606005600083815260200190815260200160002080548060200260200160405190810160405280929190818152602001828054801561339957602002820191906000526020600020905b815481526020019060010190808311613385575b50505050509050919050565b600060036000838152602001908152602001600020549050919050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663e723e3b53484846040518463ffffffff1660e01b815260040180838152602001828152602001925050506000604051808303818588803b15801561343e57600080fd5b505af1158015613452573d6000803e3d6000fd5b50505050505050565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146134b557600080fd5b7f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1682604051808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019250505060405180910390a180600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505056fea165627a7a72305820143951253846da0db8ee7a4f5d02169c9a95f611493c4f813f356fb1ccd0b76b0029",
  "deployedBytecode": "0x6080604052600436106102305760003560e01c806369949a861161012e578063a1206d4e116100ab578063d269a83c1161006f578063d269a83c14610cb4578063dc7ebf0e14610d1f578063e631def714610daf578063e723e3b514610dfe578063f2fde38b14610e3657610230565b8063a1206d4e14610b31578063ac33a27314610b82578063b63f210a14610bee578063b9ce896b14610c5a578063bad4d21e14610c8557610230565b80637ccc586e116100f25780637ccc586e146109ee5780638710580114610a415780638da5cb5b14610a5857806391bf116f14610aaf5780639a64f07014610ade57610230565b806369949a861461088957806371d8dd19146108ea578063752d49a114610939578063775f75df1461097e5780637b8d56e3146109a957610230565b80633f35ff32116101bc578063556f0dc711610180578063556f0dc71461073157806359abbfe41461075c5780635bf31d4d146107c85780635f059f3e146107f3578063681012e51461085e57610230565b80633f35ff321461047b5780633fcad964146104a65780633fff2816146105075780634482e6f3146105f6578063550921d4146106d857610230565b8063292b8cce11610203578063292b8cce146103205780632aa0bc1f1461035b57806336e9d632146103aa57806337ae9e43146103fd5780633c9177cd1461045057610230565b8063062777ff146102355780630f76c1141461028f57806316e72abb146102ba5780631714b0c5146102e5575b600080fd5b34801561024157600080fd5b5061026e6004803603602081101561025857600080fd5b8101908080359060200190929190505050610e87565b60405180838152602001821515151581526020019250505060405180910390f35b34801561029b57600080fd5b506102a461147d565b6040518082815260200191505060405180910390f35b3480156102c657600080fd5b506102cf6114bd565b6040518082815260200191505060405180910390f35b3480156102f157600080fd5b5061031e6004803603602081101561030857600080fd5b81019080803590602001909291905050506114c3565b005b34801561032c57600080fd5b506103596004803603602081101561034357600080fd5b81019080803590602001909291905050506114f0565b005b34801561036757600080fd5b506103946004803603602081101561037e57600080fd5b81019080803590602001909291905050506119ef565b6040518082815260200191505060405180910390f35b3480156103b657600080fd5b506103e3600480360360208110156103cd57600080fd5b8101908080359060200190929190505050611a0f565b604051808215151515815260200191505060405180910390f35b34801561040957600080fd5b506104366004803603602081101561042057600080fd5b8101908080359060200190929190505050611a2f565b604051808215151515815260200191505060405180910390f35b34801561045c57600080fd5b50610465611a4f565b6040518082815260200191505060405180910390f35b34801561048757600080fd5b50610490611a55565b6040518082815260200191505060405180910390f35b3480156104b257600080fd5b506104df600480360360208110156104c957600080fd5b8101908080359060200190929190505050611a5b565b6040518084151515158152602001838152602001828152602001935050505060405180910390f35b34801561051357600080fd5b506105f46004803603608081101561052a57600080fd5b810190808035906020019064010000000081111561054757600080fd5b82018360208201111561055957600080fd5b8035906020019184600183028401116401000000008311171561057b57600080fd5b90919293919293908035906020019064010000000081111561059c57600080fd5b8201836020820111156105ae57600080fd5b803590602001918460018302840111640100000000831117156105d057600080fd5b90919293919293908035906020019092919080359060200190929190505050611cf6565b005b6106d66004803603608081101561060c57600080fd5b810190808035906020019064010000000081111561062957600080fd5b82018360208201111561063b57600080fd5b8035906020019184600183028401116401000000008311171561065d57600080fd5b90919293919293908035906020019064010000000081111561067e57600080fd5b82018360208201111561069057600080fd5b803590602001918460018302840111640100000000831117156106b257600080fd5b90919293919293908035906020019092919080359060200190929190505050611f89565b005b3480156106e457600080fd5b5061071b600480360360408110156106fb57600080fd5b81019080803590602001909291908035906020019092919050505061208e565b6040518082815260200191505060405180910390f35b34801561073d57600080fd5b506107466120bc565b6040518082815260200191505060405180910390f35b34801561076857600080fd5b506107716120c2565b6040518080602001828103825283818151815260200191508051906020019060200280838360005b838110156107b4578082015181840152602081019050610799565b505050509050019250505060405180910390f35b3480156107d457600080fd5b506107dd61211a565b6040518082815260200191505060405180910390f35b3480156107ff57600080fd5b506108366004803603604081101561081657600080fd5b810190808035906020019092919080359060200190929190505050612120565b6040518084151515158152602001838152602001828152602001935050505060405180910390f35b34801561086a57600080fd5b50610873612528565b6040518082815260200191505060405180910390f35b34801561089557600080fd5b506108c2600480360360208110156108ac57600080fd5b8101908080359060200190929190505050612535565b6040518084151515158152602001838152602001828152602001935050505060405180910390f35b3480156108f657600080fd5b506109236004803603602081101561090d57600080fd5b8101908080359060200190929190505050612631565b6040518082815260200191505060405180910390f35b34801561094557600080fd5b5061097c6004803603604081101561095c57600080fd5b810190808035906020019092919080359060200190929190505050612652565b005b34801561098a57600080fd5b5061099361286f565b6040518082815260200191505060405180910390f35b3480156109b557600080fd5b506109ec600480360360408110156109cc57600080fd5b810190808035906020019092919080359060200190929190505050612875565b005b3480156109fa57600080fd5b50610a2760048036036020811015610a1157600080fd5b8101908080359060200190929190505050612994565b604051808215151515815260200191505060405180910390f35b348015610a4d57600080fd5b50610a566129be565b005b348015610a6457600080fd5b50610a6d612ab7565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b348015610abb57600080fd5b50610ac4612add565b604051808215151515815260200191505060405180910390f35b348015610aea57600080fd5b50610b1760048036036020811015610b0157600080fd5b8101908080359060200190929190505050612af0565b604051808215151515815260200191505060405180910390f35b348015610b3d57600080fd5b50610b8060048036036020811015610b5457600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050612b1a565b005b348015610b8e57600080fd5b50610b97612bb7565b6040518080602001828103825283818151815260200191508051906020019060200280838360005b83811015610bda578082015181840152602081019050610bbf565b505050509050019250505060405180910390f35b348015610bfa57600080fd5b50610c03612c0f565b6040518080602001828103825283818151815260200191508051906020019060200280838360005b83811015610c46578082015181840152602081019050610c2b565b505050509050019250505060405180910390f35b348015610c6657600080fd5b50610c6f612c67565b6040518082815260200191505060405180910390f35b348015610c9157600080fd5b50610c9a612c6d565b604051808215151515815260200191505060405180910390f35b348015610cc057600080fd5b50610cf760048036036040811015610cd757600080fd5b810190808035906020019092919080359060200190929190505050612c80565b6040518084151515158152602001838152602001828152602001935050505060405180910390f35b348015610d2b57600080fd5b50610d5860048036036020811015610d4257600080fd5b810190808035906020019092919050505061333a565b6040518080602001828103825283818151815260200191508051906020019060200280838360005b83811015610d9b578082015181840152602081019050610d80565b505050509050019250505060405180910390f35b348015610dbb57600080fd5b50610de860048036036020811015610dd257600080fd5b81019080803590602001909291905050506133a5565b6040518082815260200191505060405180910390f35b610e3460048036036040811015610e1457600080fd5b8101908080359060200190929190803590602001909291905050506133c2565b005b348015610e4257600080fd5b50610e8560048036036020811015610e5957600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061345b565b005b60008060008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a80209736040518163ffffffff1660e01b815260040160206040518083038186803b158015610ef357600080fd5b505afa158015610f07573d6000803e3d6000fd5b505050506040513d6020811015610f1d57600080fd5b8101908080519060200190929190505050905060008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a80209736040518163ffffffff1660e01b815260040160206040518083038186803b158015610f9957600080fd5b505afa158015610fad573d6000803e3d6000fd5b505050506040513d6020811015610fc357600080fd5b810190808051906020019092919050505090506000808373ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060206040518083038186803b15801561105657600080fd5b505afa15801561106a573d6000803e3d6000fd5b505050506040513d602081101561108057600080fd5b810190808051906020019092919050505090506000600190505b6007805490508111611473576110b08189612120565b809550819950829850505050851561131f57600060095484816110cf57fe5b06840390506000600160056000848152602001908152602001600020805490500160056000848152602001908152602001600020805490506003600085815260200190815260200160002054028a018161112557fe5b0490508060036000848152602001908152602001600020819055507f11d6fa234e47ea0871bd2e6efeb4e7be326a7216c36990b799a61a501cfcf1c38282604051808381526020018281526020019250505060405180910390a17f1bb2bc67728a7c173d466345ee6a8cd0c679d4059e35bd5615eb87363f7dca22818a604051808381526020018281526020019250505060405180910390a160056000838152602001908152602001600020839080600181540180825580915050906001820390600052602060002001600090919290919091505550600015156002600084815260200190815260200160002060009054906101000a900460ff16151514156112bd57600682908060018154018082558091505090600182039060005260206000200160009091929091909150555060016002600084815260200190815260200160002060006101000a81548160ff021916908315150217905550817f2afa03c814297ffc234ff967b6f0863d3c358be243103f20217c8d3a4d39f9c08a6040518082815260200191505060405180910390a2611318565b600115156004600084815260200190815260200160002060009054906101000a900460ff16151514156113175760006004600084815260200190815260200160002060006101000a81548160ff0219169083151502179055505b5b5050611466565b6007805490508573ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060206040518083038186803b1580156113a257600080fd5b505afa1580156113b6573d6000803e3d6000fd5b505050506040513d60208110156113cc57600080fd5b81019080805190602001909291905050501115611465578373ffffffffffffffffffffffffffffffffffffffff1663752d49a182600780549050858161140e57fe5b046040518363ffffffff1660e01b81526004018083815260200182815260200192505050600060405180830381600087803b15801561144c57600080fd5b505af1158015611460573d6000803e3d6000fd5b505050505b5b808060010191505061109a565b5050505050915091565b6000806006805490501161149057600080fd5b6114b86006600160068054905003815481106114a857fe5b90600052602060002001546133a5565b905090565b600f5481565b60095442816114ce57fe5b064203600c819055508060095442816114e357fe5b06420301600d8190555050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a80209736040518163ffffffff1660e01b815260040160206040518083038186803b15801561155957600080fd5b505afa15801561156d573d6000803e3d6000fd5b505050506040513d602081101561158357600080fd5b8101908080519060200190929190505050905060008173ffffffffffffffffffffffffffffffffffffffff1663612c8f7f60405180807f63757272656e74546f74616c5469707300000000000000000000000000000000815250601001905060405180910390206040518263ffffffff1660e01b81526004018082815260200191505060206040518083038186803b15801561161e57600080fd5b505afa158015611632573d6000803e3d6000fd5b505050506040513d602081101561164857600080fd5b810190808051906020019092919050505090506060333083604051602401808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200193505050506040516020818303038152906040527f23b872dd000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050905060008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a80209736040518163ffffffff1660e01b815260040160206040518083038186803b1580156117be57600080fd5b505afa1580156117d2573d6000803e3d6000fd5b505050506040513d60208110156117e857600080fd5b81019080805190602001909291905050509050600060608273ffffffffffffffffffffffffffffffffffffffff16846040518082805190602001908083835b6020831061184a5780518252602082019150602081019050602083039250611827565b6001836020036101000a0380198251168184511680821785525050505050509050019150506000604051808303816000865af19150503d80600081146118ac576040519150601f19603f3d011682016040523d82523d6000602084013e6118b1565b606091505b5091509150816118c057600080fd5b6002600088815260200190815260200160002060009054906101000a900460ff166118ea57600080fd5b600b54870160095442816118fa57fe5b064203111561190857600080fd5b60016004600089815260200190815260200160002060006101000a81548160ff02191690831515021790555060088790806001815401808255809150509060018203906000526020600020016000909192909190915055507fb199747b7b98ffd681a09c542f7f62ba4972f6f5b7d791b6f8bba36862cbdd2b3388600360008b815260200190815260200160002054604051808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001838152602001828152602001935050505060405180910390a150505050505050565b600060056000838152602001908152602001600020805490509050919050565b60026020528060005260406000206000915054906101000a900460ff1681565b60046020528060005260406000206000915054906101000a900460ff1681565b600d5481565b600e5481565b6000806000806000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a80209736040518163ffffffff1660e01b815260040160206040518083038186803b158015611ac857600080fd5b505afa158015611adc573d6000803e3d6000fd5b505050506040513d6020811015611af257600080fd5b8101908080519060200190929190505050905060008173ffffffffffffffffffffffffffffffffffffffff166346eee1c4876040518263ffffffff1660e01b81526004018082815260200191505060206040518083038186803b158015611b5857600080fd5b505afa158015611b6c573d6000803e3d6000fd5b505050506040513d6020811015611b8257600080fd5b810190808051906020019092919050505090506000811115611cdb578173ffffffffffffffffffffffffffffffffffffffff166377fbb66387600184036040518363ffffffff1660e01b8152600401808381526020018281526020019250505060206040518083038186803b158015611bfa57600080fd5b505afa158015611c0e573d6000803e3d6000fd5b505050506040513d6020811015611c2457600080fd5b8101908080519060200190929190505050925060018273ffffffffffffffffffffffffffffffffffffffff166393fa491588866040518363ffffffff1660e01b8152600401808381526020018281526020019250505060206040518083038186803b158015611c9257600080fd5b505afa158015611ca6573d6000803e3d6000fd5b505050506040513d6020811015611cbc57600080fd5b8101908080519060200190929190505050849450945094505050611cef565b600080600081915080905094509450945050505b9193909250565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a80209736040518163ffffffff1660e01b815260040160206040518083038186803b158015611d5f57600080fd5b505afa158015611d73573d6000803e3d6000fd5b505050506040513d6020811015611d8957600080fd5b810190808051906020019092919050505090506000821115611ea5578073ffffffffffffffffffffffffffffffffffffffff166323b872dd3330856040518463ffffffff1660e01b8152600401808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019350505050602060405180830381600087803b158015611e6057600080fd5b505af1158015611e74573d6000803e3d6000fd5b505050506040513d6020811015611e8a57600080fd5b8101908080519060200190929190505050611ea457600080fd5b5b8073ffffffffffffffffffffffffffffffffffffffff16633fff28168888888888886040518763ffffffff1660e01b81526004018080602001806020018581526020018481526020018381038352898982818152602001925080828437600081840152601f19601f8201169050808301925050508381038252878782818152602001925080828437600081840152601f19601f82011690508083019250505098505050505050505050600060405180830381600087803b158015611f6857600080fd5b505af1158015611f7c573d6000803e3d6000fd5b5050505050505050505050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16634482e6f3348888888888886040518863ffffffff1660e01b81526004018080602001806020018581526020018481526020018381038352898982818152602001925080828437600081840152601f19601f8201169050808301925050508381038252878782818152602001925080828437600081840152601f19601f820116905080830192505050985050505050505050506000604051808303818588803b15801561206d57600080fd5b505af1158015612081573d6000803e3d6000fd5b5050505050505050505050565b600560205281600052604060002081815481106120a757fe5b90600052602060002001600091509150505481565b60095481565b6060600680548060200260200160405190810160405280929190818152602001828054801561211057602002820191906000526020600020905b8154815260200190600101908083116120fc575b5050505050905090565b600b5481565b6000806000806000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a80209736040518163ffffffff1660e01b815260040160206040518083038186803b15801561218d57600080fd5b505afa1580156121a1573d6000803e3d6000fd5b505050506040513d60208110156121b757600080fd5b8101908080519060200190929190505050905060008173ffffffffffffffffffffffffffffffffffffffff166346eee1c4886040518263ffffffff1660e01b81526004018082815260200191505060206040518083038186803b15801561221d57600080fd5b505afa158015612231573d6000803e3d6000fd5b505050506040513d602081101561224757600080fd5b81019080805190602001909291905050509050600081111561250d5760008190505b600081111561245e57868373ffffffffffffffffffffffffffffffffffffffff166377fbb6638a600185036040518363ffffffff1660e01b8152600401808381526020018281526020019250505060206040518083038186803b1580156122cf57600080fd5b505afa1580156122e3573d6000803e3d6000fd5b505050506040513d60208110156122f957600080fd5b81019080805190602001909291905050501180156123b157506201518042038373ffffffffffffffffffffffffffffffffffffffff166377fbb6638a600185036040518363ffffffff1660e01b8152600401808381526020018281526020019250505060206040518083038186803b15801561237457600080fd5b505afa158015612388573d6000803e3d6000fd5b505050506040513d602081101561239e57600080fd5b8101908080519060200190929190505050105b15612450578273ffffffffffffffffffffffffffffffffffffffff166377fbb66389600184036040518363ffffffff1660e01b8152600401808381526020018281526020019250505060206040518083038186803b15801561241257600080fd5b505afa158015612426573d6000803e3d6000fd5b505050506040513d602081101561243c57600080fd5b810190808051906020019092919050505093505b808060019003915050612269565b50600083111561250c5760018273ffffffffffffffffffffffffffffffffffffffff166393fa491589866040518363ffffffff1660e01b8152600401808381526020018281526020019250505060206040518083038186803b1580156124c357600080fd5b505afa1580156124d7573d6000803e3d6000fd5b505050506040513d60208110156124ed57600080fd5b8101908080519060200190929190505050849450945094505050612521565b5b600080600081915080905094509450945050505b9250925092565b6000600880549050905090565b600080600080600680549050905060008111156126175760008190505b60008111156125f457856006600183038154811061256c57fe5b9060005260206000200154101580156125c3575060001515600460006006600185038154811061259857fe5b9060005260206000200154815260200190815260200160002060009054906101000a900460ff161515145b156125e657600660018203815481106125d857fe5b906000526020600020015492505b808060019003915050612552565b506000821115612616576001612609836133a5565b839350935093505061262a565b5b6000806000819150809050935093509350505b9193909250565b60006008828154811061264057fe5b90600052602060002001549050919050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a80209736040518163ffffffff1660e01b815260040160206040518083038186803b1580156126bb57600080fd5b505afa1580156126cf573d6000803e3d6000fd5b505050506040513d60208110156126e557600080fd5b810190808051906020019092919050505090508073ffffffffffffffffffffffffffffffffffffffff166323b872dd3330856040518463ffffffff1660e01b8152600401808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019350505050602060405180830381600087803b1580156127b357600080fd5b505af11580156127c7573d6000803e3d6000fd5b505050506040513d60208110156127dd57600080fd5b81019080805190602001909291905050506127f757600080fd5b8073ffffffffffffffffffffffffffffffffffffffff1663752d49a184846040518363ffffffff1660e01b81526004018083815260200182815260200192505050600060405180830381600087803b15801561285257600080fd5b505af1158015612866573d6000803e3d6000fd5b50505050505050565b600c5481565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146128cf57600080fd5b600015156128dc83612af0565b1515146128e857600080fd5b80600360008481526020019081526020016000208190555060016002600084815260200190815260200160002060006101000a81548160ff0219169083151502179055506006829080600181540180825580915050906001820390600052602060002001600090919290919091505550817f2afa03c814297ffc234ff967b6f0863d3c358be243103f20217c8d3a4d39f9c0826040518082815260200191505060405180910390a25050565b60006004600083815260200190815260200160002060009054906101000a900460ff169050919050565b6000806129cc600c54612af0565b15612ab3576129dc600c54612535565b600e60008295508391905055829450505050818015612a025750612a01600d54612af0565b5b15612ab257612a12600d54612535565b600f600082955083919050558294505050508115612ab157600e54600f541115612a52576001601060006101000a81548160ff0219169083151502179055505b6001601060016101000a81548160ff0219169083151502179055507fbbdea414ca4370d674fd5e370fbc6d7da2dafff34ec019faaf1c36b1180a314b600e54600f54604051808381526020018281526020019250505060405180910390a15b5b5b5050565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b601060019054906101000a900460ff1681565b60006002600083815260200190815260200160002060009054906101000a900460ff169050919050565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614612b7457600080fd5b806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60606007805480602002602001604051908101604052809291908181526020018280548015612c0557602002820191906000526020600020905b815481526020019060010190808311612bf1575b5050505050905090565b60606008805480602002602001604051908101604052809291908181526020018280548015612c5d57602002820191906000526020600020905b815481526020019060010190808311612c49575b5050505050905090565b600a5481565b601060009054906101000a900460ff1681565b6000806000806000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a80209736040518163ffffffff1660e01b815260040160206040518083038186803b158015612ced57600080fd5b505afa158015612d01573d6000803e3d6000fd5b505050506040513d6020811015612d1757600080fd5b8101908080519060200190929190505050905060008173ffffffffffffffffffffffffffffffffffffffff166346eee1c4886040518263ffffffff1660e01b81526004018082815260200191505060206040518083038186803b158015612d7d57600080fd5b505afa158015612d91573d6000803e3d6000fd5b505050506040513d6020811015612da757600080fd5b81019080805190602001909291905050509050600081111561331f577f5ecf36f705605fd144b15d76100246c2b9af70ede5b61b9f6b4f2a53c577ee14816040518080602001838152602001828103825260058152602001807f636f756e740000000000000000000000000000000000000000000000000000008152506020019250505060405180910390a160008190505b6000811115613270577f5ecf36f705605fd144b15d76100246c2b9af70ede5b61b9f6b4f2a53c577ee148373ffffffffffffffffffffffffffffffffffffffff166377fbb6638a600185036040518363ffffffff1660e01b8152600401808381526020018281526020019250505060206040518083038186803b158015612ebf57600080fd5b505afa158015612ed3573d6000803e3d6000fd5b505050506040513d6020811015612ee957600080fd5b81019080805190602001909291905050506040518080602001838152602001828103825260068152602001807f74657374657200000000000000000000000000000000000000000000000000008152506020019250505060405180910390a17f5ecf36f705605fd144b15d76100246c2b9af70ede5b61b9f6b4f2a53c577ee14876040518080602001838152602001828103825260068152602001807f61637475616c00000000000000000000000000000000000000000000000000008152506020019250505060405180910390a1868373ffffffffffffffffffffffffffffffffffffffff166377fbb6638a600185036040518363ffffffff1660e01b8152600401808381526020018281526020019250505060206040518083038186803b15801561301557600080fd5b505afa158015613029573d6000803e3d6000fd5b505050506040513d602081101561303f57600080fd5b810190808051906020019092919050505010613262578273ffffffffffffffffffffffffffffffffffffffff166377fbb66389600184036040518363ffffffff1660e01b8152600401808381526020018281526020019250505060206040518083038186803b1580156130b157600080fd5b505afa1580156130c5573d6000803e3d6000fd5b505050506040513d60208110156130db57600080fd5b810190808051906020019092919050505093507f5ecf36f705605fd144b15d76100246c2b9af70ede5b61b9f6b4f2a53c577ee14846040518080602001838152602001828103825260138152602001807f5f74696d657374616d70526574726965766564000000000000000000000000008152506020019250505060405180910390a17f5ecf36f705605fd144b15d76100246c2b9af70ede5b61b9f6b4f2a53c577ee148373ffffffffffffffffffffffffffffffffffffffff166393fa49158a876040518363ffffffff1660e01b8152600401808381526020018281526020019250505060206040518083038186803b1580156131d857600080fd5b505afa1580156131ec573d6000803e3d6000fd5b505050506040513d602081101561320257600080fd5b81019080805190602001909291905050506040518080602001838152602001828103825260058152602001807f76616c75650000000000000000000000000000000000000000000000000000008152506020019250505060405180910390a15b808060019003915050612e39565b50600083111561331e5760018273ffffffffffffffffffffffffffffffffffffffff166393fa491589866040518363ffffffff1660e01b8152600401808381526020018281526020019250505060206040518083038186803b1580156132d557600080fd5b505afa1580156132e9573d6000803e3d6000fd5b505050506040513d60208110156132ff57600080fd5b8101908080519060200190929190505050849450945094505050613333565b5b600080600081915080905094509450945050505b9250925092565b60606005600083815260200190815260200160002080548060200260200160405190810160405280929190818152602001828054801561339957602002820191906000526020600020905b815481526020019060010190808311613385575b50505050509050919050565b600060036000838152602001908152602001600020549050919050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663e723e3b53484846040518463ffffffff1660e01b815260040180838152602001828152602001925050506000604051808303818588803b15801561343e57600080fd5b505af1158015613452573d6000803e3d6000fd5b50505050505050565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146134b557600080fd5b7f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1682604051808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019250505060405180910390a180600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505056fea165627a7a72305820143951253846da0db8ee7a4f5d02169c9a95f611493c4f813f356fb1ccd0b76b0029",
  "sourceMap": "157:2260:14:-;;;1169:229;8:9:-1;5:2;;;30:1;27;20:12;5:2;1169:229:14;;;;;;;;;;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;1169:229:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;19:11:-1;14:3;11:20;8:2;;;44:1;41;34:12;8:2;71:11;66:3;62:21;55:28;;123:4;118:3;114:14;159:9;141:16;138:31;135:2;;;182:1;179;172:12;135:2;219:3;213:10;331:9;325:2;311:12;307:21;289:16;285:44;282:59;261:11;247:12;244:29;233:116;230:2;;;362:1;359;352:12;230:2;0:373;;1169:229:14;;;;;;;;;;;;;;;;;1310:13;1324:19;1344:14;1360:11;1372:12;2437:13:13;647::16;613:18;;:48;;;;;;;;;;;;;;;;;;676:10;668:5;;:18;;;;;;;;;;;;;;;;;;565:128;2475:19:13;2462:10;:32;;;;2514:14;2498:13;:30;;;;2546:12;2532:11;:26;;;;2575:11;2562:10;:24;;;;;;;;;;;;:::i;:::-;;2297:293;;;;;1169:229:14;;;;;157:2260;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;",
  "deployedSourceMap": "157:2260:14:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5188:2559:13;;8:9:-1;5:2;;;30:1;27;20:12;5:2;5188:2559:13;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;5188:2559:13;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9543:162;;8:9:-1;5:2;;;30:1;27;20:12;5:2;9543:162:13;;;:::i;:::-;;;;;;;;;;;;;;;;;;;269:20:14;;8:9:-1;5:2;;;30:1;27;20:12;5:2;269:20:14;;;:::i;:::-;;;;;;;;;;;;;;;;;;;1566:147;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1566:147:14;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1566:147:14;;;;;;;;;;;;;;;;;:::i;:::-;;3533:1314:13;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3533:1314:13;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;3533:1314:13;;;;;;;;;;;;;;;;;:::i;:::-;;9048:136;;8:9:-1;5:2;;;30:1;27;20:12;5:2;9048:136:13;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;9048:136:13;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;305:36;;8:9:-1;5:2;;;30:1;27;20:12;5:2;305:36:13;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;305:36:13;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;490:43;;8:9:-1;5:2;;;30:1;27;20:12;5:2;490:43:13;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;490:43:13;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;218:23:14;;8:9:-1;5:2;;;30:1;27;20:12;5:2;218:23:14;;;:::i;:::-;;;;;;;;;;;;;;;;;;;244:22;;8:9:-1;5:2;;;30:1;27;20:12;5:2;244:22:14;;;:::i;:::-;;;;;;;;;;;;;;;;;;;971:555:16;;8:9:-1;5:2;;;30:1;27;20:12;5:2;971:555:16;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;971:555:16;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4835:326;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4835:326:16;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;4835:326:16;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;4835:326:16;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;4835:326:16;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;4835:326:16;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;4835:326:16;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;4835:326:16;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;4835:326:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;5642:225;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;5642:225:16;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;5642:225:16;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;5642:225:16;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;5642:225:16;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;5642:225:16;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;5642:225:16;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;5642:225:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;612:49:13;;8:9:-1;5:2;;;30:1;27;20:12;5:2;612:49:13;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;612:49:13;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;1084:23;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1084:23:13;;;:::i;:::-;;;;;;;;;;;;;;;;;;;9828:86;;8:9:-1;5:2;;;30:1;27;20:12;5:2;9828:86:13;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;9828:86:13;;;;;;;;;;;;;;;;;1149:25;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1149:25:13;;;:::i;:::-;;;;;;;;;;;;;;;;;;;2000:806:16;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2000:806:16;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2000:806:16;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10819:105:13;;8:9:-1;5:2;;;30:1;27;20:12;5:2;10819:105:13;;;:::i;:::-;;;;;;;;;;;;;;;;;;;7996:505;;8:9:-1;5:2;;;30:1;27;20:12;5:2;7996:505:13;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;7996:505:13;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11552:115;;8:9:-1;5:2;;;30:1;27;20:12;5:2;11552:115:13;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;11552:115:13;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;6025:224:16;;8:9:-1;5:2;;;30:1;27;20:12;5:2;6025:224:16;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;6025:224:16;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;190:25:14;;8:9:-1;5:2;;;30:1;27;20:12;5:2;190:25:14;;;:::i;:::-;;;;;;;;;;;;;;;;;;;2811:551:13;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2811:551:13;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2811:551:13;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;11346:105;;8:9:-1;5:2;;;30:1;27;20:12;5:2;11346:105:13;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;11346:105:13;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;1944:471:14;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1944:471:14;;;:::i;:::-;;267:20:16;;8:9:-1;5:2;;;30:1;27;20:12;5:2;267:20:16;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;315:25:14;;8:9:-1;5:2;;;30:1;27;20:12;5:2;315:25:14;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;9337:96:13;;8:9:-1;5:2;;;30:1;27;20:12;5:2;9337:96:13;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;9337:96:13;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;6764:164:16;;8:9:-1;5:2;;;30:1;27;20:12;5:2;6764:164:16;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;6764:164:16;;;;;;;;;;;;;;;;;;;:::i;:::-;;10068:86:13;;8:9:-1;5:2;;;30:1;27;20:12;5:2;10068:86:13;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;10068:86:13;;;;;;;;;;;;;;;;;11048:99;;8:9:-1;5:2;;;30:1;27;20:12;5:2;11048:99:13;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;11048:99:13;;;;;;;;;;;;;;;;;1110:22;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1110:22:13;;;:::i;:::-;;;;;;;;;;;;;;;;;;;292:20:14;;8:9:-1;5:2;;;30:1;27;20:12;5:2;292:20:14;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;3154:1030:16;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3154:1030:16;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;3154:1030:16;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10536:129:13;;8:9:-1;5:2;;;30:1;27;20:12;5:2;10536:129:13;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;10536:129:13;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;10536:129:13;;;;;;;;;;;;;;;;;8657:124;;8:9:-1;5:2;;;30:1;27;20:12;5:2;8657:124:13;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;8657:124:13;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;6495:158:16;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;6495:158:16;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;7024:200;;8:9:-1;5:2;;;30:1;27;20:12;5:2;7024:200:16;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;7024:200:16;;;;;;;;;;;;;;;;;;;:::i;:::-;;5188:2559:13;5245:11;5258:12;5481:20;5517:18;;;;;;;;;;;:39;;;:41;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;5517:41:13;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;5517:41:13;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;5517:41:13;;;;;;;;;;;;;;;;5481:78;;5563:18;5591;;;;;;;;;;;:39;;;:41;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;5591:41:13;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;5591:41:13;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;5591:41:13;;;;;;;;;;;;;;;;5563:70;;5637:24;5665:20;5688:7;:17;;;5714:4;5688:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;5688:32:13;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;5688:32:13;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;5688:32:13;;;;;;;;;;;;;;;;5665:55;;5895:6;5904:1;5895:10;;5891:1853;5912:10;:17;;;;5907:1;:22;5891:1853;;6138:39;6164:1;6166:10;6138:25;:39::i;:::-;6099:78;;;;;;;;;;;;6185:7;6182:1558;;;6199:13;6259:11;;6237:19;:33;;;;;;6215:19;:55;6199:71;;6398:14;6532:1;6494:18;:28;6513:8;6494:28;;;;;;;;;;;:35;;;;:39;6454:18;:28;6473:8;6454:28;;;;;;;;;;;:35;;;;6424:17;:27;6442:8;6424:27;;;;;;;;;;;;:65;6415:6;:74;6414:120;;;;;;6398:136;;6630:9;6600:17;:27;6618:8;6600:27;;;;;;;;;;;:39;;;;6650:37;6668:8;6677:9;6650:37;;;;;;;;;;;;;;;;;;;;;;;;6698:24;6705:9;6715:6;6698:24;;;;;;;;;;;;;;;;;;;;;;;;6836:18;:28;6855:8;6836:28;;;;;;;;;;;6870:1;6836:36;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;6836:36:13;;;;;;;;;;;;;;;;;;;;;;7173:5;7152:26;;:7;:17;7160:8;7152:17;;;;;;;;;;;;;;;;;;;;;:26;;;7149:238;;;7188:10;7204:8;7188:25;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;7188:25:13;;;;;;;;;;;;;;;;;;;;;;7242:4;7222:7;:17;7230:8;7222:17;;;;;;;;;;;;:24;;;;;;;;;;;;;;;;;;7272:8;7260:28;7281:6;7260:28;;;;;;;;;;;;;;;;;;7149:238;;;7336:4;7308:32;;:14;:24;7323:8;7308:24;;;;;;;;;;;;;;;;;;;;;:32;;;7305:82;;;7375:5;7348:14;:24;7363:8;7348:24;;;;;;;;;;;;:32;;;;;;;;;;;;;;;;;;7305:82;7149:238;6182:1558;;;;;7593:10;:17;;;;7558:7;:17;;;7584:4;7558:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;7558:32:13;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;7558:32:13;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;7558:32:13;;;;;;;;;;;;;;;;:52;7555:180;;;7670:11;:18;;;7689:1;7710:10;:17;;;;7692:15;:35;;;;;;7670:58;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;7670:58:13;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;7670:58:13;;;;7555:180;6182:1558;5931:3;;;;;;;5891:1853;;;;5188:2559;;;;;;;:::o;9543:162::-;9592:4;9632:1;9612:10;:17;;;;:21;9604:30;;;;;;9645:56;9668:10;9698:1;9679:10;:17;;;;:20;9668:32;;;;;;;;;;;;;;;;9645:22;:56::i;:::-;9638:63;;9543:162;:::o;269:20:14:-;;;;:::o;1566:147::-;1645:11;;1639:3;:17;;;;;;1633:3;:23;1617:13;:39;;;;1700:9;1686:11;;1680:3;:17;;;;;;1674:3;:23;:35;1660:11;:49;;;;1566:147;:::o;3533:1314:13:-;3594:20;3630:18;;;;;;;;;;;:39;;;:41;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3630:41:13;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;3630:41:13;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;3630:41:13;;;;;;;;;;;;;;;;3594:78;;3682:16;3701:7;:18;;;3720:29;;;;;;;;;;;;;;;;;;;3701:49;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3701:49:13;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;3701:49:13;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;3701:49:13;;;;;;;;;;;;;;;;3682:68;;3926:16;4009:10;4028:4;4034:11;3945:101;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;3945:101:13;;;;;;;38:4:-1;29:7;25:18;67:10;61:17;96:58;199:8;192:4;186;182:15;179:29;167:10;160:49;0:215;;;3945:101:13;3926:120;;4082:12;4098:18;;;;;;;;;;;:39;;;:41;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4098:41:13;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;4098:41:13;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;4098:41:13;;;;;;;;;;;;;;;;4082:57;;4240:12;4254:17;4275:4;:9;;4285:3;4275:14;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;36:153;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;4275:14:13;;;;;;;;;;;;;;;;;;;;;;;;14:1:-1;21;16:31;;;;75:4;69:11;64:16;;144:4;140:9;133:4;115:16;111:27;107:43;104:1;100:51;94:4;87:65;169:16;166:1;159:27;225:16;222:1;215:4;212:1;208:12;193:49;7:242;;16:31;36:4;31:9;;7:242;;4239:50:13;;;;4344:7;4336:16;;;;;;4439:7;:19;4447:10;4439:19;;;;;;;;;;;;;;;;;;;;;4431:28;;;;;;4552:13;;4539:10;:26;4523:11;;4517:3;:17;;;;;;4511:3;:23;:54;;4503:63;;;;;;4666:4;4637:14;:26;4652:10;4637:26;;;;;;;;;;;;:33;;;;;;;;;;;;;;;;;;4732:19;4757:10;4732:36;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;4732:36:13;;;;;;;;;;;;;;;;;;;;;;4777:66;4791:10;4802;4813:17;:29;4831:10;4813:29;;;;;;;;;;;;4777:66;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3533:1314;;;;;;;:::o;9048:136::-;9126:4;9143:18;:30;9162:10;9143:30;;;;;;;;;;;:37;;;;9136:44;;9048:136;;;:::o;305:36::-;;;;;;;;;;;;;;;;;;;;;;:::o;490:43::-;;;;;;;;;;;;;;;;;;;;;;:::o;218:23:14:-;;;;:::o;244:22::-;;;;:::o;971:555:16:-;1033:15;1050:10;1062:24;1092:20;1128:18;;;;;;;;;;;:39;;;:41;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1128:41:16;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1128:41:16;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1128:41:16;;;;;;;;;;;;;;;;1092:78;;1174:11;1188:7;:35;;;1224:10;1188:47;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1188:47:16;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1188:47:16;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1188:47:16;;;;;;;;;;;;;;;;1174:61;;1252:1;1243:6;:10;1240:256;;;1282:7;:39;;;1322:10;1341:1;1333:6;:9;1282:61;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1282:61:16;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1282:61:16;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1282:61:16;;;;;;;;;;;;;;;;1260:83;;1407:4;1412:7;:20;;;1433:10;1444:19;1412:52;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1412:52:16;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1412:52:16;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1412:52:16;;;;;;;;;;;;;;;;1465:19;1400:85;;;;;;;;;;1240:256;1512:5;1518:1;1520;1505:17;;;;;;;;;;;;;;971:555;;;;;;:::o;4835:326::-;4947:14;4971:18;;;;;;;;;;;:39;;;:41;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4971:41:16;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;4971:41:16;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;4971:41:16;;;;;;;;;;;;;;;;4947:66;;5027:1;5020:4;:8;5017:82;;;5042:7;:20;;;5063:10;5082:4;5088;5042:51;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;5042:51:16;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;5042:51:16;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;5042:51:16;;;;;;;;;;;;;;;;5034:60;;;;;;5017:82;5102:7;:19;;;5122:8;;5131:7;;5139:12;5152:4;5102:55;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;5102:55:16;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;5102:55:16;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;5102:55:16;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;5102:55:16;;;;4835:326;;;;;;;:::o;5642:225::-;5771:18;;;;;;;;;;;:39;;;5817:9;5828:8;;5837:7;;5845:12;5858:4;5771:92;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;5771:92:16;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;5771:92:16;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;5771:92:16;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;5771:92:16;;;;;5642:225;;;;;;:::o;612:49:13:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;1084:23::-;;;;:::o;9828:86::-;9875:13;9900:10;9893:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9828:86;:::o;1149:25::-;;;;:::o;2000:806:16:-;2084:4;2089;2094:24;2124:20;2160:18;;;;;;;;;;;:39;;;:41;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2160:41:16;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2160:41:16;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2160:41:16;;;;;;;;;;;;;;;;2124:78;;2206:11;2220:7;:35;;;2256:10;2220:47;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2220:47:16;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2220:47:16;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2220:47:16;;;;;;;;;;;;;;;;2206:61;;2283:1;2274:6;:10;2271:505;;;2295:6;2304;2295:15;;2291:344;2315:1;2311;:5;2291:344;;;2389:10;2331:7;:39;;;2371:10;2384:1;2382;:3;2331:55;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2331:55:16;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2331:55:16;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2331:55:16;;;;;;;;;;;;;;;;:68;:153;;;;;2479:5;2461:15;:23;2403:7;:39;;;2443:10;2456:1;2454;:3;2403:55;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2403:55:16;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2403:55:16;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2403:55:16;;;;;;;;;;;;;;;;:81;2331:153;2328:301;;;2515:7;:39;;;2555:10;2568:1;2566;:3;2515:55;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2515:55:16;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2515:55:16;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2515:55:16;;;;;;;;;;;;;;;;2493:77;;2328:301;2317:3;;;;;;;;2291:344;;;;2665:1;2643:19;:23;2640:126;;;2681:4;2686:7;:20;;;2707:10;2718:19;2686:52;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2686:52:16;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2686:52:16;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2686:52:16;;;;;;;;;;;;;;;;2739:19;2674:85;;;;;;;;;;2640:126;2271:505;2792:5;2798:1;2800;2785:17;;;;;;;;;;;;;;2000:806;;;;;;:::o;10819:105:13:-;10878:4;10894:19;:26;;;;10887:33;;10819:105;:::o;7996:505::-;8071:4;8076;8082:24;8111:11;8125:10;:17;;;;8111:31;;8158:1;8149:6;:10;8146:325;;;8170:6;8179;8170:15;;8166:173;8190:1;8186;:5;8166:173;;;8225:10;8206;8219:1;8217;:3;8206:15;;;;;;;;;;;;;;;;:29;;:73;;;;;8274:5;8239:40;;:14;:31;8254:10;8267:1;8265;:3;8254:15;;;;;;;;;;;;;;;;8239:31;;;;;;;;;;;;;;;;;;;;;:40;;;8206:73;8203:130;;;8310:10;8323:1;8321;:3;8310:15;;;;;;;;;;;;;;;;8288:37;;8203:130;8192:3;;;;;;;;8166:173;;;;8369:1;8347:19;:23;8344:117;;;8385:4;8390:43;8413:19;8390:22;:43::i;:::-;8434:19;8378:76;;;;;;;;;8344:117;8146:325;8487:5;8493:1;8495;8480:17;;;;;;;;;;;;;7996:505;;;;;;:::o;11552:115::-;11620:4;11636:19;11656:6;11636:27;;;;;;;;;;;;;;;;11629:34;;11552:115;;;:::o;6025:224:16:-;6080:14;6104:18;;;;;;;;;;;:39;;;:41;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;6104:41:16;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;6104:41:16;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;6104:41:16;;;;;;;;;;;;;;;;6080:66;;6158:7;:20;;;6179:10;6198:4;6204;6158:51;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;6158:51:16;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;6158:51:16;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;6158:51:16;;;;;;;;;;;;;;;;6150:60;;;;;;6214:7;:14;;;6229:10;6240:4;6214:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;6214:31:16;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;6214:31:16;;;;6025:224;;;:::o;190:25:14:-;;;;:::o;2811:551:13:-;2928:5;;;;;;;;;;;2914:19;;:10;:19;;;2906:28;;;;;;3036:5;3010:31;;:22;3021:10;3010;:22::i;:::-;:31;;;3002:40;;;;;;3097:6;3065:17;:29;3083:10;3065:29;;;;;;;;;;;:38;;;;3172:4;3150:7;:19;3158:10;3150:19;;;;;;;;;;;;:26;;;;;;;;;;;;;;;;;;3223:10;3239;3223:27;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;3223:27:13;;;;;;;;;;;;;;;;;;;;;;3339:10;3327:30;3350:6;3327:30;;;;;;;;;;;;;;;;;;2811:551;;:::o;11346:105::-;11405:4;11421:14;:26;11436:10;11421:26;;;;;;;;;;;;;;;;;;;;;11414:33;;11346:105;;;:::o;1944:471:14:-;1983:12;1999:10;2016:25;2027:13;;2016:10;:25::i;:::-;2013:399;;;2078:43;2107:13;;2078:28;:43::i;:::-;2057:10;;2047:74;;;;;;;;;;;;;;2129:7;:34;;;;;2140:23;2151:11;;2140:10;:23::i;:::-;2129:34;2126:282;;;2199:41;2228:11;;2199:28;:41::i;:::-;2180:8;;2170:70;;;;;;;;;;;;;;2249:7;2246:156;;;2278:10;;2267:8;;:21;2264:56;;;2308:4;2297:8;;:15;;;;;;;;;;;;;;;;;;2264:56;2342:4;2326:13;;:20;;;;;;;;;;;;;;;;;;2358:37;2374:10;;2386:8;;2358:37;;;;;;;;;;;;;;;;;;;;;;;;2246:156;2126:282;2013:399;1944:471;;:::o;267:20:16:-;;;;;;;;;;;;;:::o;315:25:14:-;;;;;;;;;;;;;:::o;9337:96:13:-;9394:4;9410:7;:19;9418:10;9410:19;;;;;;;;;;;;;;;;;;;;;9403:26;;9337:96;;;:::o;6764:164:16:-;6845:5;;;;;;;;;;;6831:19;;:10;:19;;;6823:28;;;;;;6910:13;6876:18;;:48;;;;;;;;;;;;;;;;;;6764:164;:::o;10068:86:13:-;10115:13;10140:10;10133:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10068:86;:::o;11048:99::-;11099:13;11124:19;11117:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11048:99;:::o;1110:22::-;;;;:::o;292:20:14:-;;;;;;;;;;;;;:::o;3154:1030:16:-;3229:16;3247:11;3260:24;3289:20;3325:18;;;;;;;;;;;:39;;;:41;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3325:41:16;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;3325:41:16;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;3325:41:16;;;;;;;;;;;;;;;;3289:78;;3371:11;3385:7;:35;;;3421:10;3385:47;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3385:47:16;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;3385:47:16;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;3385:47:16;;;;;;;;;;;;;;;;3371:61;;3449:1;3440:6;:10;3437:717;;;3462:21;3476:6;3462:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3493:6;3502;3493:15;;3489:524;3513:1;3509;:5;3489:524;;;3531:71;3546:7;:39;;;3586:10;3599:1;3597;:3;3546:55;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3546:55:16;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;3546:55:16;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;3546:55:16;;;;;;;;;;;;;;;;3531:71;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3614:27;3630:10;3614:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3711:10;3652:7;:39;;;3692:10;3705:1;3703;:3;3652:55;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3652:55:16;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;3652:55:16;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;3652:55:16;;;;;;;;;;;;;;;;:69;3649:358;;3752:7;:39;;;3792:10;3805:1;3803;:3;3752:55;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3752:55:16;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;3752:55:16;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;3752:55:16;;;;;;;;;;;;;;;;3730:77;;3871:48;3899:19;3871:48;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3932:67;3946:7;:20;;;3967:10;3978:19;3946:52;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3946:52:16;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;3946:52:16;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;3946:52:16;;;;;;;;;;;;;;;;3932:67;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3649:358;3515:3;;;;;;;;3489:524;;;;4043:1;4021:19;:23;4018:126;;;4059:4;4064:7;:20;;;4085:10;4096:19;4064:52;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4064:52:16;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;4064:52:16;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;4064:52:16;;;;;;;;;;;;;;;;4117:19;4052:85;;;;;;;;;;4018:126;3437:717;4170:5;4176:1;4178;4163:17;;;;;;;;;;;;;;3154:1030;;;;;;:::o;10536:129:13:-;10606:13;10631:18;:30;10650:10;10631:30;;;;;;;;;;;10624:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10536:129;;;:::o;8657:124::-;8726:10;8748:17;:29;8766:10;8748:29;;;;;;;;;;;;8741:36;;8657:124;;;:::o;6495:158:16:-;6580:18;;;;;;;;;;;6567:48;;;6622:9;6633:10;6644:4;6567:82;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;6567:82:16;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;6567:82:16;;;;;6495:158;;:::o;7024:200::-;7123:5;;;;;;;;;;;7109:19;;:10;:19;;;7101:28;;;;;;7148:38;7169:5;;;;;;;;;;;7176:9;7148:38;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7208:9;7200:5;;:17;;;;;;;;;;;;;;;;;;7024:200;:::o",
  "source": "pragma solidity ^0.5.0;\n\nimport './Optimistic.sol';\n/**\n* @title Reader\n* This contracts is a pretend contract using Tellor that compares two time values\n*/\ncontract Reader is Optimistic{\n\n\tuint public startDateTime;\n\tuint public endDateTime;\n\tuint public startValue;\n\tuint public endValue;\n\tbool public longWins;\n\tbool public contractEnded;\n\tevent ContractSettled(uint _svalue, uint _evalue);\n\n    /**\n    * @dev This constructor function is used to pass variables to the optimistic contract's constructor\n    * and the function is blank\n    * @param _userContract address for UserContract\n    * @param _disputeFeeRequired the fee to dispute the optimistic price(price sumbitted by known trusted party)\n    * @param _disputePeriod is the time frame a value can be disputed after being imputed\n    * @param _requestIds are the requests Id's on the Tellor System corresponding to the data types used on this contract.\n    * It is recommended to use several requestId's that pull from several API's. If requestsId's don't exist in the Tellor \n    * System be sure to create some.\n    * @param _granularity is the amount of decimals desired on the requested value\n    */\n\tconstructor(address _userContract, uint _disputeFeeRequired, uint _disputePeriod, uint[] memory _requestIds, uint _granularity) \n\tOptimistic(_userContract,_disputeFeeRequired,_disputePeriod, _requestIds,_granularity) public {\n\n\t}\n\n\n    /**\n    * @dev creates a start(now) and end time(now + duration specified) for testing a contract start and end period\n    * @param _duration in seconds\n    */\n\tfunction testContract(uint _duration) external {\n\t\tstartDateTime = now - now % granularity;\n\t\tendDateTime = now - now % granularity + _duration;\n\t}\n\n\n\t/**\n    * @dev testing fucntion that settles the contract by getting the first undisputed value after the startDateTime\n    * and the first undisputed value after the end time of the contract and settleling(payin off) it.\n\t*/\n\tfunction settleContracts() external{\n\t\tbool _didGet;\n\t\tuint _time;\n\t\tif(getIsValue(startDateTime)){\n\t\t\t(_didGet, startValue, _time) = getFirstUndisputedValueAfter(startDateTime);\n\t\t\tif(_didGet && getIsValue(endDateTime)){\n\t\t\t\t(_didGet, endValue, _time) = getFirstUndisputedValueAfter(endDateTime);\n\t\t\t\tif(_didGet){\n\t\t\t\t\tif(endValue > startValue){\n\t\t\t\t\t\tlongWins = true;\n\t\t\t\t\t}\n\t\t\t\t\tcontractEnded = true;\n\t\t\t\t\temit ContractSettled(startValue, endValue);\n\t\t\t\t}\n\n\t\t\t}\n\t\t}\n\t}\n}",
  "sourcePath": "/Users/mdcoon/git/TellorCore/contracts/userFiles/Reader.sol",
  "ast": {
    "absolutePath": "/Users/mdcoon/git/TellorCore/contracts/userFiles/Reader.sol",
    "exportedSymbols": {
      "Reader": [
        6450
      ]
    },
    "id": 6451,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 6321,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:14"
      },
      {
        "absolutePath": "/Users/mdcoon/git/TellorCore/contracts/userFiles/Optimistic.sol",
        "file": "./Optimistic.sol",
        "id": 6322,
        "nodeType": "ImportDirective",
        "scope": 6451,
        "sourceUnit": 6320,
        "src": "25:26:14",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 6323,
              "name": "Optimistic",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 6319,
              "src": "176:10:14",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Optimistic_$6319",
                "typeString": "contract Optimistic"
              }
            },
            "id": 6324,
            "nodeType": "InheritanceSpecifier",
            "src": "176:10:14"
          }
        ],
        "contractDependencies": [
          6319,
          7155
        ],
        "contractKind": "contract",
        "documentation": "@title Reader\nThis contracts is a pretend contract using Tellor that compares two time values",
        "fullyImplemented": true,
        "id": 6450,
        "linearizedBaseContracts": [
          6450,
          6319,
          7155
        ],
        "name": "Reader",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 6326,
            "name": "startDateTime",
            "nodeType": "VariableDeclaration",
            "scope": 6450,
            "src": "190:25:14",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 6325,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "190:4:14",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 6328,
            "name": "endDateTime",
            "nodeType": "VariableDeclaration",
            "scope": 6450,
            "src": "218:23:14",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 6327,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "218:4:14",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 6330,
            "name": "startValue",
            "nodeType": "VariableDeclaration",
            "scope": 6450,
            "src": "244:22:14",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 6329,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "244:4:14",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 6332,
            "name": "endValue",
            "nodeType": "VariableDeclaration",
            "scope": 6450,
            "src": "269:20:14",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 6331,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "269:4:14",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 6334,
            "name": "longWins",
            "nodeType": "VariableDeclaration",
            "scope": 6450,
            "src": "292:20:14",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bool",
              "typeString": "bool"
            },
            "typeName": {
              "id": 6333,
              "name": "bool",
              "nodeType": "ElementaryTypeName",
              "src": "292:4:14",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 6336,
            "name": "contractEnded",
            "nodeType": "VariableDeclaration",
            "scope": 6450,
            "src": "315:25:14",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bool",
              "typeString": "bool"
            },
            "typeName": {
              "id": 6335,
              "name": "bool",
              "nodeType": "ElementaryTypeName",
              "src": "315:4:14",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 6342,
            "name": "ContractSettled",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 6341,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6338,
                  "indexed": false,
                  "name": "_svalue",
                  "nodeType": "VariableDeclaration",
                  "scope": 6342,
                  "src": "365:12:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 6337,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "365:4:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6340,
                  "indexed": false,
                  "name": "_evalue",
                  "nodeType": "VariableDeclaration",
                  "scope": 6342,
                  "src": "379:12:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 6339,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "379:4:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "364:28:14"
            },
            "src": "343:50:14"
          },
          {
            "body": {
              "id": 6363,
              "nodeType": "Block",
              "src": "1393:5:14",
              "statements": []
            },
            "documentation": "@dev This constructor function is used to pass variables to the optimistic contract's constructor\nand the function is blank\n@param _userContract address for UserContract\n@param _disputeFeeRequired the fee to dispute the optimistic price(price sumbitted by known trusted party)\n@param _disputePeriod is the time frame a value can be disputed after being imputed\n@param _requestIds are the requests Id's on the Tellor System corresponding to the data types used on this contract.\nIt is recommended to use several requestId's that pull from several API's. If requestsId's don't exist in the Tellor \nSystem be sure to create some.\n@param _granularity is the amount of decimals desired on the requested value",
            "id": 6364,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 6356,
                    "name": "_userContract",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 6344,
                    "src": "1310:13:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 6357,
                    "name": "_disputeFeeRequired",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 6346,
                    "src": "1324:19:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 6358,
                    "name": "_disputePeriod",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 6348,
                    "src": "1344:14:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 6359,
                    "name": "_requestIds",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 6351,
                    "src": "1360:11:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                      "typeString": "uint256[] memory"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 6360,
                    "name": "_granularity",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 6353,
                    "src": "1372:12:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 6361,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 6355,
                  "name": "Optimistic",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 6319,
                  "src": "1299:10:14",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_Optimistic_$6319_$",
                    "typeString": "type(contract Optimistic)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1299:86:14"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 6354,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6344,
                  "name": "_userContract",
                  "nodeType": "VariableDeclaration",
                  "scope": 6364,
                  "src": "1181:21:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 6343,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1181:7:14",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6346,
                  "name": "_disputeFeeRequired",
                  "nodeType": "VariableDeclaration",
                  "scope": 6364,
                  "src": "1204:24:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 6345,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1204:4:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6348,
                  "name": "_disputePeriod",
                  "nodeType": "VariableDeclaration",
                  "scope": 6364,
                  "src": "1230:19:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 6347,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1230:4:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6351,
                  "name": "_requestIds",
                  "nodeType": "VariableDeclaration",
                  "scope": 6364,
                  "src": "1251:25:14",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 6349,
                      "name": "uint",
                      "nodeType": "ElementaryTypeName",
                      "src": "1251:4:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 6350,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "1251:6:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6353,
                  "name": "_granularity",
                  "nodeType": "VariableDeclaration",
                  "scope": 6364,
                  "src": "1278:17:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 6352,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1278:4:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1180:116:14"
            },
            "returnParameters": {
              "id": 6362,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1393:0:14"
            },
            "scope": 6450,
            "src": "1169:229:14",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 6387,
              "nodeType": "Block",
              "src": "1613:100:14",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 6375,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 6369,
                      "name": "startDateTime",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6326,
                      "src": "1617:13:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 6374,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "id": 6370,
                        "name": "now",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7172,
                        "src": "1633:3:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "-",
                      "rightExpression": {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 6373,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 6371,
                          "name": "now",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7172,
                          "src": "1639:3:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "%",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 6372,
                          "name": "granularity",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5724,
                          "src": "1645:11:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "1639:17:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "1633:23:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1617:39:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 6376,
                  "nodeType": "ExpressionStatement",
                  "src": "1617:39:14"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 6385,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 6377,
                      "name": "endDateTime",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6328,
                      "src": "1660:11:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 6384,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 6382,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 6378,
                          "name": "now",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7172,
                          "src": "1674:3:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "-",
                        "rightExpression": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 6381,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "id": 6379,
                            "name": "now",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7172,
                            "src": "1680:3:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "%",
                          "rightExpression": {
                            "argumentTypes": null,
                            "id": 6380,
                            "name": "granularity",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5724,
                            "src": "1686:11:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "1680:17:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "1674:23:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "+",
                      "rightExpression": {
                        "argumentTypes": null,
                        "id": 6383,
                        "name": "_duration",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6366,
                        "src": "1700:9:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "1674:35:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1660:49:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 6386,
                  "nodeType": "ExpressionStatement",
                  "src": "1660:49:14"
                }
              ]
            },
            "documentation": "@dev creates a start(now) and end time(now + duration specified) for testing a contract start and end period\n@param _duration in seconds",
            "id": 6388,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testContract",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 6367,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6366,
                  "name": "_duration",
                  "nodeType": "VariableDeclaration",
                  "scope": 6388,
                  "src": "1588:14:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 6365,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1588:4:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1587:16:14"
            },
            "returnParameters": {
              "id": 6368,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1613:0:14"
            },
            "scope": 6450,
            "src": "1566:147:14",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 6448,
              "nodeType": "Block",
              "src": "1979:436:14",
              "statements": [
                {
                  "assignments": [
                    6392
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 6392,
                      "name": "_didGet",
                      "nodeType": "VariableDeclaration",
                      "scope": 6448,
                      "src": "1983:12:14",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 6391,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "1983:4:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 6393,
                  "initialValue": null,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1983:12:14"
                },
                {
                  "assignments": [
                    6395
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 6395,
                      "name": "_time",
                      "nodeType": "VariableDeclaration",
                      "scope": 6448,
                      "src": "1999:10:14",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 6394,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "1999:4:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 6396,
                  "initialValue": null,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1999:10:14"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 6398,
                        "name": "startDateTime",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6326,
                        "src": "2027:13:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 6397,
                      "name": "getIsValue",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6223,
                      "src": "2016:10:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (uint256) view returns (bool)"
                      }
                    },
                    "id": 6399,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2016:25:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 6447,
                  "nodeType": "IfStatement",
                  "src": "2013:399:14",
                  "trueBody": {
                    "id": 6446,
                    "nodeType": "Block",
                    "src": "2042:370:14",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 6407,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "components": [
                              {
                                "argumentTypes": null,
                                "id": 6400,
                                "name": "_didGet",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 6392,
                                "src": "2048:7:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              {
                                "argumentTypes": null,
                                "id": 6401,
                                "name": "startValue",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 6330,
                                "src": "2057:10:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              {
                                "argumentTypes": null,
                                "id": 6402,
                                "name": "_time",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 6395,
                                "src": "2069:5:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "id": 6403,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "TupleExpression",
                            "src": "2047:28:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$_t_uint256_$",
                              "typeString": "tuple(bool,uint256,uint256)"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 6405,
                                "name": "startDateTime",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 6326,
                                "src": "2107:13:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "id": 6404,
                              "name": "getFirstUndisputedValueAfter",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 6186,
                              "src": "2078:28:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$_t_uint256_$_t_uint256_$",
                                "typeString": "function (uint256) view returns (bool,uint256,uint256)"
                              }
                            },
                            "id": 6406,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2078:43:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$_t_uint256_$",
                              "typeString": "tuple(bool,uint256,uint256)"
                            }
                          },
                          "src": "2047:74:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 6408,
                        "nodeType": "ExpressionStatement",
                        "src": "2047:74:14"
                      },
                      {
                        "condition": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 6413,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "id": 6409,
                            "name": "_didGet",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6392,
                            "src": "2129:7:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "&&",
                          "rightExpression": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 6411,
                                "name": "endDateTime",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 6328,
                                "src": "2151:11:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "id": 6410,
                              "name": "getIsValue",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 6223,
                              "src": "2140:10:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
                                "typeString": "function (uint256) view returns (bool)"
                              }
                            },
                            "id": 6412,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2140:23:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "2129:34:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": null,
                        "id": 6445,
                        "nodeType": "IfStatement",
                        "src": "2126:282:14",
                        "trueBody": {
                          "id": 6444,
                          "nodeType": "Block",
                          "src": "2164:244:14",
                          "statements": [
                            {
                              "expression": {
                                "argumentTypes": null,
                                "id": 6421,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "argumentTypes": null,
                                  "components": [
                                    {
                                      "argumentTypes": null,
                                      "id": 6414,
                                      "name": "_didGet",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 6392,
                                      "src": "2171:7:14",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                      }
                                    },
                                    {
                                      "argumentTypes": null,
                                      "id": 6415,
                                      "name": "endValue",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 6332,
                                      "src": "2180:8:14",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    {
                                      "argumentTypes": null,
                                      "id": 6416,
                                      "name": "_time",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 6395,
                                      "src": "2190:5:14",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "id": 6417,
                                  "isConstant": false,
                                  "isInlineArray": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "nodeType": "TupleExpression",
                                  "src": "2170:26:14",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$_t_uint256_$",
                                    "typeString": "tuple(bool,uint256,uint256)"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "argumentTypes": null,
                                  "arguments": [
                                    {
                                      "argumentTypes": null,
                                      "id": 6419,
                                      "name": "endDateTime",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 6328,
                                      "src": "2228:11:14",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    ],
                                    "id": 6418,
                                    "name": "getFirstUndisputedValueAfter",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 6186,
                                    "src": "2199:28:14",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$_t_uint256_$_t_uint256_$",
                                      "typeString": "function (uint256) view returns (bool,uint256,uint256)"
                                    }
                                  },
                                  "id": 6420,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "2199:41:14",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$_t_uint256_$",
                                    "typeString": "tuple(bool,uint256,uint256)"
                                  }
                                },
                                "src": "2170:70:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 6422,
                              "nodeType": "ExpressionStatement",
                              "src": "2170:70:14"
                            },
                            {
                              "condition": {
                                "argumentTypes": null,
                                "id": 6423,
                                "name": "_didGet",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 6392,
                                "src": "2249:7:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "falseBody": null,
                              "id": 6443,
                              "nodeType": "IfStatement",
                              "src": "2246:156:14",
                              "trueBody": {
                                "id": 6442,
                                "nodeType": "Block",
                                "src": "2257:145:14",
                                "statements": [
                                  {
                                    "condition": {
                                      "argumentTypes": null,
                                      "commonType": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      "id": 6426,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "argumentTypes": null,
                                        "id": 6424,
                                        "name": "endValue",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 6332,
                                        "src": "2267:8:14",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": ">",
                                      "rightExpression": {
                                        "argumentTypes": null,
                                        "id": 6425,
                                        "name": "startValue",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 6330,
                                        "src": "2278:10:14",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "src": "2267:21:14",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                      }
                                    },
                                    "falseBody": null,
                                    "id": 6432,
                                    "nodeType": "IfStatement",
                                    "src": "2264:56:14",
                                    "trueBody": {
                                      "id": 6431,
                                      "nodeType": "Block",
                                      "src": "2289:31:14",
                                      "statements": [
                                        {
                                          "expression": {
                                            "argumentTypes": null,
                                            "id": 6429,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "leftHandSide": {
                                              "argumentTypes": null,
                                              "id": 6427,
                                              "name": "longWins",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 6334,
                                              "src": "2297:8:14",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_bool",
                                                "typeString": "bool"
                                              }
                                            },
                                            "nodeType": "Assignment",
                                            "operator": "=",
                                            "rightHandSide": {
                                              "argumentTypes": null,
                                              "hexValue": "74727565",
                                              "id": 6428,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": true,
                                              "kind": "bool",
                                              "lValueRequested": false,
                                              "nodeType": "Literal",
                                              "src": "2308:4:14",
                                              "subdenomination": null,
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_bool",
                                                "typeString": "bool"
                                              },
                                              "value": "true"
                                            },
                                            "src": "2297:15:14",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_bool",
                                              "typeString": "bool"
                                            }
                                          },
                                          "id": 6430,
                                          "nodeType": "ExpressionStatement",
                                          "src": "2297:15:14"
                                        }
                                      ]
                                    }
                                  },
                                  {
                                    "expression": {
                                      "argumentTypes": null,
                                      "id": 6435,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftHandSide": {
                                        "argumentTypes": null,
                                        "id": 6433,
                                        "name": "contractEnded",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 6336,
                                        "src": "2326:13:14",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bool",
                                          "typeString": "bool"
                                        }
                                      },
                                      "nodeType": "Assignment",
                                      "operator": "=",
                                      "rightHandSide": {
                                        "argumentTypes": null,
                                        "hexValue": "74727565",
                                        "id": 6434,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "bool",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "2342:4:14",
                                        "subdenomination": null,
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bool",
                                          "typeString": "bool"
                                        },
                                        "value": "true"
                                      },
                                      "src": "2326:20:14",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                      }
                                    },
                                    "id": 6436,
                                    "nodeType": "ExpressionStatement",
                                    "src": "2326:20:14"
                                  },
                                  {
                                    "eventCall": {
                                      "argumentTypes": null,
                                      "arguments": [
                                        {
                                          "argumentTypes": null,
                                          "id": 6438,
                                          "name": "startValue",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 6330,
                                          "src": "2374:10:14",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        {
                                          "argumentTypes": null,
                                          "id": 6439,
                                          "name": "endValue",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 6332,
                                          "src": "2386:8:14",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          },
                                          {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        ],
                                        "id": 6437,
                                        "name": "ContractSettled",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 6342,
                                        "src": "2358:15:14",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                                          "typeString": "function (uint256,uint256)"
                                        }
                                      },
                                      "id": 6440,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "functionCall",
                                      "lValueRequested": false,
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "2358:37:14",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_tuple$__$",
                                        "typeString": "tuple()"
                                      }
                                    },
                                    "id": 6441,
                                    "nodeType": "EmitStatement",
                                    "src": "2353:42:14"
                                  }
                                ]
                              }
                            }
                          ]
                        }
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": "@dev testing fucntion that settles the contract by getting the first undisputed value after the startDateTime\nand the first undisputed value after the end time of the contract and settleling(payin off) it.",
            "id": 6449,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "settleContracts",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 6389,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1968:2:14"
            },
            "returnParameters": {
              "id": 6390,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1979:0:14"
            },
            "scope": 6450,
            "src": "1944:471:14",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          }
        ],
        "scope": 6451,
        "src": "157:2260:14"
      }
    ],
    "src": "0:2417:14"
  },
  "legacyAST": {
    "absolutePath": "/Users/mdcoon/git/TellorCore/contracts/userFiles/Reader.sol",
    "exportedSymbols": {
      "Reader": [
        6450
      ]
    },
    "id": 6451,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 6321,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:14"
      },
      {
        "absolutePath": "/Users/mdcoon/git/TellorCore/contracts/userFiles/Optimistic.sol",
        "file": "./Optimistic.sol",
        "id": 6322,
        "nodeType": "ImportDirective",
        "scope": 6451,
        "sourceUnit": 6320,
        "src": "25:26:14",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 6323,
              "name": "Optimistic",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 6319,
              "src": "176:10:14",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Optimistic_$6319",
                "typeString": "contract Optimistic"
              }
            },
            "id": 6324,
            "nodeType": "InheritanceSpecifier",
            "src": "176:10:14"
          }
        ],
        "contractDependencies": [
          6319,
          7155
        ],
        "contractKind": "contract",
        "documentation": "@title Reader\nThis contracts is a pretend contract using Tellor that compares two time values",
        "fullyImplemented": true,
        "id": 6450,
        "linearizedBaseContracts": [
          6450,
          6319,
          7155
        ],
        "name": "Reader",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 6326,
            "name": "startDateTime",
            "nodeType": "VariableDeclaration",
            "scope": 6450,
            "src": "190:25:14",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 6325,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "190:4:14",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 6328,
            "name": "endDateTime",
            "nodeType": "VariableDeclaration",
            "scope": 6450,
            "src": "218:23:14",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 6327,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "218:4:14",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 6330,
            "name": "startValue",
            "nodeType": "VariableDeclaration",
            "scope": 6450,
            "src": "244:22:14",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 6329,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "244:4:14",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 6332,
            "name": "endValue",
            "nodeType": "VariableDeclaration",
            "scope": 6450,
            "src": "269:20:14",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 6331,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "269:4:14",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 6334,
            "name": "longWins",
            "nodeType": "VariableDeclaration",
            "scope": 6450,
            "src": "292:20:14",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bool",
              "typeString": "bool"
            },
            "typeName": {
              "id": 6333,
              "name": "bool",
              "nodeType": "ElementaryTypeName",
              "src": "292:4:14",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 6336,
            "name": "contractEnded",
            "nodeType": "VariableDeclaration",
            "scope": 6450,
            "src": "315:25:14",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bool",
              "typeString": "bool"
            },
            "typeName": {
              "id": 6335,
              "name": "bool",
              "nodeType": "ElementaryTypeName",
              "src": "315:4:14",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 6342,
            "name": "ContractSettled",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 6341,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6338,
                  "indexed": false,
                  "name": "_svalue",
                  "nodeType": "VariableDeclaration",
                  "scope": 6342,
                  "src": "365:12:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 6337,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "365:4:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6340,
                  "indexed": false,
                  "name": "_evalue",
                  "nodeType": "VariableDeclaration",
                  "scope": 6342,
                  "src": "379:12:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 6339,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "379:4:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "364:28:14"
            },
            "src": "343:50:14"
          },
          {
            "body": {
              "id": 6363,
              "nodeType": "Block",
              "src": "1393:5:14",
              "statements": []
            },
            "documentation": "@dev This constructor function is used to pass variables to the optimistic contract's constructor\nand the function is blank\n@param _userContract address for UserContract\n@param _disputeFeeRequired the fee to dispute the optimistic price(price sumbitted by known trusted party)\n@param _disputePeriod is the time frame a value can be disputed after being imputed\n@param _requestIds are the requests Id's on the Tellor System corresponding to the data types used on this contract.\nIt is recommended to use several requestId's that pull from several API's. If requestsId's don't exist in the Tellor \nSystem be sure to create some.\n@param _granularity is the amount of decimals desired on the requested value",
            "id": 6364,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 6356,
                    "name": "_userContract",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 6344,
                    "src": "1310:13:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 6357,
                    "name": "_disputeFeeRequired",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 6346,
                    "src": "1324:19:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 6358,
                    "name": "_disputePeriod",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 6348,
                    "src": "1344:14:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 6359,
                    "name": "_requestIds",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 6351,
                    "src": "1360:11:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                      "typeString": "uint256[] memory"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 6360,
                    "name": "_granularity",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 6353,
                    "src": "1372:12:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 6361,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 6355,
                  "name": "Optimistic",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 6319,
                  "src": "1299:10:14",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_Optimistic_$6319_$",
                    "typeString": "type(contract Optimistic)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1299:86:14"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 6354,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6344,
                  "name": "_userContract",
                  "nodeType": "VariableDeclaration",
                  "scope": 6364,
                  "src": "1181:21:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 6343,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1181:7:14",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6346,
                  "name": "_disputeFeeRequired",
                  "nodeType": "VariableDeclaration",
                  "scope": 6364,
                  "src": "1204:24:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 6345,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1204:4:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6348,
                  "name": "_disputePeriod",
                  "nodeType": "VariableDeclaration",
                  "scope": 6364,
                  "src": "1230:19:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 6347,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1230:4:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6351,
                  "name": "_requestIds",
                  "nodeType": "VariableDeclaration",
                  "scope": 6364,
                  "src": "1251:25:14",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 6349,
                      "name": "uint",
                      "nodeType": "ElementaryTypeName",
                      "src": "1251:4:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 6350,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "1251:6:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6353,
                  "name": "_granularity",
                  "nodeType": "VariableDeclaration",
                  "scope": 6364,
                  "src": "1278:17:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 6352,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1278:4:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1180:116:14"
            },
            "returnParameters": {
              "id": 6362,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1393:0:14"
            },
            "scope": 6450,
            "src": "1169:229:14",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 6387,
              "nodeType": "Block",
              "src": "1613:100:14",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 6375,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 6369,
                      "name": "startDateTime",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6326,
                      "src": "1617:13:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 6374,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "id": 6370,
                        "name": "now",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7172,
                        "src": "1633:3:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "-",
                      "rightExpression": {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 6373,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 6371,
                          "name": "now",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7172,
                          "src": "1639:3:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "%",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 6372,
                          "name": "granularity",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5724,
                          "src": "1645:11:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "1639:17:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "1633:23:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1617:39:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 6376,
                  "nodeType": "ExpressionStatement",
                  "src": "1617:39:14"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 6385,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 6377,
                      "name": "endDateTime",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6328,
                      "src": "1660:11:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 6384,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 6382,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 6378,
                          "name": "now",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7172,
                          "src": "1674:3:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "-",
                        "rightExpression": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 6381,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "id": 6379,
                            "name": "now",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7172,
                            "src": "1680:3:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "%",
                          "rightExpression": {
                            "argumentTypes": null,
                            "id": 6380,
                            "name": "granularity",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5724,
                            "src": "1686:11:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "1680:17:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "1674:23:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "+",
                      "rightExpression": {
                        "argumentTypes": null,
                        "id": 6383,
                        "name": "_duration",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6366,
                        "src": "1700:9:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "1674:35:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1660:49:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 6386,
                  "nodeType": "ExpressionStatement",
                  "src": "1660:49:14"
                }
              ]
            },
            "documentation": "@dev creates a start(now) and end time(now + duration specified) for testing a contract start and end period\n@param _duration in seconds",
            "id": 6388,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testContract",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 6367,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6366,
                  "name": "_duration",
                  "nodeType": "VariableDeclaration",
                  "scope": 6388,
                  "src": "1588:14:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 6365,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1588:4:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1587:16:14"
            },
            "returnParameters": {
              "id": 6368,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1613:0:14"
            },
            "scope": 6450,
            "src": "1566:147:14",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 6448,
              "nodeType": "Block",
              "src": "1979:436:14",
              "statements": [
                {
                  "assignments": [
                    6392
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 6392,
                      "name": "_didGet",
                      "nodeType": "VariableDeclaration",
                      "scope": 6448,
                      "src": "1983:12:14",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 6391,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "1983:4:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 6393,
                  "initialValue": null,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1983:12:14"
                },
                {
                  "assignments": [
                    6395
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 6395,
                      "name": "_time",
                      "nodeType": "VariableDeclaration",
                      "scope": 6448,
                      "src": "1999:10:14",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 6394,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "1999:4:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 6396,
                  "initialValue": null,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1999:10:14"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 6398,
                        "name": "startDateTime",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6326,
                        "src": "2027:13:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 6397,
                      "name": "getIsValue",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6223,
                      "src": "2016:10:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (uint256) view returns (bool)"
                      }
                    },
                    "id": 6399,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2016:25:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 6447,
                  "nodeType": "IfStatement",
                  "src": "2013:399:14",
                  "trueBody": {
                    "id": 6446,
                    "nodeType": "Block",
                    "src": "2042:370:14",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 6407,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "components": [
                              {
                                "argumentTypes": null,
                                "id": 6400,
                                "name": "_didGet",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 6392,
                                "src": "2048:7:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              {
                                "argumentTypes": null,
                                "id": 6401,
                                "name": "startValue",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 6330,
                                "src": "2057:10:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              {
                                "argumentTypes": null,
                                "id": 6402,
                                "name": "_time",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 6395,
                                "src": "2069:5:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "id": 6403,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "TupleExpression",
                            "src": "2047:28:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$_t_uint256_$",
                              "typeString": "tuple(bool,uint256,uint256)"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 6405,
                                "name": "startDateTime",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 6326,
                                "src": "2107:13:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "id": 6404,
                              "name": "getFirstUndisputedValueAfter",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 6186,
                              "src": "2078:28:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$_t_uint256_$_t_uint256_$",
                                "typeString": "function (uint256) view returns (bool,uint256,uint256)"
                              }
                            },
                            "id": 6406,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2078:43:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$_t_uint256_$",
                              "typeString": "tuple(bool,uint256,uint256)"
                            }
                          },
                          "src": "2047:74:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 6408,
                        "nodeType": "ExpressionStatement",
                        "src": "2047:74:14"
                      },
                      {
                        "condition": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 6413,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "id": 6409,
                            "name": "_didGet",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6392,
                            "src": "2129:7:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "&&",
                          "rightExpression": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 6411,
                                "name": "endDateTime",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 6328,
                                "src": "2151:11:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "id": 6410,
                              "name": "getIsValue",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 6223,
                              "src": "2140:10:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
                                "typeString": "function (uint256) view returns (bool)"
                              }
                            },
                            "id": 6412,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2140:23:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "2129:34:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": null,
                        "id": 6445,
                        "nodeType": "IfStatement",
                        "src": "2126:282:14",
                        "trueBody": {
                          "id": 6444,
                          "nodeType": "Block",
                          "src": "2164:244:14",
                          "statements": [
                            {
                              "expression": {
                                "argumentTypes": null,
                                "id": 6421,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "argumentTypes": null,
                                  "components": [
                                    {
                                      "argumentTypes": null,
                                      "id": 6414,
                                      "name": "_didGet",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 6392,
                                      "src": "2171:7:14",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                      }
                                    },
                                    {
                                      "argumentTypes": null,
                                      "id": 6415,
                                      "name": "endValue",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 6332,
                                      "src": "2180:8:14",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    {
                                      "argumentTypes": null,
                                      "id": 6416,
                                      "name": "_time",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 6395,
                                      "src": "2190:5:14",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "id": 6417,
                                  "isConstant": false,
                                  "isInlineArray": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "nodeType": "TupleExpression",
                                  "src": "2170:26:14",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$_t_uint256_$",
                                    "typeString": "tuple(bool,uint256,uint256)"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "argumentTypes": null,
                                  "arguments": [
                                    {
                                      "argumentTypes": null,
                                      "id": 6419,
                                      "name": "endDateTime",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 6328,
                                      "src": "2228:11:14",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    ],
                                    "id": 6418,
                                    "name": "getFirstUndisputedValueAfter",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 6186,
                                    "src": "2199:28:14",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$_t_uint256_$_t_uint256_$",
                                      "typeString": "function (uint256) view returns (bool,uint256,uint256)"
                                    }
                                  },
                                  "id": 6420,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "2199:41:14",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$_t_uint256_$",
                                    "typeString": "tuple(bool,uint256,uint256)"
                                  }
                                },
                                "src": "2170:70:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 6422,
                              "nodeType": "ExpressionStatement",
                              "src": "2170:70:14"
                            },
                            {
                              "condition": {
                                "argumentTypes": null,
                                "id": 6423,
                                "name": "_didGet",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 6392,
                                "src": "2249:7:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "falseBody": null,
                              "id": 6443,
                              "nodeType": "IfStatement",
                              "src": "2246:156:14",
                              "trueBody": {
                                "id": 6442,
                                "nodeType": "Block",
                                "src": "2257:145:14",
                                "statements": [
                                  {
                                    "condition": {
                                      "argumentTypes": null,
                                      "commonType": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      "id": 6426,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "argumentTypes": null,
                                        "id": 6424,
                                        "name": "endValue",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 6332,
                                        "src": "2267:8:14",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": ">",
                                      "rightExpression": {
                                        "argumentTypes": null,
                                        "id": 6425,
                                        "name": "startValue",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 6330,
                                        "src": "2278:10:14",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "src": "2267:21:14",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                      }
                                    },
                                    "falseBody": null,
                                    "id": 6432,
                                    "nodeType": "IfStatement",
                                    "src": "2264:56:14",
                                    "trueBody": {
                                      "id": 6431,
                                      "nodeType": "Block",
                                      "src": "2289:31:14",
                                      "statements": [
                                        {
                                          "expression": {
                                            "argumentTypes": null,
                                            "id": 6429,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "leftHandSide": {
                                              "argumentTypes": null,
                                              "id": 6427,
                                              "name": "longWins",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 6334,
                                              "src": "2297:8:14",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_bool",
                                                "typeString": "bool"
                                              }
                                            },
                                            "nodeType": "Assignment",
                                            "operator": "=",
                                            "rightHandSide": {
                                              "argumentTypes": null,
                                              "hexValue": "74727565",
                                              "id": 6428,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": true,
                                              "kind": "bool",
                                              "lValueRequested": false,
                                              "nodeType": "Literal",
                                              "src": "2308:4:14",
                                              "subdenomination": null,
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_bool",
                                                "typeString": "bool"
                                              },
                                              "value": "true"
                                            },
                                            "src": "2297:15:14",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_bool",
                                              "typeString": "bool"
                                            }
                                          },
                                          "id": 6430,
                                          "nodeType": "ExpressionStatement",
                                          "src": "2297:15:14"
                                        }
                                      ]
                                    }
                                  },
                                  {
                                    "expression": {
                                      "argumentTypes": null,
                                      "id": 6435,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftHandSide": {
                                        "argumentTypes": null,
                                        "id": 6433,
                                        "name": "contractEnded",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 6336,
                                        "src": "2326:13:14",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bool",
                                          "typeString": "bool"
                                        }
                                      },
                                      "nodeType": "Assignment",
                                      "operator": "=",
                                      "rightHandSide": {
                                        "argumentTypes": null,
                                        "hexValue": "74727565",
                                        "id": 6434,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "bool",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "2342:4:14",
                                        "subdenomination": null,
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bool",
                                          "typeString": "bool"
                                        },
                                        "value": "true"
                                      },
                                      "src": "2326:20:14",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                      }
                                    },
                                    "id": 6436,
                                    "nodeType": "ExpressionStatement",
                                    "src": "2326:20:14"
                                  },
                                  {
                                    "eventCall": {
                                      "argumentTypes": null,
                                      "arguments": [
                                        {
                                          "argumentTypes": null,
                                          "id": 6438,
                                          "name": "startValue",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 6330,
                                          "src": "2374:10:14",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        {
                                          "argumentTypes": null,
                                          "id": 6439,
                                          "name": "endValue",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 6332,
                                          "src": "2386:8:14",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          },
                                          {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        ],
                                        "id": 6437,
                                        "name": "ContractSettled",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 6342,
                                        "src": "2358:15:14",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                                          "typeString": "function (uint256,uint256)"
                                        }
                                      },
                                      "id": 6440,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "functionCall",
                                      "lValueRequested": false,
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "2358:37:14",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_tuple$__$",
                                        "typeString": "tuple()"
                                      }
                                    },
                                    "id": 6441,
                                    "nodeType": "EmitStatement",
                                    "src": "2353:42:14"
                                  }
                                ]
                              }
                            }
                          ]
                        }
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": "@dev testing fucntion that settles the contract by getting the first undisputed value after the startDateTime\nand the first undisputed value after the end time of the contract and settleling(payin off) it.",
            "id": 6449,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "settleContracts",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 6389,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1968:2:14"
            },
            "returnParameters": {
              "id": 6390,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1979:0:14"
            },
            "scope": 6450,
            "src": "1944:471:14",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          }
        ],
        "scope": 6451,
        "src": "157:2260:14"
      }
    ],
    "src": "0:2417:14"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.8+commit.23d335f2.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.0.11",
  "updatedAt": "2019-08-24T13:21:10.995Z",
  "devdoc": {
    "methods": {
      "addTip(uint256,uint256)": {
        "details": "Allows the user to tip miners for the specified request using Tributes",
        "params": {
          "_requestId": "to tip",
          "_tip": "amount"
        }
      },
      "addTipWithEther(uint256,uint256)": {
        "details": "Allows user to add tip with Ether by sending the ETH to the userContract and exchanging it for Tributes at the price specified by the userContract owner.",
        "params": {
          "_requestId": "to tip",
          "_tip": "amount"
        }
      },
      "constructor": {
        "details": "This constructor function is used to pass variables to the optimistic contract's constructor and the function is blank",
        "params": {
          "_disputeFeeRequired": "the fee to dispute the optimistic price(price sumbitted by known trusted party)",
          "_disputePeriod": "is the time frame a value can be disputed after being imputed",
          "_granularity": "is the amount of decimals desired on the requested value",
          "_requestIds": "are the requests Id's on the Tellor System corresponding to the data types used on this contract. It is recommended to use several requestId's that pull from several API's. If requestsId's don't exist in the Tellor  System be sure to create some.",
          "_userContract": "address for UserContract"
        }
      },
      "disputeOptimisticValue(uint256)": {
        "details": "allows user to initiate dispute on the value of the specified timestamp",
        "params": {
          "_timestamp": "is the timestamp for the value to be disputed"
        }
      },
      "getAnyDataAfter(uint256,uint256)": {
        "details": "Allows the user to get the first value for the requestId after the specified timestamp",
        "params": {
          "_requestId": "is the requestId to look up the value for",
          "_timestamp": "after which to search for first verified value"
        },
        "return": "bool true if it is able to retreive a value, the value, and the value's timestamp"
      },
      "getCurrentValue()": {
        "details": "Getter function for latest value available",
        "return": "latest value available"
      },
      "getCurrentValue(uint256)": {
        "details": "Allows the user to get the latest value for the requestId specified",
        "params": {
          "_requestId": "is the requestId to look up the value for"
        },
        "return": "bool true if it is able to retreive a value, the value, and the value's timestamp"
      },
      "getDisputedValueByIndex(uint256)": {
        "details": "Getter function for the dispute value by index",
        "return": "the value"
      },
      "getDisputedValues()": {
        "details": "Getter function for all disputed values",
        "return": "the array with all values under dispute"
      },
      "getFirstUndisputedValueAfter(uint256)": {
        "details": "Get the first undisputed value after the timestamp specified. This function is used within the getTellorValues but can be used on its own. ",
        "params": {
          "_timestamp": "to search the first undisputed value there after"
        }
      },
      "getFirstVerifiedDataAfter(uint256,uint256)": {
        "details": "Allows the user to get the first verified value for the requestId after the specified timestamp",
        "params": {
          "_requestId": "is the requestId to look up the value for",
          "_timestamp": "after which to search for first verified value"
        },
        "return": "bool true if it is able to retreive a value, the value, and the value's timestamp, the timestamp after which it searched for the first verified value"
      },
      "getIsValue(uint256)": {
        "details": "Checks to if a value exists for the specifived timestamp",
        "params": {
          "_timestamp": "to verify"
        },
        "return": "ture if it exists"
      },
      "getMyValuesByTimestamp(uint256)": {
        "details": "Getter function for the value based on the timestamp specified",
        "params": {
          "_timestamp": "to retreive value from"
        }
      },
      "getNumberOfDisputedValues()": {
        "details": "Getter function for the number of disputed values ",
        "return": "uint count of number of values for the spedified timestamp"
      },
      "getNumberOfValuesPerTimestamp(uint256)": {
        "details": "Getter function for the number of RequestIds associated with a timestamp, based on the timestamp specified",
        "params": {
          "_timestamp": "to retreive number of requestIds"
        },
        "return": "uint count of number of values for the spedified timestamp"
      },
      "getRequestIds()": {
        "details": "Getter function for the requests Ids' from Tellor associated with this price feed",
        "return": "uint array of requests Ids'"
      },
      "getRequestIdsIncluded(uint256)": {
        "details": "Getter function for the requests Ids' from Tellor associated with this price feed at the specified timestamp. This only gets populated after a dispute is initiated and the  function getTellorValues is ran.",
        "params": {
          "_timestamp": "to retreive the requestIds"
        },
        "return": "uint array of requests Ids' included in the calcluation of the value"
      },
      "getTellorValues(uint256)": {
        "details": "This function gets the Tellor requestIds values for the disputed timestamp. It averages the values on the  requestsIds and replaces the value set by the contract owner, centralized party.",
        "params": {
          "_timestamp": "to get Tellor data from"
        },
        "return": "uint of new value and true if it was able to get Tellor data"
      },
      "getTimestamps()": {
        "details": "Getter function for the timestamps available",
        "return": "uint array of timestamps available"
      },
      "isDisputed(uint256)": {
        "details": "This checks if the value for the specified timestamp is under dispute ",
        "params": {
          "_timestamp": "to check if it is under dispute"
        },
        "return": "true if it is under dispute"
      },
      "requestData(string,string,uint256,uint256)": {
        "details": "Allows the user to submit a request for data to the oracle using Tributes Allowing this prevents us from increasing spread too high (since if we set the price too hight users will just go to an exchange and get tokens from there)",
        "params": {
          "_granularity": "is the number of decimals miners should include on the submitted value",
          "_request": "string API being requested to be mined",
          "_symbol": "is the short string symbol for the api request",
          "_tip": "amount the requester is willing to pay to be get on queue. Miners mine the onDeckQueryHash, or the api with the highest payout pool"
        }
      },
      "requestDataWithEther(string,string,uint256,uint256)": {
        "details": "Allows the user to submit a request for data to the oracle using ETH",
        "params": {
          "_granularity": "is the number of decimals miners should include on the submitted value",
          "_request": "string API being requested to be mined",
          "_symbol": "is the short string symbol for the api request",
          "_tip": "amount the requester is willing to pay to be get on queue. Miners mine the onDeckQueryHash, or the api with the highest payout pool"
        }
      },
      "setUserContract(address)": {
        "details": "allows owner to set the user contract address",
        "params": {
          "_userContract": "address"
        }
      },
      "setValue(uint256,uint256)": {
        "details": "allows contract owner, a centralized party to enter value",
        "params": {
          "_timestamp": "is the timestamp for the value",
          "_value": "is the value for the timestamp specified"
        }
      },
      "settleContracts()": {
        "details": "testing fucntion that settles the contract by getting the first undisputed value after the startDateTime and the first undisputed value after the end time of the contract and settleling(payin off) it."
      },
      "testContract(uint256)": {
        "details": "creates a start(now) and end time(now + duration specified) for testing a contract start and end period",
        "params": {
          "_duration": "in seconds"
        }
      },
      "transferOwnership(address)": {
        "details": "allows owner to transfer ownership",
        "params": {
          "_newOwner": "address"
        }
      }
    },
    "title": "Reader This contracts is a pretend contract using Tellor that compares two time values"
  },
  "userdoc": {
    "methods": {}
  }
}