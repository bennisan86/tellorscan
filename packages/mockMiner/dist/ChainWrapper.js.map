{"version":3,"sources":["../src/ChainWrapper.js"],"names":["yup","DEFAULT_URL","propSchema","object","shape","masterAddress","string","required","mnemonic","provider","ChainWrapper","props","validateSync","initRequired","wallet","HDWallet","num_addresses","forEach","fn","bind","web3","Web3","net","init","master","eth","Contract","abi","address","contract","ContractWrapper","chain","console","log","getBlockNumber"],"mappings":";;;;;;;;AAAA;;;;AACA;;IAAYA,G;;AACZ;;;;AACA;;;;AACA;;;;AACA;;;;;;;;;;;;AAEA,IAAMC,cAAc,gBAApB;AACA,IAAMC,aAAaF,IAAIG,MAAJ,GAAaC,KAAb,CAAmB;AACpCC,iBAAeL,IAAIM,MAAJ,GAAaC,QAAb,CAAsB,wBAAtB,CADqB;AAEpCC,YAAUR,IAAIM,MAAJ,GAAaC,QAAb,CAAsB,gCAAtB,CAF0B;AAGpCE,YAAUT,IAAIG,MAAJ;AAH0B,CAAnB,CAAnB;;IAMqBO,Y;AAEnB,wBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjBT,eAAWU,YAAX,CAAwBD,KAAxB;;AAEA,SAAKF,QAAL,GAAgBE,MAAMF,QAAtB;AACA,SAAKJ,aAAL,GAAqBM,MAAMN,aAA3B;AACA,SAAKQ,YAAL,GAAoBF,MAAME,YAA1B;;AAEA,SAAKC,MAAL,GAAc,IAAIC,kBAAJ,CAAa;AACzBP,gBAAUG,MAAMH,QADS;AAEzBQ,qBAAe;AAFU,KAAb,CAAd;;AAKA,KACE,MADF,EAEE,gBAFF,EAGEC,OAHF,CAGU;AAAA,aAAI,MAAKC,EAAL,IAAS,MAAKA,EAAL,EAASC,IAAT,CAAc,KAAd,CAAb;AAAA,KAHV;AAID;;;;;;;;;;;;;;AAMG,qBAAKC,IAAL,GAAY,IAAIC,aAAJ,CAAS,KAAKZ,QAAL,IAAiB,UAAUR,WAApC,EAAiDqB,aAAjD,CAAZ;;uBACM,KAAKR,MAAL,CAAYS,IAAZ,E;;;AACFC,sB,GAAS,IAAI,KAAKJ,IAAL,CAAUK,GAAV,CAAcC,QAAlB,CAA2BC,aAA3B,EAAgC,KAAKtB,aAArC,EAAoD,EAACuB,SAAS,KAAKvB,aAAf,EAApD,C;;AACb,qBAAKwB,QAAL,GAAgB,IAAIC,yBAAJ,CAAoB,EAACC,OAAO,IAAR,EAAcP,cAAd,EAAsBnB,eAAe,KAAKA,aAA1C,EAAyDS,QAAQ,KAAKA,MAAtE,EAApB,CAAhB;;;;;;;;;AAGAkB,wBAAQC,GAAR,CAAY,uBAAZ;;;;;;;;;;;;;;;;;;;qCAKa;AACf,aAAO,KAAKb,IAAL,CAAUK,GAAV,CAAcS,cAAd,EAAP;AACD;;;;;;kBArCkBxB,Y","file":"ChainWrapper.js","sourcesContent":["import Web3 from 'web3';\nimport * as yup from 'yup';\nimport abi from './abi';\nimport HDWallet from './HDWallet';\nimport net from 'net';\nimport ContractWrapper from './ContractWrapper';\n\nconst DEFAULT_URL = \"localhost:8545\";\nconst propSchema = yup.object().shape({\n  masterAddress: yup.string().required(\"Missing master address\"),\n  mnemonic: yup.string().required(\"Missing wallet mnemonic string\"),\n  provider: yup.object()\n});\n\nexport default class ChainWrapper {\n\n  constructor(props) {\n    propSchema.validateSync(props);\n\n    this.provider = props.provider;\n    this.masterAddress = props.masterAddress;\n    this.initRequired = props.initRequired;\n\n    this.wallet = new HDWallet({\n      mnemonic: props.mnemonic,\n      num_addresses: 10\n    });\n\n    [\n      'init',\n      'getBlockNumber'\n    ].forEach(fn=>this[fn]=this[fn].bind(this));\n  }\n\n\n  async init() {\n    try {\n\n      this.web3 = new Web3(this.provider || \"ws://\" + DEFAULT_URL, net);\n      await this.wallet.init();\n      let master = new this.web3.eth.Contract(abi, this.masterAddress, {address: this.masterAddress});\n      this.contract = new ContractWrapper({chain: this, master, masterAddress: this.masterAddress, wallet: this.wallet});\n      \n    } catch (e) {\n      console.log(\"Problem creating Web3\", e);\n      throw e;\n    }\n  }\n\n  getBlockNumber() {\n    return this.web3.eth.getBlockNumber();\n  }\n}\n"]}