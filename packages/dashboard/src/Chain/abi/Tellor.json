{
  "contractName": "Tellor",
  "abi": [
    {
      "constant": false,
      "inputs": [
        {
          "name": "_requestId",
          "type": "uint256"
        },
        {
          "name": "_timestamp",
          "type": "uint256"
        },
        {
          "name": "_minerIndex",
          "type": "uint256"
        }
      ],
      "name": "beginDispute",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_disputeId",
          "type": "uint256"
        },
        {
          "name": "_supportsDispute",
          "type": "bool"
        }
      ],
      "name": "vote",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_disputeId",
          "type": "uint256"
        }
      ],
      "name": "tallyVotes",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_propNewTellorAddress",
          "type": "address"
        }
      ],
      "name": "proposeFork",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_requestId",
          "type": "uint256"
        },
        {
          "name": "_tip",
          "type": "uint256"
        }
      ],
      "name": "addTip",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_c_sapi",
          "type": "string"
        },
        {
          "name": "_c_symbol",
          "type": "string"
        },
        {
          "name": "_granularity",
          "type": "uint256"
        },
        {
          "name": "_tip",
          "type": "uint256"
        }
      ],
      "name": "requestData",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_nonce",
          "type": "string"
        },
        {
          "name": "_requestId",
          "type": "uint256"
        },
        {
          "name": "_value",
          "type": "uint256"
        }
      ],
      "name": "submitMiningSolution",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_pendingOwner",
          "type": "address"
        }
      ],
      "name": "proposeOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "claimOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "depositStake",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "requestStakingWithdraw",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "withdrawStake",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_spender",
          "type": "address"
        },
        {
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_to",
          "type": "address"
        },
        {
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_from",
          "type": "address"
        },
        {
          "name": "_to",
          "type": "address"
        },
        {
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "name": "",
          "type": "uint8"
        }
      ],
      "payable": false,
      "stateMutability": "pure",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.5.8+commit.23d335f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"pure\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"depositStake\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_propNewTellorAddress\",\"type\":\"address\"}],\"name\":\"proposeFork\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"requestStakingWithdraw\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"pure\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_c_sapi\",\"type\":\"string\"},{\"name\":\"_c_symbol\",\"type\":\"string\"},{\"name\":\"_granularity\",\"type\":\"uint256\"},{\"name\":\"_tip\",\"type\":\"uint256\"}],\"name\":\"requestData\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_disputeId\",\"type\":\"uint256\"}],\"name\":\"tallyVotes\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"claimOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_nonce\",\"type\":\"string\"},{\"name\":\"_requestId\",\"type\":\"uint256\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"submitMiningSolution\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_pendingOwner\",\"type\":\"address\"}],\"name\":\"proposeOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_requestId\",\"type\":\"uint256\"},{\"name\":\"_tip\",\"type\":\"uint256\"}],\"name\":\"addTip\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_requestId\",\"type\":\"uint256\"},{\"name\":\"_timestamp\",\"type\":\"uint256\"},{\"name\":\"_minerIndex\",\"type\":\"uint256\"}],\"name\":\"beginDispute\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"pure\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"withdrawStake\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_disputeId\",\"type\":\"uint256\"},{\"name\":\"_supportsDispute\",\"type\":\"bool\"}],\"name\":\"vote\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Oracle contract where miners can submit the proof of work along with the value. The logic for this contract is in TellorLibrary.sol, TellorDispute.sol, TellorStake.sol, and TellorTransfer.sol\",\"methods\":{\"addTip(uint256,uint256)\":{\"details\":\"Add tip to Request value from oracle\",\"params\":{\"_requestId\":\"being requested to be mined\",\"_tip\":\"amount the requester is willing to pay to be get on queue. Miners mine the onDeckQueryHash, or the api with the highest payout pool\"}},\"approve(address,uint256)\":{\"details\":\"This function approves a _spender an _amount of tokens to use\",\"params\":{\"_amount\":\"amount the spender is being approved for\",\"_spender\":\"address\"},\"return\":\"true if spender appproved successfully\"},\"beginDispute(uint256,uint256,uint256)\":{\"details\":\"Helps initialize a dispute by assigning it a disputeId when a miner returns a false on the validate array(in Tellor.ProofOfWork) it sends the invalidated value information to POS voting\",\"params\":{\"_minerIndex\":\"the index of the miner that submitted the value being disputed. Since each official value requires 5 miners to submit a value.\",\"_requestId\":\"being disputed\",\"_timestamp\":\"being disputed\"}},\"claimOwnership()\":{\"details\":\"Allows the new owner to claim control of the contract\"},\"decimals()\":{\"details\":\"Allows users to access the number of decimals\"},\"depositStake()\":{\"details\":\"This function allows miners to deposit their stake.\"},\"name()\":{\"details\":\"Allows users to access the token's name\"},\"proposeFork(address)\":{\"details\":\"Allows for a fork to be proposed\",\"params\":{\"_propNewTellorAddress\":\"address for new proposed Tellor\"}},\"proposeOwnership(address)\":{\"details\":\"Allows the current owner to propose transfer control of the contract to a newOwner and the ownership is pending until the new owner calls the claimOwnership function\",\"params\":{\"_pendingOwner\":\"The address to transfer ownership to.\"}},\"requestData(string,string,uint256,uint256)\":{\"details\":\"Request to retreive value from oracle based on timestamp. The tip is not required to be greater than 0 because there are no tokens in circulation for the initial(genesis) request\",\"params\":{\"_c_sapi\":\"string API being requested be mined\",\"_c_symbol\":\"is the short string symbol for the api request\",\"_granularity\":\"is the number of decimals miners should include on the submitted value\",\"_tip\":\"amount the requester is willing to pay to be get on queue. Miners mine the onDeckQueryHash, or the api with the highest payout pool\"}},\"requestStakingWithdraw()\":{\"details\":\"This function allows stakers to request to withdraw their stake (no longer stake) once they lock for withdraw(stakes.currentStatus = 2) they are locked for 7 days before they can withdraw the stake\"},\"submitMiningSolution(string,uint256,uint256)\":{\"details\":\"Proof of work is called by the miner when they submit the solution (proof of work and value)\",\"params\":{\"_nonce\":\"uint submitted by miner\",\"_requestId\":\"the apiId being mined\",\"_value\":\"of api query\"}},\"symbol()\":{\"details\":\"Allows users to access the token's symbol\"},\"tallyVotes(uint256)\":{\"details\":\"tallies the votes.\",\"params\":{\"_disputeId\":\"is the dispute id\"}},\"transfer(address,uint256)\":{\"details\":\"Allows for a transfer of tokens to _to\",\"params\":{\"_amount\":\"The amount of tokens to send\",\"_to\":\"The address to send tokens to\"},\"return\":\"true if transfer is successful\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Sends _amount tokens to _to from _from on the condition it is approved by _from\",\"params\":{\"_amount\":\"The amount of tokens to be transferred\",\"_from\":\"The address holding the tokens being transferred\",\"_to\":\"The address of the recipient\"},\"return\":\"True if the transfer was successful\"},\"vote(uint256,bool)\":{\"details\":\"Allows token holders to vote\",\"params\":{\"_disputeId\":\"is the dispute id\",\"_supportsDispute\":\"is the vote (true=the dispute has basis false = vote against dispute)\"}},\"withdrawStake()\":{\"details\":\"This function allows users to withdraw their stake after a 7 day waiting period from request\"}},\"title\":\"Tellor Oracle System\"},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"/Users/mdcoon/git/TellorCore/contracts/Tellor.sol\":\"Tellor\"},\"evmVersion\":\"petersburg\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/Users/mdcoon/git/TellorCore/contracts/Tellor.sol\":{\"keccak256\":\"0xbbe523c169286fd40837209c56db4c95810d55a770ccae249e2165237c72e794\",\"urls\":[\"bzzr://c5a9c13ba66e4d850a4bd78509adf4d6a60317ee825094a47e91d89e0ece55c4\"]},\"/Users/mdcoon/git/TellorCore/contracts/libraries/SafeMath.sol\":{\"keccak256\":\"0x0231a344c6dd588804879d1f7be0f1fe3b2e8f3b3e90e47c61b5012122917f5e\",\"urls\":[\"bzzr://1fab8d3512b4a6af21edc4d51047d809882999b8a02230d44ed5d723fc234c62\"]},\"/Users/mdcoon/git/TellorCore/contracts/libraries/TellorDispute.sol\":{\"keccak256\":\"0x192d07730a2ebc3380d7d2bc4138558a47e29e59db6a0abfc0e71fa002a5f7eb\",\"urls\":[\"bzzr://4aa1ba1c2a6db42bc8dafb3af372627de9bf78beefb26df3020bded8ed06097d\"]},\"/Users/mdcoon/git/TellorCore/contracts/libraries/TellorGettersLibrary.sol\":{\"keccak256\":\"0x2036c4c41dbf50893b91c17e7f49228e5981610598d8d315a04b46ce56a06b3d\",\"urls\":[\"bzzr://a03069761177e6fdb25156ecdd9129dcf5354f6bc965446c89f528919d1d26ed\"]},\"/Users/mdcoon/git/TellorCore/contracts/libraries/TellorLibrary.sol\":{\"keccak256\":\"0x62aecef505454180718b7dea7c3b2f03cbd4ddcf323f68a890b3a8a68871fbac\",\"urls\":[\"bzzr://bbfa386dec1d46830f6f1790f1e01257d60f839ec84c3436aaad6923efb3051c\"]},\"/Users/mdcoon/git/TellorCore/contracts/libraries/TellorStake.sol\":{\"keccak256\":\"0x8d87f36fe79eda90490140970e34e95b5dc5439ef140c530d46c3f5510fa05d8\",\"urls\":[\"bzzr://b08aabeb106650e219d7073d9671a8972cf4b3c93c09c47036e52d0f32eeeec6\"]},\"/Users/mdcoon/git/TellorCore/contracts/libraries/TellorStorage.sol\":{\"keccak256\":\"0x896d6e467dad53caf544c18342b1c31848e1c914096f5a246cfc9aeafa653a02\",\"urls\":[\"bzzr://f628c3feb7a819f8926644b6898c969d0679ecf7575bad9f36f3e7ac278b64f2\"]},\"/Users/mdcoon/git/TellorCore/contracts/libraries/TellorTransfer.sol\":{\"keccak256\":\"0x3209d8cf6f4249f88789e471222ad8db113e30c2c6db8817ea57d607ecc3540f\",\"urls\":[\"bzzr://458584f13777e33e02d19b534b82ab76fc19b7620a6c4d7b1555f12191b8f208\"]},\"/Users/mdcoon/git/TellorCore/contracts/libraries/Utilities.sol\":{\"keccak256\":\"0x3d77df89f5b82b9d911b6269a67cf34efa168edd07501b8e71a971c8c83ddcb0\",\"urls\":[\"bzzr://2c49e5c10172e7a9d741485cf80cdb71867e725056200ac2331271d09b018261\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b5061151f806100206000396000f3fe608060405234801561001057600080fd5b50600436106101165760003560e01c80634e71e0c8116100a25780638581af19116100715780638581af191461052957806395d89b411461056b578063a9059cbb146105ee578063bed9d86114610654578063c9d27afe1461065e57610116565b80634e71e0c81461041657806368c180d514610420578063710bf322146104ad578063752d49a1146104f157610116565b806326b7d9f6116100e957806326b7d9f61461029457806328449c3a146102d8578063313ce567146102e25780633fff2816146103065780634d318b0e146103e857610116565b806306fdde031461011b578063095ea7b31461019e5780630d2d76a21461020457806323b872dd1461020e575b600080fd5b610123610698565b6040518080602001828103825283818151815260200191508051906020019080838360005b83811015610163578082015181840152602081019050610148565b50505050905090810190601f1680156101905780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6101ea600480360360408110156101b457600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506106d5565b604051808215151515815260200191505060405180910390f35b61020c6107a7565b005b61027a6004803603606081101561022457600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610813565b604051808215151515815260200191505060405180910390f35b6102d6600480360360208110156102aa57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061091a565b005b6102e06109bb565b005b6102ea610a27565b604051808260ff1660ff16815260200191505060405180910390f35b6103e66004803603608081101561031c57600080fd5b810190808035906020019064010000000081111561033957600080fd5b82018360208201111561034b57600080fd5b8035906020019184600183028401116401000000008311171561036d57600080fd5b90919293919293908035906020019064010000000081111561038e57600080fd5b8201836020820111156103a057600080fd5b803590602001918460018302840111640100000000831117156103c257600080fd5b90919293919293908035906020019092919080359060200190929190505050610a30565b005b610414600480360360208110156103fe57600080fd5b8101908080359060200190929190505050610b1a565b005b61041e610b8f565b005b6104ab6004803603606081101561043657600080fd5b810190808035906020019064010000000081111561045357600080fd5b82018360208201111561046557600080fd5b8035906020019184600183028401116401000000008311171561048757600080fd5b90919293919293908035906020019092919080359060200190929190505050610b9b565b005b6104ef600480360360208110156104c357600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610c4f565b005b6105276004803603604081101561050757600080fd5b810190808035906020019092919080359060200190929190505050610c66565b005b6105696004803603606081101561053f57600080fd5b81019080803590602001909291908035906020019092919080359060200190929190505050610ce4565b005b610573610d6b565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156105b3578082015181840152602081019050610598565b50505050905090810190601f1680156105e05780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b61063a6004803603604081101561060457600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610da8565b604051808215151515815260200191505060405180910390f35b61065c610e7a565b005b6106966004803603604081101561067457600080fd5b8101908080359060200190929190803515159060200190929190505050610ee6565b005b60606040518060400160405280600f81526020017f54656c6c6f722054726962757465730000000000000000000000000000000000815250905090565b60008073__TellorTransfer________________________63850dcc32909185856040518463ffffffff1660e01b8152600401808481526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001828152602001935050505060206040518083038186803b15801561076457600080fd5b505af4158015610778573d6000803e3d6000fd5b505050506040513d602081101561078e57600080fd5b8101908080519060200190929190505050905092915050565b600073__TellorStake___________________________63820a2d6690916040518263ffffffff1660e01b81526004018082815260200191505060006040518083038186803b1580156107f957600080fd5b505af415801561080d573d6000803e3d6000fd5b50505050565b60008073__TellorTransfer________________________63ca50189990918686866040518563ffffffff1660e01b8152600401808581526020018473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200194505050505060206040518083038186803b1580156108d657600080fd5b505af41580156108ea573d6000803e3d6000fd5b505050506040513d602081101561090057600080fd5b810190808051906020019092919050505090509392505050565b600073__TellorDispute_________________________63694bf49f9091836040518363ffffffff1660e01b8152600401808381526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019250505060006040518083038186803b1580156109a057600080fd5b505af41580156109b4573d6000803e3d6000fd5b5050505050565b600073__TellorStake___________________________63c9cf5e4c90916040518263ffffffff1660e01b81526004018082815260200191505060006040518083038186803b158015610a0d57600080fd5b505af4158015610a21573d6000803e3d6000fd5b50505050565b60006012905090565b600073__TellorLibrary_________________________6385997bf690918888888888886040518863ffffffff1660e01b81526004018088815260200180602001806020018581526020018481526020018381038352898982818152602001925080828437600081840152601f19601f8201169050808301925050508381038252878782818152602001925080828437600081840152601f19601f820116905080830192505050995050505050505050505060006040518083038186803b158015610afa57600080fd5b505af4158015610b0e573d6000803e3d6000fd5b50505050505050505050565b600073__TellorDispute_________________________63def6fac79091836040518363ffffffff1660e01b8152600401808381526020018281526020019250505060006040518083038186803b158015610b7457600080fd5b505af4158015610b88573d6000803e3d6000fd5b5050505050565b610b996000610f68565b565b600073__TellorLibrary_________________________63a098b5b49091868686866040518663ffffffff1660e01b815260040180868152602001806020018481526020018381526020018281038252868682818152602001925080828437600081840152601f19601f820116905080830192505050965050505050505060006040518083038186803b158015610c3157600080fd5b505af4158015610c45573d6000803e3d6000fd5b5050505050505050565b610c6381600061129790919063ffffffff16565b50565b600073__TellorLibrary_________________________6302e8f21b909184846040518463ffffffff1660e01b815260040180848152602001838152602001828152602001935050505060006040518083038186803b158015610cc857600080fd5b505af4158015610cdc573d6000803e3d6000fd5b505050505050565b600073__TellorDispute_________________________63ca9a4ea590918585856040518563ffffffff1660e01b81526004018085815260200184815260200183815260200182815260200194505050505060006040518083038186803b158015610d4e57600080fd5b505af4158015610d62573d6000803e3d6000fd5b50505050505050565b60606040518060400160405280600381526020017f5452420000000000000000000000000000000000000000000000000000000000815250905090565b60008073__TellorTransfer________________________63c84b96f5909185856040518463ffffffff1660e01b8152600401808481526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001828152602001935050505060206040518083038186803b158015610e3757600080fd5b505af4158015610e4b573d6000803e3d6000fd5b505050506040513d6020811015610e6157600080fd5b8101908080519060200190929190505050905092915050565b600073__TellorStake___________________________6344bacc4b90916040518263ffffffff1660e01b81526004018082815260200191505060006040518083038186803b158015610ecc57600080fd5b505af4158015610ee0573d6000803e3d6000fd5b50505050565b600073__TellorDispute_________________________632da0706e909184846040518463ffffffff1660e01b81526004018084815260200183815260200182151515158152602001935050505060006040518083038186803b158015610f4c57600080fd5b505af4158015610f60573d6000803e3d6000fd5b505050505050565b80603f01600060405180807f70656e64696e675f6f776e657200000000000000000000000000000000000000815250600d0190506040518091039020815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614611073576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601b8152602001807f53656e646572206973206e6f742070656e64696e67206f776e6572000000000081525060200191505060405180910390fd5b80603f01600060405180807f70656e64696e675f6f776e657200000000000000000000000000000000000000815250600d0190506040518091039020815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681603f01600060405180807f5f6f776e6572000000000000000000000000000000000000000000000000000081525060060190506040518091039020815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a380603f01600060405180807f70656e64696e675f6f776e657200000000000000000000000000000000000000815250600d0190506040518091039020815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681603f01600060405180807f5f6f776e6572000000000000000000000000000000000000000000000000000081525060060190506040518091039020815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b81603f01600060405180807f5f6f776e6572000000000000000000000000000000000000000000000000000081525060060190506040518091039020815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146113a2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260138152602001807f53656e646572206973206e6f74206f776e65720000000000000000000000000081525060200191505060405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff1682603f01600060405180807f5f6f776e6572000000000000000000000000000000000000000000000000000081525060060190506040518091039020815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167fb51454ce8c7f26becd312a46c4815553887f2ec876a0b8dc813b87f62edf6f8060405160405180910390a38082603f01600060405180807f70656e64696e675f6f776e657200000000000000000000000000000000000000815250600d0190506040518091039020815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550505056fea165627a7a72305820d7eb9b5dd1b1304eb9c65cc55fed59153f8bf566818edd8828f294f64b4ea0800029",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106101165760003560e01c80634e71e0c8116100a25780638581af19116100715780638581af191461052957806395d89b411461056b578063a9059cbb146105ee578063bed9d86114610654578063c9d27afe1461065e57610116565b80634e71e0c81461041657806368c180d514610420578063710bf322146104ad578063752d49a1146104f157610116565b806326b7d9f6116100e957806326b7d9f61461029457806328449c3a146102d8578063313ce567146102e25780633fff2816146103065780634d318b0e146103e857610116565b806306fdde031461011b578063095ea7b31461019e5780630d2d76a21461020457806323b872dd1461020e575b600080fd5b610123610698565b6040518080602001828103825283818151815260200191508051906020019080838360005b83811015610163578082015181840152602081019050610148565b50505050905090810190601f1680156101905780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6101ea600480360360408110156101b457600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506106d5565b604051808215151515815260200191505060405180910390f35b61020c6107a7565b005b61027a6004803603606081101561022457600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610813565b604051808215151515815260200191505060405180910390f35b6102d6600480360360208110156102aa57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061091a565b005b6102e06109bb565b005b6102ea610a27565b604051808260ff1660ff16815260200191505060405180910390f35b6103e66004803603608081101561031c57600080fd5b810190808035906020019064010000000081111561033957600080fd5b82018360208201111561034b57600080fd5b8035906020019184600183028401116401000000008311171561036d57600080fd5b90919293919293908035906020019064010000000081111561038e57600080fd5b8201836020820111156103a057600080fd5b803590602001918460018302840111640100000000831117156103c257600080fd5b90919293919293908035906020019092919080359060200190929190505050610a30565b005b610414600480360360208110156103fe57600080fd5b8101908080359060200190929190505050610b1a565b005b61041e610b8f565b005b6104ab6004803603606081101561043657600080fd5b810190808035906020019064010000000081111561045357600080fd5b82018360208201111561046557600080fd5b8035906020019184600183028401116401000000008311171561048757600080fd5b90919293919293908035906020019092919080359060200190929190505050610b9b565b005b6104ef600480360360208110156104c357600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610c4f565b005b6105276004803603604081101561050757600080fd5b810190808035906020019092919080359060200190929190505050610c66565b005b6105696004803603606081101561053f57600080fd5b81019080803590602001909291908035906020019092919080359060200190929190505050610ce4565b005b610573610d6b565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156105b3578082015181840152602081019050610598565b50505050905090810190601f1680156105e05780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b61063a6004803603604081101561060457600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610da8565b604051808215151515815260200191505060405180910390f35b61065c610e7a565b005b6106966004803603604081101561067457600080fd5b8101908080359060200190929190803515159060200190929190505050610ee6565b005b60606040518060400160405280600f81526020017f54656c6c6f722054726962757465730000000000000000000000000000000000815250905090565b60008073__TellorTransfer________________________63850dcc32909185856040518463ffffffff1660e01b8152600401808481526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001828152602001935050505060206040518083038186803b15801561076457600080fd5b505af4158015610778573d6000803e3d6000fd5b505050506040513d602081101561078e57600080fd5b8101908080519060200190929190505050905092915050565b600073__TellorStake___________________________63820a2d6690916040518263ffffffff1660e01b81526004018082815260200191505060006040518083038186803b1580156107f957600080fd5b505af415801561080d573d6000803e3d6000fd5b50505050565b60008073__TellorTransfer________________________63ca50189990918686866040518563ffffffff1660e01b8152600401808581526020018473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200194505050505060206040518083038186803b1580156108d657600080fd5b505af41580156108ea573d6000803e3d6000fd5b505050506040513d602081101561090057600080fd5b810190808051906020019092919050505090509392505050565b600073__TellorDispute_________________________63694bf49f9091836040518363ffffffff1660e01b8152600401808381526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019250505060006040518083038186803b1580156109a057600080fd5b505af41580156109b4573d6000803e3d6000fd5b5050505050565b600073__TellorStake___________________________63c9cf5e4c90916040518263ffffffff1660e01b81526004018082815260200191505060006040518083038186803b158015610a0d57600080fd5b505af4158015610a21573d6000803e3d6000fd5b50505050565b60006012905090565b600073__TellorLibrary_________________________6385997bf690918888888888886040518863ffffffff1660e01b81526004018088815260200180602001806020018581526020018481526020018381038352898982818152602001925080828437600081840152601f19601f8201169050808301925050508381038252878782818152602001925080828437600081840152601f19601f820116905080830192505050995050505050505050505060006040518083038186803b158015610afa57600080fd5b505af4158015610b0e573d6000803e3d6000fd5b50505050505050505050565b600073__TellorDispute_________________________63def6fac79091836040518363ffffffff1660e01b8152600401808381526020018281526020019250505060006040518083038186803b158015610b7457600080fd5b505af4158015610b88573d6000803e3d6000fd5b5050505050565b610b996000610f68565b565b600073__TellorLibrary_________________________63a098b5b49091868686866040518663ffffffff1660e01b815260040180868152602001806020018481526020018381526020018281038252868682818152602001925080828437600081840152601f19601f820116905080830192505050965050505050505060006040518083038186803b158015610c3157600080fd5b505af4158015610c45573d6000803e3d6000fd5b5050505050505050565b610c6381600061129790919063ffffffff16565b50565b600073__TellorLibrary_________________________6302e8f21b909184846040518463ffffffff1660e01b815260040180848152602001838152602001828152602001935050505060006040518083038186803b158015610cc857600080fd5b505af4158015610cdc573d6000803e3d6000fd5b505050505050565b600073__TellorDispute_________________________63ca9a4ea590918585856040518563ffffffff1660e01b81526004018085815260200184815260200183815260200182815260200194505050505060006040518083038186803b158015610d4e57600080fd5b505af4158015610d62573d6000803e3d6000fd5b50505050505050565b60606040518060400160405280600381526020017f5452420000000000000000000000000000000000000000000000000000000000815250905090565b60008073__TellorTransfer________________________63c84b96f5909185856040518463ffffffff1660e01b8152600401808481526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001828152602001935050505060206040518083038186803b158015610e3757600080fd5b505af4158015610e4b573d6000803e3d6000fd5b505050506040513d6020811015610e6157600080fd5b8101908080519060200190929190505050905092915050565b600073__TellorStake___________________________6344bacc4b90916040518263ffffffff1660e01b81526004018082815260200191505060006040518083038186803b158015610ecc57600080fd5b505af4158015610ee0573d6000803e3d6000fd5b50505050565b600073__TellorDispute_________________________632da0706e909184846040518463ffffffff1660e01b81526004018084815260200183815260200182151515158152602001935050505060006040518083038186803b158015610f4c57600080fd5b505af4158015610f60573d6000803e3d6000fd5b505050505050565b80603f01600060405180807f70656e64696e675f6f776e657200000000000000000000000000000000000000815250600d0190506040518091039020815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614611073576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601b8152602001807f53656e646572206973206e6f742070656e64696e67206f776e6572000000000081525060200191505060405180910390fd5b80603f01600060405180807f70656e64696e675f6f776e657200000000000000000000000000000000000000815250600d0190506040518091039020815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681603f01600060405180807f5f6f776e6572000000000000000000000000000000000000000000000000000081525060060190506040518091039020815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a380603f01600060405180807f70656e64696e675f6f776e657200000000000000000000000000000000000000815250600d0190506040518091039020815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681603f01600060405180807f5f6f776e6572000000000000000000000000000000000000000000000000000081525060060190506040518091039020815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b81603f01600060405180807f5f6f776e6572000000000000000000000000000000000000000000000000000081525060060190506040518091039020815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146113a2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260138152602001807f53656e646572206973206e6f74206f776e65720000000000000000000000000081525060200191505060405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff1682603f01600060405180807f5f6f776e6572000000000000000000000000000000000000000000000000000081525060060190506040518091039020815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167fb51454ce8c7f26becd312a46c4815553887f2ec876a0b8dc813b87f62edf6f8060405160405180910390a38082603f01600060405180807f70656e64696e675f6f776e657200000000000000000000000000000000000000815250600d0190506040518091039020815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550505056fea165627a7a72305820d7eb9b5dd1b1304eb9c65cc55fed59153f8bf566818edd8828f294f64b4ea0800029",
  "sourceMap": "505:6489:1:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;505:6489:1;;;;;;;",
  "deployedSourceMap": "505:6489:1:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;505:6489:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6583:95;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;6583:95:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5543:133;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;5543:133:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;4702:71;;;:::i;:::-;;6356:155;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;6356:155:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;2349:119;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2349:119:1;;;;;;;;;;;;;;;;;;;:::i;:::-;;5015:91;;;:::i;:::-;;6915:76;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;3449:193;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;3449:193:1;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;3449:193:1;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;3449:193:1;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;3449:193:1;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;3449:193:1;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;3449:193:1;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;3449:193:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;2122:95;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2122:95:1;;;;;;;;;;;;;;;;;:::i;:::-;;4543:75;;;:::i;:::-;;3890:171;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;3890:171:1;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;3890:171:1;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;3890:171:1;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;3890:171:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;4336:121;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;4336:121:1;;;;;;;;;;;;;;;;;;;:::i;:::-;;2745:107;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2745:107:1;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;1537:165;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1537:165:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;6752:85;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;6752:85:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5889:125;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;5889:125:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;5231:73;;;:::i;:::-;;1905:124;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1905:124:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;6583:95;6622:13;6647:24;;;;;;;;;;;;;;;;;;;6583:95;:::o;5543:133::-;5613:4;5636:6;:14;;;;5651:8;5661:7;5636:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;5636:33:1;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;5636:33:1;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;5636:33:1;;;;;;;;;;;;;;;;5629:40;;5543:133;;;;:::o;4702:71::-;4745:6;:19;;;;:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4745:21:1;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;4745:21:1;;;;4702:71::o;6356:155::-;6441:4;6464:6;:19;;;;6484:5;6491:3;6496:7;6464:40;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;6464:40:1;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;6464:40:1;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;6464:40:1;;;;;;;;;;;;;;;;6457:47;;6356:155;;;;;:::o;2349:119::-;2420:6;:18;;;;2439:21;2420:41;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2420:41:1;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2420:41:1;;;;2349:119;:::o;5015:91::-;5068:6;:29;;;;:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;5068:31:1;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;5068:31:1;;;;5015:91::o;6915:76::-;6958:5;6982:2;6975:9;;6915:76;:::o;3449:193::-;3577:6;:18;;;;3596:7;;3605:9;;3616:12;3630:4;3577:58;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;3577:58:1;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;3577:58:1;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3577:58:1;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;3577:58:1;;;;3449:193;;;;;;:::o;2122:95::-;2181:6;:17;;;;2199:10;2181:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2181:29:1;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2181:29:1;;;;2122:95;:::o;4543:75::-;4588:23;:6;:21;:23::i;:::-;4543:75::o;3890:171::-;3999:6;:27;;;;4027:6;;4035:10;4047:6;3999:55;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;3999:55:1;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3999:55:1;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;3999:55:1;;;;3890:171;;;;:::o;4336:121::-;4412:38;4436:13;4412:6;:23;;:38;;;;:::i;:::-;4336:121;:::o;2745:107::-;2814:6;:13;;;;2828:10;2840:4;2814:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2814:31:1;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2814:31:1;;;;2745:107;;:::o;1537:165::-;1639:6;:19;;;;1659:10;1671;1683:11;1639:56;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1639:56:1;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1639:56:1;;;;1537:165;;;:::o;6752:85::-;6793:13;6818:12;;;;;;;;;;;;;;;;;;;6752:85;:::o;5889:125::-;5955:4;5978:6;:15;;;;5994:3;5999:7;5978:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;5978:29:1;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;5978:29:1;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;5978:29:1;;;;;;;;;;;;;;;;5971:36;;5889:125;;;;:::o;5231:73::-;5275:6;:20;;;;:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;5275:22:1;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;5275:22:1;;;;5231:73::o;1905:124::-;1981:6;:11;;;;1993:10;2005:16;1981:41;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1981:41:1;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1981:41:1;;;;1905:124;;:::o;16220:410:8:-;16333:4;:16;;:44;16350:26;;;;;;;;;;;;;;;;;;;16333:44;;;;;;;;;;;;;;;;;;;;;16319:58;;:10;:58;;;16311:98;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;16484:4;:16;;:44;16501:26;;;;;;;;;;;;;;;;;;;16484:44;;;;;;;;;;;;;;;;;;;;;16424:105;;16445:4;:16;;:37;16462:19;;;;;;;;;;;;;;;;;;;16445:37;;;;;;;;;;;;;;;;;;;;;16424:105;;;;;;;;;;;;16579:4;:16;;:44;16596:26;;;;;;;;;;;;;;;;;;;16579:44;;;;;;;;;;;;;;;;;;;;;16539:4;:16;;:37;16556:19;;;;;;;;;;;;;;;;;;;16539:37;;;;;;;;;;;;:84;;;;;;;;;;;;;;;;;;16220:410;:::o;15764:370::-;15910:4;:16;;:37;15927:19;;;;;;;;;;;;;;;;;;;15910:37;;;;;;;;;;;;;;;;;;;;;15896:51;;:10;:51;;;15888:83;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;16043:13;15986:71;;16004:4;:16;;:37;16021:19;;;;;;;;;;;;;;;;;;;16004:37;;;;;;;;;;;;;;;;;;;;;15986:71;;;;;;;;;;;;16114:13;16067:4;:16;;:44;16084:26;;;;;;;;;;;;;;;;;;;16067:44;;;;;;;;;;;;:60;;;;;;;;;;;;;;;;;;15764:370;;:::o",
  "source": "pragma solidity ^0.5.0;\n\nimport \"./libraries/SafeMath.sol\";\nimport \"./libraries/TellorStorage.sol\";\nimport \"./libraries/TellorTransfer.sol\";\nimport \"./libraries/TellorDispute.sol\";\nimport \"./libraries/TellorStake.sol\";\nimport \"./libraries/TellorLibrary.sol\";\n\n/**\n * @title Tellor Oracle System\n * @dev Oracle contract where miners can submit the proof of work along with the value.\n * The logic for this contract is in TellorLibrary.sol, TellorDispute.sol, TellorStake.sol,\n * and TellorTransfer.sol\n */\ncontract Tellor {\n    using SafeMath for uint256;\n\n    using TellorDispute for TellorStorage.TellorStorageStruct;\n    using TellorLibrary for TellorStorage.TellorStorageStruct;\n    using TellorStake for TellorStorage.TellorStorageStruct;\n    using TellorTransfer for TellorStorage.TellorStorageStruct;\n\n    TellorStorage.TellorStorageStruct tellor;\n\n    /*Functions*/\n\n    /*This is a cheat for demo purposes, will delete upon actual launch*/\n    /* function theLazyCoon(address _address, uint _amount) public {\n        tellor.theLazyCoon(_address,_amount);\n    } */\n\n    /**\n    * @dev Helps initialize a dispute by assigning it a disputeId\n    * when a miner returns a false on the validate array(in Tellor.ProofOfWork) it sends the\n    * invalidated value information to POS voting\n    * @param _requestId being disputed\n    * @param _timestamp being disputed\n    * @param _minerIndex the index of the miner that submitted the value being disputed. Since each official value\n    * requires 5 miners to submit a value.\n    */\n    function beginDispute(uint256 _requestId, uint256 _timestamp, uint256 _minerIndex) external {\n        tellor.beginDispute(_requestId, _timestamp, _minerIndex);\n    }\n\n    /**\n    * @dev Allows token holders to vote\n    * @param _disputeId is the dispute id\n    * @param _supportsDispute is the vote (true=the dispute has basis false = vote against dispute)\n    */\n    function vote(uint256 _disputeId, bool _supportsDispute) external {\n        tellor.vote(_disputeId, _supportsDispute);\n    }\n\n    /**\n    * @dev tallies the votes.\n    * @param _disputeId is the dispute id\n    */\n    function tallyVotes(uint256 _disputeId) external {\n        tellor.tallyVotes(_disputeId);\n    }\n\n    /**\n    * @dev Allows for a fork to be proposed\n    * @param _propNewTellorAddress address for new proposed Tellor\n    */\n    function proposeFork(address _propNewTellorAddress) external {\n        tellor.proposeFork(_propNewTellorAddress);\n    }\n\n    /**\n    * @dev Add tip to Request value from oracle\n    * @param _requestId being requested to be mined\n    * @param _tip amount the requester is willing to pay to be get on queue. Miners\n    * mine the onDeckQueryHash, or the api with the highest payout pool\n    */\n    function addTip(uint256 _requestId, uint256 _tip) external {\n        tellor.addTip(_requestId, _tip);\n    }\n\n    /**\n    * @dev Request to retreive value from oracle based on timestamp. The tip is not required to be\n    * greater than 0 because there are no tokens in circulation for the initial(genesis) request\n    * @param _c_sapi string API being requested be mined\n    * @param _c_symbol is the short string symbol for the api request\n    * @param _granularity is the number of decimals miners should include on the submitted value\n    * @param _tip amount the requester is willing to pay to be get on queue. Miners\n    * mine the onDeckQueryHash, or the api with the highest payout pool\n    */\n    function requestData(string calldata _c_sapi, string calldata _c_symbol, uint256 _granularity, uint256 _tip) external {\n        tellor.requestData(_c_sapi, _c_symbol, _granularity, _tip);\n    }\n\n    /**\n    * @dev Proof of work is called by the miner when they submit the solution (proof of work and value)\n    * @param _nonce uint submitted by miner\n    * @param _requestId the apiId being mined\n    * @param _value of api query\n    */\n    function submitMiningSolution(string calldata _nonce, uint256 _requestId, uint256 _value) external {\n        tellor.submitMiningSolution(_nonce, _requestId, _value);\n    }\n\n    /**\n    * @dev Allows the current owner to propose transfer control of the contract to a\n    * newOwner and the ownership is pending until the new owner calls the claimOwnership\n    * function\n    * @param _pendingOwner The address to transfer ownership to.\n    */\n    function proposeOwnership(address payable _pendingOwner) external {\n        tellor.proposeOwnership(_pendingOwner);\n    }\n\n    /**\n    * @dev Allows the new owner to claim control of the contract\n    */\n    function claimOwnership() external {\n        tellor.claimOwnership();\n    }\n\n    /**\n    * @dev This function allows miners to deposit their stake.\n    */\n    function depositStake() external {\n        tellor.depositStake();\n    }\n\n    /**\n    * @dev This function allows stakers to request to withdraw their stake (no longer stake)\n    * once they lock for withdraw(stakes.currentStatus = 2) they are locked for 7 days before they\n    * can withdraw the stake\n    */\n    function requestStakingWithdraw() external {\n        tellor.requestStakingWithdraw();\n    }\n\n    /**\n    * @dev This function allows users to withdraw their stake after a 7 day waiting period from request\n    */\n    function withdrawStake() external {\n        tellor.withdrawStake();\n    }\n\n    /**\n    * @dev This function approves a _spender an _amount of tokens to use\n    * @param _spender address\n    * @param _amount amount the spender is being approved for\n    * @return true if spender appproved successfully\n    */\n    function approve(address _spender, uint256 _amount) external returns (bool) {\n        return tellor.approve(_spender, _amount);\n    }\n\n    /**\n    * @dev Allows for a transfer of tokens to _to\n    * @param _to The address to send tokens to\n    * @param _amount The amount of tokens to send\n    * @return true if transfer is successful\n    */\n    function transfer(address _to, uint256 _amount) external returns (bool) {\n        return tellor.transfer(_to, _amount);\n    }\n\n    /**\n    * @dev Sends _amount tokens to _to from _from on the condition it\n    * is approved by _from\n    * @param _from The address holding the tokens being transferred\n    * @param _to The address of the recipient\n    * @param _amount The amount of tokens to be transferred\n    * @return True if the transfer was successful\n    */\n    function transferFrom(address _from, address _to, uint256 _amount) external returns (bool) {\n        return tellor.transferFrom(_from, _to, _amount);\n    }\n\n    /**\n    * @dev Allows users to access the token's name\n    */\n    function name() external pure returns (string memory) {\n        return \"Tellor Tributes\";\n    }\n\n    /**\n    * @dev Allows users to access the token's symbol\n    */\n    function symbol() external pure returns (string memory) {\n        return \"TRB\";\n    }\n\n    /**\n    * @dev Allows users to access the number of decimals\n    */\n    function decimals() external pure returns (uint8) {\n        return 18;\n    }\n\n}\n",
  "sourcePath": "/Users/mdcoon/git/TellorCore/contracts/Tellor.sol",
  "ast": {
    "absolutePath": "/Users/mdcoon/git/TellorCore/contracts/Tellor.sol",
    "exportedSymbols": {
      "Tellor": [
        316
      ]
    },
    "id": 317,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 58,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:1"
      },
      {
        "absolutePath": "/Users/mdcoon/git/TellorCore/contracts/libraries/SafeMath.sol",
        "file": "./libraries/SafeMath.sol",
        "id": 59,
        "nodeType": "ImportDirective",
        "scope": 317,
        "sourceUnit": 1236,
        "src": "25:34:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/mdcoon/git/TellorCore/contracts/libraries/TellorStorage.sol",
        "file": "./libraries/TellorStorage.sol",
        "id": 60,
        "nodeType": "ImportDirective",
        "scope": 317,
        "sourceUnit": 5147,
        "src": "60:39:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/mdcoon/git/TellorCore/contracts/libraries/TellorTransfer.sol",
        "file": "./libraries/TellorTransfer.sol",
        "id": 61,
        "nodeType": "ImportDirective",
        "scope": 317,
        "sourceUnit": 5679,
        "src": "100:40:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/mdcoon/git/TellorCore/contracts/libraries/TellorDispute.sol",
        "file": "./libraries/TellorDispute.sol",
        "id": 62,
        "nodeType": "ImportDirective",
        "scope": 317,
        "sourceUnit": 2197,
        "src": "141:39:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/mdcoon/git/TellorCore/contracts/libraries/TellorStake.sol",
        "file": "./libraries/TellorStake.sol",
        "id": 63,
        "nodeType": "ImportDirective",
        "scope": 317,
        "sourceUnit": 4999,
        "src": "181:37:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/mdcoon/git/TellorCore/contracts/libraries/TellorLibrary.sol",
        "file": "./libraries/TellorLibrary.sol",
        "id": 64,
        "nodeType": "ImportDirective",
        "scope": 317,
        "sourceUnit": 4596,
        "src": "219:39:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": "@title Tellor Oracle System\n@dev Oracle contract where miners can submit the proof of work along with the value.\nThe logic for this contract is in TellorLibrary.sol, TellorDispute.sol, TellorStake.sol,\nand TellorTransfer.sol",
        "fullyImplemented": true,
        "id": 316,
        "linearizedBaseContracts": [
          316
        ],
        "name": "Tellor",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 67,
            "libraryName": {
              "contractScope": null,
              "id": 65,
              "name": "SafeMath",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1235,
              "src": "533:8:1",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SafeMath_$1235",
                "typeString": "library SafeMath"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "527:27:1",
            "typeName": {
              "id": 66,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "546:7:1",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "id": 70,
            "libraryName": {
              "contractScope": null,
              "id": 68,
              "name": "TellorDispute",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2196,
              "src": "566:13:1",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_TellorDispute_$2196",
                "typeString": "library TellorDispute"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "560:58:1",
            "typeName": {
              "contractScope": null,
              "id": 69,
              "name": "TellorStorage.TellorStorageStruct",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 5145,
              "src": "584:33:1",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_TellorStorageStruct_$5145_storage_ptr",
                "typeString": "struct TellorStorage.TellorStorageStruct"
              }
            }
          },
          {
            "id": 73,
            "libraryName": {
              "contractScope": null,
              "id": 71,
              "name": "TellorLibrary",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 4595,
              "src": "629:13:1",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_TellorLibrary_$4595",
                "typeString": "library TellorLibrary"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "623:58:1",
            "typeName": {
              "contractScope": null,
              "id": 72,
              "name": "TellorStorage.TellorStorageStruct",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 5145,
              "src": "647:33:1",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_TellorStorageStruct_$5145_storage_ptr",
                "typeString": "struct TellorStorage.TellorStorageStruct"
              }
            }
          },
          {
            "id": 76,
            "libraryName": {
              "contractScope": null,
              "id": 74,
              "name": "TellorStake",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 4998,
              "src": "692:11:1",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_TellorStake_$4998",
                "typeString": "library TellorStake"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "686:56:1",
            "typeName": {
              "contractScope": null,
              "id": 75,
              "name": "TellorStorage.TellorStorageStruct",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 5145,
              "src": "708:33:1",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_TellorStorageStruct_$5145_storage_ptr",
                "typeString": "struct TellorStorage.TellorStorageStruct"
              }
            }
          },
          {
            "id": 79,
            "libraryName": {
              "contractScope": null,
              "id": 77,
              "name": "TellorTransfer",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 5678,
              "src": "753:14:1",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_TellorTransfer_$5678",
                "typeString": "library TellorTransfer"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "747:59:1",
            "typeName": {
              "contractScope": null,
              "id": 78,
              "name": "TellorStorage.TellorStorageStruct",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 5145,
              "src": "772:33:1",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_TellorStorageStruct_$5145_storage_ptr",
                "typeString": "struct TellorStorage.TellorStorageStruct"
              }
            }
          },
          {
            "constant": false,
            "id": 81,
            "name": "tellor",
            "nodeType": "VariableDeclaration",
            "scope": 316,
            "src": "812:40:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_struct$_TellorStorageStruct_$5145_storage",
              "typeString": "struct TellorStorage.TellorStorageStruct"
            },
            "typeName": {
              "contractScope": null,
              "id": 80,
              "name": "TellorStorage.TellorStorageStruct",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 5145,
              "src": "812:33:1",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_TellorStorageStruct_$5145_storage_ptr",
                "typeString": "struct TellorStorage.TellorStorageStruct"
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 98,
              "nodeType": "Block",
              "src": "1629:73:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 93,
                        "name": "_requestId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 83,
                        "src": "1659:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 94,
                        "name": "_timestamp",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 85,
                        "src": "1671:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 95,
                        "name": "_minerIndex",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 87,
                        "src": "1683:11:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 90,
                        "name": "tellor",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 81,
                        "src": "1639:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TellorStorageStruct_$5145_storage",
                          "typeString": "struct TellorStorage.TellorStorageStruct storage ref"
                        }
                      },
                      "id": 92,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "beginDispute",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1564,
                      "src": "1639:19:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_delegatecall_nonpayable$_t_struct$_TellorStorageStruct_$5145_storage_ptr_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$bound_to$_t_struct$_TellorStorageStruct_$5145_storage_ptr_$",
                        "typeString": "function (struct TellorStorage.TellorStorageStruct storage pointer,uint256,uint256,uint256)"
                      }
                    },
                    "id": 96,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1639:56:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 97,
                  "nodeType": "ExpressionStatement",
                  "src": "1639:56:1"
                }
              ]
            },
            "documentation": "@dev Helps initialize a dispute by assigning it a disputeId\nwhen a miner returns a false on the validate array(in Tellor.ProofOfWork) it sends the\ninvalidated value information to POS voting\n@param _requestId being disputed\n@param _timestamp being disputed\n@param _minerIndex the index of the miner that submitted the value being disputed. Since each official value\nrequires 5 miners to submit a value.",
            "id": 99,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "beginDispute",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 88,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 83,
                  "name": "_requestId",
                  "nodeType": "VariableDeclaration",
                  "scope": 99,
                  "src": "1559:18:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 82,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1559:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 85,
                  "name": "_timestamp",
                  "nodeType": "VariableDeclaration",
                  "scope": 99,
                  "src": "1579:18:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 84,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1579:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 87,
                  "name": "_minerIndex",
                  "nodeType": "VariableDeclaration",
                  "scope": 99,
                  "src": "1599:19:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 86,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1599:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1558:61:1"
            },
            "returnParameters": {
              "id": 89,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1629:0:1"
            },
            "scope": 316,
            "src": "1537:165:1",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 113,
              "nodeType": "Block",
              "src": "1971:58:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 109,
                        "name": "_disputeId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 101,
                        "src": "1993:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 110,
                        "name": "_supportsDispute",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 103,
                        "src": "2005:16:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 106,
                        "name": "tellor",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 81,
                        "src": "1981:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TellorStorageStruct_$5145_storage",
                          "typeString": "struct TellorStorage.TellorStorageStruct storage ref"
                        }
                      },
                      "id": 108,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "vote",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1692,
                      "src": "1981:11:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_delegatecall_nonpayable$_t_struct$_TellorStorageStruct_$5145_storage_ptr_$_t_uint256_$_t_bool_$returns$__$bound_to$_t_struct$_TellorStorageStruct_$5145_storage_ptr_$",
                        "typeString": "function (struct TellorStorage.TellorStorageStruct storage pointer,uint256,bool)"
                      }
                    },
                    "id": 111,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1981:41:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 112,
                  "nodeType": "ExpressionStatement",
                  "src": "1981:41:1"
                }
              ]
            },
            "documentation": "@dev Allows token holders to vote\n@param _disputeId is the dispute id\n@param _supportsDispute is the vote (true=the dispute has basis false = vote against dispute)",
            "id": 114,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "vote",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 104,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 101,
                  "name": "_disputeId",
                  "nodeType": "VariableDeclaration",
                  "scope": 114,
                  "src": "1919:18:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 100,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1919:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 103,
                  "name": "_supportsDispute",
                  "nodeType": "VariableDeclaration",
                  "scope": 114,
                  "src": "1939:21:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 102,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1939:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1918:43:1"
            },
            "returnParameters": {
              "id": 105,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1971:0:1"
            },
            "scope": 316,
            "src": "1905:124:1",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 125,
              "nodeType": "Block",
              "src": "2171:46:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 122,
                        "name": "_disputeId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 116,
                        "src": "2199:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 119,
                        "name": "tellor",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 81,
                        "src": "2181:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TellorStorageStruct_$5145_storage",
                          "typeString": "struct TellorStorage.TellorStorageStruct storage ref"
                        }
                      },
                      "id": 121,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "tallyVotes",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1980,
                      "src": "2181:17:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_delegatecall_nonpayable$_t_struct$_TellorStorageStruct_$5145_storage_ptr_$_t_uint256_$returns$__$bound_to$_t_struct$_TellorStorageStruct_$5145_storage_ptr_$",
                        "typeString": "function (struct TellorStorage.TellorStorageStruct storage pointer,uint256)"
                      }
                    },
                    "id": 123,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2181:29:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 124,
                  "nodeType": "ExpressionStatement",
                  "src": "2181:29:1"
                }
              ]
            },
            "documentation": "@dev tallies the votes.\n@param _disputeId is the dispute id",
            "id": 126,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "tallyVotes",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 117,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 116,
                  "name": "_disputeId",
                  "nodeType": "VariableDeclaration",
                  "scope": 126,
                  "src": "2142:18:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 115,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2142:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2141:20:1"
            },
            "returnParameters": {
              "id": 118,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2171:0:1"
            },
            "scope": 316,
            "src": "2122:95:1",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 137,
              "nodeType": "Block",
              "src": "2410:58:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 134,
                        "name": "_propNewTellorAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 128,
                        "src": "2439:21:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 131,
                        "name": "tellor",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 81,
                        "src": "2420:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TellorStorageStruct_$5145_storage",
                          "typeString": "struct TellorStorage.TellorStorageStruct storage ref"
                        }
                      },
                      "id": 133,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "proposeFork",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2117,
                      "src": "2420:18:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_delegatecall_nonpayable$_t_struct$_TellorStorageStruct_$5145_storage_ptr_$_t_address_$returns$__$bound_to$_t_struct$_TellorStorageStruct_$5145_storage_ptr_$",
                        "typeString": "function (struct TellorStorage.TellorStorageStruct storage pointer,address)"
                      }
                    },
                    "id": 135,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2420:41:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 136,
                  "nodeType": "ExpressionStatement",
                  "src": "2420:41:1"
                }
              ]
            },
            "documentation": "@dev Allows for a fork to be proposed\n@param _propNewTellorAddress address for new proposed Tellor",
            "id": 138,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "proposeFork",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 129,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 128,
                  "name": "_propNewTellorAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 138,
                  "src": "2370:29:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 127,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2370:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2369:31:1"
            },
            "returnParameters": {
              "id": 130,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2410:0:1"
            },
            "scope": 316,
            "src": "2349:119:1",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 152,
              "nodeType": "Block",
              "src": "2804:48:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 148,
                        "name": "_requestId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 140,
                        "src": "2828:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 149,
                        "name": "_tip",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 142,
                        "src": "2840:4:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 145,
                        "name": "tellor",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 81,
                        "src": "2814:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TellorStorageStruct_$5145_storage",
                          "typeString": "struct TellorStorage.TellorStorageStruct storage ref"
                        }
                      },
                      "id": 147,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "addTip",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3198,
                      "src": "2814:13:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_delegatecall_nonpayable$_t_struct$_TellorStorageStruct_$5145_storage_ptr_$_t_uint256_$_t_uint256_$returns$__$bound_to$_t_struct$_TellorStorageStruct_$5145_storage_ptr_$",
                        "typeString": "function (struct TellorStorage.TellorStorageStruct storage pointer,uint256,uint256)"
                      }
                    },
                    "id": 150,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2814:31:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 151,
                  "nodeType": "ExpressionStatement",
                  "src": "2814:31:1"
                }
              ]
            },
            "documentation": "@dev Add tip to Request value from oracle\n@param _requestId being requested to be mined\n@param _tip amount the requester is willing to pay to be get on queue. Miners\nmine the onDeckQueryHash, or the api with the highest payout pool",
            "id": 153,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "addTip",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 143,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 140,
                  "name": "_requestId",
                  "nodeType": "VariableDeclaration",
                  "scope": 153,
                  "src": "2761:18:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 139,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2761:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 142,
                  "name": "_tip",
                  "nodeType": "VariableDeclaration",
                  "scope": 153,
                  "src": "2781:12:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 141,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2781:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2760:34:1"
            },
            "returnParameters": {
              "id": 144,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2804:0:1"
            },
            "scope": 316,
            "src": "2745:107:1",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 173,
              "nodeType": "Block",
              "src": "3567:75:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 167,
                        "name": "_c_sapi",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 155,
                        "src": "3596:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 168,
                        "name": "_c_symbol",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 157,
                        "src": "3605:9:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 169,
                        "name": "_granularity",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 159,
                        "src": "3616:12:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 170,
                        "name": "_tip",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 161,
                        "src": "3630:4:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        },
                        {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 164,
                        "name": "tellor",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 81,
                        "src": "3577:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TellorStorageStruct_$5145_storage",
                          "typeString": "struct TellorStorage.TellorStorageStruct storage ref"
                        }
                      },
                      "id": 166,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "requestData",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3406,
                      "src": "3577:18:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_delegatecall_nonpayable$_t_struct$_TellorStorageStruct_$5145_storage_ptr_$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$__$bound_to$_t_struct$_TellorStorageStruct_$5145_storage_ptr_$",
                        "typeString": "function (struct TellorStorage.TellorStorageStruct storage pointer,string memory,string memory,uint256,uint256)"
                      }
                    },
                    "id": 171,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3577:58:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 172,
                  "nodeType": "ExpressionStatement",
                  "src": "3577:58:1"
                }
              ]
            },
            "documentation": "@dev Request to retreive value from oracle based on timestamp. The tip is not required to be\ngreater than 0 because there are no tokens in circulation for the initial(genesis) request\n@param _c_sapi string API being requested be mined\n@param _c_symbol is the short string symbol for the api request\n@param _granularity is the number of decimals miners should include on the submitted value\n@param _tip amount the requester is willing to pay to be get on queue. Miners\nmine the onDeckQueryHash, or the api with the highest payout pool",
            "id": 174,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "requestData",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 162,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 155,
                  "name": "_c_sapi",
                  "nodeType": "VariableDeclaration",
                  "scope": 174,
                  "src": "3470:23:1",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_calldata_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 154,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "3470:6:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 157,
                  "name": "_c_symbol",
                  "nodeType": "VariableDeclaration",
                  "scope": 174,
                  "src": "3495:25:1",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_calldata_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 156,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "3495:6:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 159,
                  "name": "_granularity",
                  "nodeType": "VariableDeclaration",
                  "scope": 174,
                  "src": "3522:20:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 158,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3522:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 161,
                  "name": "_tip",
                  "nodeType": "VariableDeclaration",
                  "scope": 174,
                  "src": "3544:12:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 160,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3544:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3469:88:1"
            },
            "returnParameters": {
              "id": 163,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3567:0:1"
            },
            "scope": 316,
            "src": "3449:193:1",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 191,
              "nodeType": "Block",
              "src": "3989:72:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 186,
                        "name": "_nonce",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 176,
                        "src": "4027:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 187,
                        "name": "_requestId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 178,
                        "src": "4035:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 188,
                        "name": "_value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 180,
                        "src": "4047:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 183,
                        "name": "tellor",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 81,
                        "src": "3999:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TellorStorageStruct_$5145_storage",
                          "typeString": "struct TellorStorage.TellorStorageStruct storage ref"
                        }
                      },
                      "id": 185,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "submitMiningSolution",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4217,
                      "src": "3999:27:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_delegatecall_nonpayable$_t_struct$_TellorStorageStruct_$5145_storage_ptr_$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$__$bound_to$_t_struct$_TellorStorageStruct_$5145_storage_ptr_$",
                        "typeString": "function (struct TellorStorage.TellorStorageStruct storage pointer,string memory,uint256,uint256)"
                      }
                    },
                    "id": 189,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3999:55:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 190,
                  "nodeType": "ExpressionStatement",
                  "src": "3999:55:1"
                }
              ]
            },
            "documentation": "@dev Proof of work is called by the miner when they submit the solution (proof of work and value)\n@param _nonce uint submitted by miner\n@param _requestId the apiId being mined\n@param _value of api query",
            "id": 192,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "submitMiningSolution",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 181,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 176,
                  "name": "_nonce",
                  "nodeType": "VariableDeclaration",
                  "scope": 192,
                  "src": "3920:22:1",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_calldata_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 175,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "3920:6:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 178,
                  "name": "_requestId",
                  "nodeType": "VariableDeclaration",
                  "scope": 192,
                  "src": "3944:18:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 177,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3944:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 180,
                  "name": "_value",
                  "nodeType": "VariableDeclaration",
                  "scope": 192,
                  "src": "3964:14:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 179,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3964:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3919:60:1"
            },
            "returnParameters": {
              "id": 182,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3989:0:1"
            },
            "scope": 316,
            "src": "3890:171:1",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 203,
              "nodeType": "Block",
              "src": "4402:55:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 200,
                        "name": "_pendingOwner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 194,
                        "src": "4436:13:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 197,
                        "name": "tellor",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 81,
                        "src": "4412:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TellorStorageStruct_$5145_storage",
                          "typeString": "struct TellorStorage.TellorStorageStruct storage ref"
                        }
                      },
                      "id": 199,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "proposeOwnership",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4258,
                      "src": "4412:23:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_TellorStorageStruct_$5145_storage_ptr_$_t_address_payable_$returns$__$bound_to$_t_struct$_TellorStorageStruct_$5145_storage_ptr_$",
                        "typeString": "function (struct TellorStorage.TellorStorageStruct storage pointer,address payable)"
                      }
                    },
                    "id": 201,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4412:38:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 202,
                  "nodeType": "ExpressionStatement",
                  "src": "4412:38:1"
                }
              ]
            },
            "documentation": "@dev Allows the current owner to propose transfer control of the contract to a\nnewOwner and the ownership is pending until the new owner calls the claimOwnership\nfunction\n@param _pendingOwner The address to transfer ownership to.",
            "id": 204,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "proposeOwnership",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 195,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 194,
                  "name": "_pendingOwner",
                  "nodeType": "VariableDeclaration",
                  "scope": 204,
                  "src": "4362:29:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "typeName": {
                    "id": 193,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4362:15:1",
                    "stateMutability": "payable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4361:31:1"
            },
            "returnParameters": {
              "id": 196,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4402:0:1"
            },
            "scope": 316,
            "src": "4336:121:1",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 212,
              "nodeType": "Block",
              "src": "4578:40:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "argumentTypes": null,
                        "id": 207,
                        "name": "tellor",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 81,
                        "src": "4588:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TellorStorageStruct_$5145_storage",
                          "typeString": "struct TellorStorage.TellorStorageStruct storage ref"
                        }
                      },
                      "id": 209,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "claimOwnership",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4307,
                      "src": "4588:21:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_TellorStorageStruct_$5145_storage_ptr_$returns$__$bound_to$_t_struct$_TellorStorageStruct_$5145_storage_ptr_$",
                        "typeString": "function (struct TellorStorage.TellorStorageStruct storage pointer)"
                      }
                    },
                    "id": 210,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4588:23:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 211,
                  "nodeType": "ExpressionStatement",
                  "src": "4588:23:1"
                }
              ]
            },
            "documentation": "@dev Allows the new owner to claim control of the contract",
            "id": 213,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "claimOwnership",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 205,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4566:2:1"
            },
            "returnParameters": {
              "id": 206,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4578:0:1"
            },
            "scope": 316,
            "src": "4543:75:1",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 221,
              "nodeType": "Block",
              "src": "4735:38:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "argumentTypes": null,
                        "id": 216,
                        "name": "tellor",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 81,
                        "src": "4745:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TellorStorageStruct_$5145_storage",
                          "typeString": "struct TellorStorage.TellorStorageStruct storage ref"
                        }
                      },
                      "id": 218,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "depositStake",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4923,
                      "src": "4745:19:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_delegatecall_nonpayable$_t_struct$_TellorStorageStruct_$5145_storage_ptr_$returns$__$bound_to$_t_struct$_TellorStorageStruct_$5145_storage_ptr_$",
                        "typeString": "function (struct TellorStorage.TellorStorageStruct storage pointer)"
                      }
                    },
                    "id": 219,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4745:21:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 220,
                  "nodeType": "ExpressionStatement",
                  "src": "4745:21:1"
                }
              ]
            },
            "documentation": "@dev This function allows miners to deposit their stake.",
            "id": 222,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "depositStake",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 214,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4723:2:1"
            },
            "returnParameters": {
              "id": 215,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4735:0:1"
            },
            "scope": 316,
            "src": "4702:71:1",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 230,
              "nodeType": "Block",
              "src": "5058:48:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "argumentTypes": null,
                        "id": 225,
                        "name": "tellor",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 81,
                        "src": "5068:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TellorStorageStruct_$5145_storage",
                          "typeString": "struct TellorStorage.TellorStorageStruct storage ref"
                        }
                      },
                      "id": 227,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "requestStakingWithdraw",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4855,
                      "src": "5068:29:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_delegatecall_nonpayable$_t_struct$_TellorStorageStruct_$5145_storage_ptr_$returns$__$bound_to$_t_struct$_TellorStorageStruct_$5145_storage_ptr_$",
                        "typeString": "function (struct TellorStorage.TellorStorageStruct storage pointer)"
                      }
                    },
                    "id": 228,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5068:31:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 229,
                  "nodeType": "ExpressionStatement",
                  "src": "5068:31:1"
                }
              ]
            },
            "documentation": "@dev This function allows stakers to request to withdraw their stake (no longer stake)\nonce they lock for withdraw(stakes.currentStatus = 2) they are locked for 7 days before they\ncan withdraw the stake",
            "id": 231,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "requestStakingWithdraw",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 223,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5046:2:1"
            },
            "returnParameters": {
              "id": 224,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5058:0:1"
            },
            "scope": 316,
            "src": "5015:91:1",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 239,
              "nodeType": "Block",
              "src": "5265:39:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "argumentTypes": null,
                        "id": 234,
                        "name": "tellor",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 81,
                        "src": "5275:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TellorStorageStruct_$5145_storage",
                          "typeString": "struct TellorStorage.TellorStorageStruct storage ref"
                        }
                      },
                      "id": 236,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "withdrawStake",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4905,
                      "src": "5275:20:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_delegatecall_nonpayable$_t_struct$_TellorStorageStruct_$5145_storage_ptr_$returns$__$bound_to$_t_struct$_TellorStorageStruct_$5145_storage_ptr_$",
                        "typeString": "function (struct TellorStorage.TellorStorageStruct storage pointer)"
                      }
                    },
                    "id": 237,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5275:22:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 238,
                  "nodeType": "ExpressionStatement",
                  "src": "5275:22:1"
                }
              ]
            },
            "documentation": "@dev This function allows users to withdraw their stake after a 7 day waiting period from request",
            "id": 240,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "withdrawStake",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 232,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5253:2:1"
            },
            "returnParameters": {
              "id": 233,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5265:0:1"
            },
            "scope": 316,
            "src": "5231:73:1",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 255,
              "nodeType": "Block",
              "src": "5619:57:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 251,
                        "name": "_spender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 242,
                        "src": "5651:8:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 252,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 244,
                        "src": "5661:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 249,
                        "name": "tellor",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 81,
                        "src": "5636:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TellorStorageStruct_$5145_storage",
                          "typeString": "struct TellorStorage.TellorStorageStruct storage ref"
                        }
                      },
                      "id": 250,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "approve",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5279,
                      "src": "5636:14:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_delegatecall_nonpayable$_t_struct$_TellorStorageStruct_$5145_storage_ptr_$_t_address_$_t_uint256_$returns$_t_bool_$bound_to$_t_struct$_TellorStorageStruct_$5145_storage_ptr_$",
                        "typeString": "function (struct TellorStorage.TellorStorageStruct storage pointer,address,uint256) returns (bool)"
                      }
                    },
                    "id": 253,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5636:33:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 248,
                  "id": 254,
                  "nodeType": "Return",
                  "src": "5629:40:1"
                }
              ]
            },
            "documentation": "@dev This function approves a _spender an _amount of tokens to use\n@param _spender address\n@param _amount amount the spender is being approved for\n@return true if spender appproved successfully",
            "id": 256,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "approve",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 245,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 242,
                  "name": "_spender",
                  "nodeType": "VariableDeclaration",
                  "scope": 256,
                  "src": "5560:16:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 241,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5560:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 244,
                  "name": "_amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 256,
                  "src": "5578:15:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 243,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5578:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "5559:35:1"
            },
            "returnParameters": {
              "id": 248,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 247,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 256,
                  "src": "5613:4:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 246,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "5613:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "5612:6:1"
            },
            "scope": 316,
            "src": "5543:133:1",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 271,
              "nodeType": "Block",
              "src": "5961:53:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 267,
                        "name": "_to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 258,
                        "src": "5994:3:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 268,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 260,
                        "src": "5999:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 265,
                        "name": "tellor",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 81,
                        "src": "5978:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TellorStorageStruct_$5145_storage",
                          "typeString": "struct TellorStorage.TellorStorageStruct storage ref"
                        }
                      },
                      "id": 266,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5191,
                      "src": "5978:15:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_delegatecall_nonpayable$_t_struct$_TellorStorageStruct_$5145_storage_ptr_$_t_address_$_t_uint256_$returns$_t_bool_$bound_to$_t_struct$_TellorStorageStruct_$5145_storage_ptr_$",
                        "typeString": "function (struct TellorStorage.TellorStorageStruct storage pointer,address,uint256) returns (bool)"
                      }
                    },
                    "id": 269,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5978:29:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 264,
                  "id": 270,
                  "nodeType": "Return",
                  "src": "5971:36:1"
                }
              ]
            },
            "documentation": "@dev Allows for a transfer of tokens to _to\n@param _to The address to send tokens to\n@param _amount The amount of tokens to send\n@return true if transfer is successful",
            "id": 272,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "transfer",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 261,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 258,
                  "name": "_to",
                  "nodeType": "VariableDeclaration",
                  "scope": 272,
                  "src": "5907:11:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 257,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5907:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 260,
                  "name": "_amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 272,
                  "src": "5920:15:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 259,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5920:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "5906:30:1"
            },
            "returnParameters": {
              "id": 264,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 263,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 272,
                  "src": "5955:4:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 262,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "5955:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "5954:6:1"
            },
            "scope": 316,
            "src": "5889:125:1",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 290,
              "nodeType": "Block",
              "src": "6447:64:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 285,
                        "name": "_from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 274,
                        "src": "6484:5:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 286,
                        "name": "_to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 276,
                        "src": "6491:3:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 287,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 278,
                        "src": "6496:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 283,
                        "name": "tellor",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 81,
                        "src": "6464:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TellorStorageStruct_$5145_storage",
                          "typeString": "struct TellorStorage.TellorStorageStruct storage ref"
                        }
                      },
                      "id": 284,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5238,
                      "src": "6464:19:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_delegatecall_nonpayable$_t_struct$_TellorStorageStruct_$5145_storage_ptr_$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$bound_to$_t_struct$_TellorStorageStruct_$5145_storage_ptr_$",
                        "typeString": "function (struct TellorStorage.TellorStorageStruct storage pointer,address,address,uint256) returns (bool)"
                      }
                    },
                    "id": 288,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6464:40:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 282,
                  "id": 289,
                  "nodeType": "Return",
                  "src": "6457:47:1"
                }
              ]
            },
            "documentation": "@dev Sends _amount tokens to _to from _from on the condition it\nis approved by _from\n@param _from The address holding the tokens being transferred\n@param _to The address of the recipient\n@param _amount The amount of tokens to be transferred\n@return True if the transfer was successful",
            "id": 291,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "transferFrom",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 279,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 274,
                  "name": "_from",
                  "nodeType": "VariableDeclaration",
                  "scope": 291,
                  "src": "6378:13:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 273,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6378:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 276,
                  "name": "_to",
                  "nodeType": "VariableDeclaration",
                  "scope": 291,
                  "src": "6393:11:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 275,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6393:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 278,
                  "name": "_amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 291,
                  "src": "6406:15:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 277,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6406:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "6377:45:1"
            },
            "returnParameters": {
              "id": 282,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 281,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 291,
                  "src": "6441:4:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 280,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "6441:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "6440:6:1"
            },
            "scope": 316,
            "src": "6356:155:1",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 298,
              "nodeType": "Block",
              "src": "6637:41:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "hexValue": "54656c6c6f72205472696275746573",
                    "id": 296,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "6654:17:1",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_ffa130415425a38c63940260c61c1c0148f12aac50073618dc7ea6d7402db8e1",
                      "typeString": "literal_string \"Tellor Tributes\""
                    },
                    "value": "Tellor Tributes"
                  },
                  "functionReturnParameters": 295,
                  "id": 297,
                  "nodeType": "Return",
                  "src": "6647:24:1"
                }
              ]
            },
            "documentation": "@dev Allows users to access the token's name",
            "id": 299,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "name",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 292,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6596:2:1"
            },
            "returnParameters": {
              "id": 295,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 294,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 299,
                  "src": "6622:13:1",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 293,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "6622:6:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "6621:15:1"
            },
            "scope": 316,
            "src": "6583:95:1",
            "stateMutability": "pure",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 306,
              "nodeType": "Block",
              "src": "6808:29:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "hexValue": "545242",
                    "id": 304,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "6825:5:1",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_2414fea12b2e895cdf6741b2699da456be98b90524622d481ddca83d41288ae0",
                      "typeString": "literal_string \"TRB\""
                    },
                    "value": "TRB"
                  },
                  "functionReturnParameters": 303,
                  "id": 305,
                  "nodeType": "Return",
                  "src": "6818:12:1"
                }
              ]
            },
            "documentation": "@dev Allows users to access the token's symbol",
            "id": 307,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "symbol",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 300,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6767:2:1"
            },
            "returnParameters": {
              "id": 303,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 302,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 307,
                  "src": "6793:13:1",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 301,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "6793:6:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "6792:15:1"
            },
            "scope": 316,
            "src": "6752:85:1",
            "stateMutability": "pure",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 314,
              "nodeType": "Block",
              "src": "6965:26:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "hexValue": "3138",
                    "id": 312,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "6982:2:1",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_18_by_1",
                      "typeString": "int_const 18"
                    },
                    "value": "18"
                  },
                  "functionReturnParameters": 311,
                  "id": 313,
                  "nodeType": "Return",
                  "src": "6975:9:1"
                }
              ]
            },
            "documentation": "@dev Allows users to access the number of decimals",
            "id": 315,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "decimals",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 308,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6932:2:1"
            },
            "returnParameters": {
              "id": 311,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 310,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 315,
                  "src": "6958:5:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 309,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "6958:5:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "6957:7:1"
            },
            "scope": 316,
            "src": "6915:76:1",
            "stateMutability": "pure",
            "superFunction": null,
            "visibility": "external"
          }
        ],
        "scope": 317,
        "src": "505:6489:1"
      }
    ],
    "src": "0:6995:1"
  },
  "legacyAST": {
    "absolutePath": "/Users/mdcoon/git/TellorCore/contracts/Tellor.sol",
    "exportedSymbols": {
      "Tellor": [
        316
      ]
    },
    "id": 317,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 58,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:1"
      },
      {
        "absolutePath": "/Users/mdcoon/git/TellorCore/contracts/libraries/SafeMath.sol",
        "file": "./libraries/SafeMath.sol",
        "id": 59,
        "nodeType": "ImportDirective",
        "scope": 317,
        "sourceUnit": 1236,
        "src": "25:34:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/mdcoon/git/TellorCore/contracts/libraries/TellorStorage.sol",
        "file": "./libraries/TellorStorage.sol",
        "id": 60,
        "nodeType": "ImportDirective",
        "scope": 317,
        "sourceUnit": 5147,
        "src": "60:39:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/mdcoon/git/TellorCore/contracts/libraries/TellorTransfer.sol",
        "file": "./libraries/TellorTransfer.sol",
        "id": 61,
        "nodeType": "ImportDirective",
        "scope": 317,
        "sourceUnit": 5679,
        "src": "100:40:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/mdcoon/git/TellorCore/contracts/libraries/TellorDispute.sol",
        "file": "./libraries/TellorDispute.sol",
        "id": 62,
        "nodeType": "ImportDirective",
        "scope": 317,
        "sourceUnit": 2197,
        "src": "141:39:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/mdcoon/git/TellorCore/contracts/libraries/TellorStake.sol",
        "file": "./libraries/TellorStake.sol",
        "id": 63,
        "nodeType": "ImportDirective",
        "scope": 317,
        "sourceUnit": 4999,
        "src": "181:37:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/mdcoon/git/TellorCore/contracts/libraries/TellorLibrary.sol",
        "file": "./libraries/TellorLibrary.sol",
        "id": 64,
        "nodeType": "ImportDirective",
        "scope": 317,
        "sourceUnit": 4596,
        "src": "219:39:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": "@title Tellor Oracle System\n@dev Oracle contract where miners can submit the proof of work along with the value.\nThe logic for this contract is in TellorLibrary.sol, TellorDispute.sol, TellorStake.sol,\nand TellorTransfer.sol",
        "fullyImplemented": true,
        "id": 316,
        "linearizedBaseContracts": [
          316
        ],
        "name": "Tellor",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 67,
            "libraryName": {
              "contractScope": null,
              "id": 65,
              "name": "SafeMath",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1235,
              "src": "533:8:1",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SafeMath_$1235",
                "typeString": "library SafeMath"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "527:27:1",
            "typeName": {
              "id": 66,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "546:7:1",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "id": 70,
            "libraryName": {
              "contractScope": null,
              "id": 68,
              "name": "TellorDispute",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2196,
              "src": "566:13:1",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_TellorDispute_$2196",
                "typeString": "library TellorDispute"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "560:58:1",
            "typeName": {
              "contractScope": null,
              "id": 69,
              "name": "TellorStorage.TellorStorageStruct",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 5145,
              "src": "584:33:1",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_TellorStorageStruct_$5145_storage_ptr",
                "typeString": "struct TellorStorage.TellorStorageStruct"
              }
            }
          },
          {
            "id": 73,
            "libraryName": {
              "contractScope": null,
              "id": 71,
              "name": "TellorLibrary",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 4595,
              "src": "629:13:1",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_TellorLibrary_$4595",
                "typeString": "library TellorLibrary"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "623:58:1",
            "typeName": {
              "contractScope": null,
              "id": 72,
              "name": "TellorStorage.TellorStorageStruct",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 5145,
              "src": "647:33:1",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_TellorStorageStruct_$5145_storage_ptr",
                "typeString": "struct TellorStorage.TellorStorageStruct"
              }
            }
          },
          {
            "id": 76,
            "libraryName": {
              "contractScope": null,
              "id": 74,
              "name": "TellorStake",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 4998,
              "src": "692:11:1",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_TellorStake_$4998",
                "typeString": "library TellorStake"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "686:56:1",
            "typeName": {
              "contractScope": null,
              "id": 75,
              "name": "TellorStorage.TellorStorageStruct",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 5145,
              "src": "708:33:1",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_TellorStorageStruct_$5145_storage_ptr",
                "typeString": "struct TellorStorage.TellorStorageStruct"
              }
            }
          },
          {
            "id": 79,
            "libraryName": {
              "contractScope": null,
              "id": 77,
              "name": "TellorTransfer",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 5678,
              "src": "753:14:1",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_TellorTransfer_$5678",
                "typeString": "library TellorTransfer"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "747:59:1",
            "typeName": {
              "contractScope": null,
              "id": 78,
              "name": "TellorStorage.TellorStorageStruct",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 5145,
              "src": "772:33:1",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_TellorStorageStruct_$5145_storage_ptr",
                "typeString": "struct TellorStorage.TellorStorageStruct"
              }
            }
          },
          {
            "constant": false,
            "id": 81,
            "name": "tellor",
            "nodeType": "VariableDeclaration",
            "scope": 316,
            "src": "812:40:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_struct$_TellorStorageStruct_$5145_storage",
              "typeString": "struct TellorStorage.TellorStorageStruct"
            },
            "typeName": {
              "contractScope": null,
              "id": 80,
              "name": "TellorStorage.TellorStorageStruct",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 5145,
              "src": "812:33:1",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_TellorStorageStruct_$5145_storage_ptr",
                "typeString": "struct TellorStorage.TellorStorageStruct"
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 98,
              "nodeType": "Block",
              "src": "1629:73:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 93,
                        "name": "_requestId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 83,
                        "src": "1659:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 94,
                        "name": "_timestamp",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 85,
                        "src": "1671:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 95,
                        "name": "_minerIndex",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 87,
                        "src": "1683:11:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 90,
                        "name": "tellor",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 81,
                        "src": "1639:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TellorStorageStruct_$5145_storage",
                          "typeString": "struct TellorStorage.TellorStorageStruct storage ref"
                        }
                      },
                      "id": 92,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "beginDispute",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1564,
                      "src": "1639:19:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_delegatecall_nonpayable$_t_struct$_TellorStorageStruct_$5145_storage_ptr_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$bound_to$_t_struct$_TellorStorageStruct_$5145_storage_ptr_$",
                        "typeString": "function (struct TellorStorage.TellorStorageStruct storage pointer,uint256,uint256,uint256)"
                      }
                    },
                    "id": 96,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1639:56:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 97,
                  "nodeType": "ExpressionStatement",
                  "src": "1639:56:1"
                }
              ]
            },
            "documentation": "@dev Helps initialize a dispute by assigning it a disputeId\nwhen a miner returns a false on the validate array(in Tellor.ProofOfWork) it sends the\ninvalidated value information to POS voting\n@param _requestId being disputed\n@param _timestamp being disputed\n@param _minerIndex the index of the miner that submitted the value being disputed. Since each official value\nrequires 5 miners to submit a value.",
            "id": 99,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "beginDispute",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 88,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 83,
                  "name": "_requestId",
                  "nodeType": "VariableDeclaration",
                  "scope": 99,
                  "src": "1559:18:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 82,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1559:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 85,
                  "name": "_timestamp",
                  "nodeType": "VariableDeclaration",
                  "scope": 99,
                  "src": "1579:18:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 84,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1579:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 87,
                  "name": "_minerIndex",
                  "nodeType": "VariableDeclaration",
                  "scope": 99,
                  "src": "1599:19:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 86,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1599:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1558:61:1"
            },
            "returnParameters": {
              "id": 89,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1629:0:1"
            },
            "scope": 316,
            "src": "1537:165:1",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 113,
              "nodeType": "Block",
              "src": "1971:58:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 109,
                        "name": "_disputeId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 101,
                        "src": "1993:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 110,
                        "name": "_supportsDispute",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 103,
                        "src": "2005:16:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 106,
                        "name": "tellor",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 81,
                        "src": "1981:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TellorStorageStruct_$5145_storage",
                          "typeString": "struct TellorStorage.TellorStorageStruct storage ref"
                        }
                      },
                      "id": 108,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "vote",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1692,
                      "src": "1981:11:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_delegatecall_nonpayable$_t_struct$_TellorStorageStruct_$5145_storage_ptr_$_t_uint256_$_t_bool_$returns$__$bound_to$_t_struct$_TellorStorageStruct_$5145_storage_ptr_$",
                        "typeString": "function (struct TellorStorage.TellorStorageStruct storage pointer,uint256,bool)"
                      }
                    },
                    "id": 111,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1981:41:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 112,
                  "nodeType": "ExpressionStatement",
                  "src": "1981:41:1"
                }
              ]
            },
            "documentation": "@dev Allows token holders to vote\n@param _disputeId is the dispute id\n@param _supportsDispute is the vote (true=the dispute has basis false = vote against dispute)",
            "id": 114,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "vote",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 104,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 101,
                  "name": "_disputeId",
                  "nodeType": "VariableDeclaration",
                  "scope": 114,
                  "src": "1919:18:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 100,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1919:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 103,
                  "name": "_supportsDispute",
                  "nodeType": "VariableDeclaration",
                  "scope": 114,
                  "src": "1939:21:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 102,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1939:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1918:43:1"
            },
            "returnParameters": {
              "id": 105,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1971:0:1"
            },
            "scope": 316,
            "src": "1905:124:1",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 125,
              "nodeType": "Block",
              "src": "2171:46:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 122,
                        "name": "_disputeId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 116,
                        "src": "2199:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 119,
                        "name": "tellor",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 81,
                        "src": "2181:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TellorStorageStruct_$5145_storage",
                          "typeString": "struct TellorStorage.TellorStorageStruct storage ref"
                        }
                      },
                      "id": 121,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "tallyVotes",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1980,
                      "src": "2181:17:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_delegatecall_nonpayable$_t_struct$_TellorStorageStruct_$5145_storage_ptr_$_t_uint256_$returns$__$bound_to$_t_struct$_TellorStorageStruct_$5145_storage_ptr_$",
                        "typeString": "function (struct TellorStorage.TellorStorageStruct storage pointer,uint256)"
                      }
                    },
                    "id": 123,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2181:29:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 124,
                  "nodeType": "ExpressionStatement",
                  "src": "2181:29:1"
                }
              ]
            },
            "documentation": "@dev tallies the votes.\n@param _disputeId is the dispute id",
            "id": 126,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "tallyVotes",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 117,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 116,
                  "name": "_disputeId",
                  "nodeType": "VariableDeclaration",
                  "scope": 126,
                  "src": "2142:18:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 115,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2142:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2141:20:1"
            },
            "returnParameters": {
              "id": 118,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2171:0:1"
            },
            "scope": 316,
            "src": "2122:95:1",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 137,
              "nodeType": "Block",
              "src": "2410:58:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 134,
                        "name": "_propNewTellorAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 128,
                        "src": "2439:21:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 131,
                        "name": "tellor",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 81,
                        "src": "2420:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TellorStorageStruct_$5145_storage",
                          "typeString": "struct TellorStorage.TellorStorageStruct storage ref"
                        }
                      },
                      "id": 133,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "proposeFork",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2117,
                      "src": "2420:18:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_delegatecall_nonpayable$_t_struct$_TellorStorageStruct_$5145_storage_ptr_$_t_address_$returns$__$bound_to$_t_struct$_TellorStorageStruct_$5145_storage_ptr_$",
                        "typeString": "function (struct TellorStorage.TellorStorageStruct storage pointer,address)"
                      }
                    },
                    "id": 135,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2420:41:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 136,
                  "nodeType": "ExpressionStatement",
                  "src": "2420:41:1"
                }
              ]
            },
            "documentation": "@dev Allows for a fork to be proposed\n@param _propNewTellorAddress address for new proposed Tellor",
            "id": 138,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "proposeFork",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 129,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 128,
                  "name": "_propNewTellorAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 138,
                  "src": "2370:29:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 127,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2370:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2369:31:1"
            },
            "returnParameters": {
              "id": 130,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2410:0:1"
            },
            "scope": 316,
            "src": "2349:119:1",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 152,
              "nodeType": "Block",
              "src": "2804:48:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 148,
                        "name": "_requestId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 140,
                        "src": "2828:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 149,
                        "name": "_tip",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 142,
                        "src": "2840:4:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 145,
                        "name": "tellor",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 81,
                        "src": "2814:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TellorStorageStruct_$5145_storage",
                          "typeString": "struct TellorStorage.TellorStorageStruct storage ref"
                        }
                      },
                      "id": 147,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "addTip",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3198,
                      "src": "2814:13:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_delegatecall_nonpayable$_t_struct$_TellorStorageStruct_$5145_storage_ptr_$_t_uint256_$_t_uint256_$returns$__$bound_to$_t_struct$_TellorStorageStruct_$5145_storage_ptr_$",
                        "typeString": "function (struct TellorStorage.TellorStorageStruct storage pointer,uint256,uint256)"
                      }
                    },
                    "id": 150,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2814:31:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 151,
                  "nodeType": "ExpressionStatement",
                  "src": "2814:31:1"
                }
              ]
            },
            "documentation": "@dev Add tip to Request value from oracle\n@param _requestId being requested to be mined\n@param _tip amount the requester is willing to pay to be get on queue. Miners\nmine the onDeckQueryHash, or the api with the highest payout pool",
            "id": 153,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "addTip",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 143,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 140,
                  "name": "_requestId",
                  "nodeType": "VariableDeclaration",
                  "scope": 153,
                  "src": "2761:18:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 139,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2761:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 142,
                  "name": "_tip",
                  "nodeType": "VariableDeclaration",
                  "scope": 153,
                  "src": "2781:12:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 141,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2781:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2760:34:1"
            },
            "returnParameters": {
              "id": 144,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2804:0:1"
            },
            "scope": 316,
            "src": "2745:107:1",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 173,
              "nodeType": "Block",
              "src": "3567:75:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 167,
                        "name": "_c_sapi",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 155,
                        "src": "3596:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 168,
                        "name": "_c_symbol",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 157,
                        "src": "3605:9:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 169,
                        "name": "_granularity",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 159,
                        "src": "3616:12:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 170,
                        "name": "_tip",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 161,
                        "src": "3630:4:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        },
                        {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 164,
                        "name": "tellor",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 81,
                        "src": "3577:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TellorStorageStruct_$5145_storage",
                          "typeString": "struct TellorStorage.TellorStorageStruct storage ref"
                        }
                      },
                      "id": 166,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "requestData",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3406,
                      "src": "3577:18:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_delegatecall_nonpayable$_t_struct$_TellorStorageStruct_$5145_storage_ptr_$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$__$bound_to$_t_struct$_TellorStorageStruct_$5145_storage_ptr_$",
                        "typeString": "function (struct TellorStorage.TellorStorageStruct storage pointer,string memory,string memory,uint256,uint256)"
                      }
                    },
                    "id": 171,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3577:58:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 172,
                  "nodeType": "ExpressionStatement",
                  "src": "3577:58:1"
                }
              ]
            },
            "documentation": "@dev Request to retreive value from oracle based on timestamp. The tip is not required to be\ngreater than 0 because there are no tokens in circulation for the initial(genesis) request\n@param _c_sapi string API being requested be mined\n@param _c_symbol is the short string symbol for the api request\n@param _granularity is the number of decimals miners should include on the submitted value\n@param _tip amount the requester is willing to pay to be get on queue. Miners\nmine the onDeckQueryHash, or the api with the highest payout pool",
            "id": 174,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "requestData",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 162,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 155,
                  "name": "_c_sapi",
                  "nodeType": "VariableDeclaration",
                  "scope": 174,
                  "src": "3470:23:1",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_calldata_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 154,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "3470:6:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 157,
                  "name": "_c_symbol",
                  "nodeType": "VariableDeclaration",
                  "scope": 174,
                  "src": "3495:25:1",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_calldata_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 156,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "3495:6:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 159,
                  "name": "_granularity",
                  "nodeType": "VariableDeclaration",
                  "scope": 174,
                  "src": "3522:20:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 158,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3522:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 161,
                  "name": "_tip",
                  "nodeType": "VariableDeclaration",
                  "scope": 174,
                  "src": "3544:12:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 160,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3544:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3469:88:1"
            },
            "returnParameters": {
              "id": 163,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3567:0:1"
            },
            "scope": 316,
            "src": "3449:193:1",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 191,
              "nodeType": "Block",
              "src": "3989:72:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 186,
                        "name": "_nonce",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 176,
                        "src": "4027:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 187,
                        "name": "_requestId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 178,
                        "src": "4035:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 188,
                        "name": "_value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 180,
                        "src": "4047:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 183,
                        "name": "tellor",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 81,
                        "src": "3999:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TellorStorageStruct_$5145_storage",
                          "typeString": "struct TellorStorage.TellorStorageStruct storage ref"
                        }
                      },
                      "id": 185,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "submitMiningSolution",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4217,
                      "src": "3999:27:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_delegatecall_nonpayable$_t_struct$_TellorStorageStruct_$5145_storage_ptr_$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$__$bound_to$_t_struct$_TellorStorageStruct_$5145_storage_ptr_$",
                        "typeString": "function (struct TellorStorage.TellorStorageStruct storage pointer,string memory,uint256,uint256)"
                      }
                    },
                    "id": 189,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3999:55:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 190,
                  "nodeType": "ExpressionStatement",
                  "src": "3999:55:1"
                }
              ]
            },
            "documentation": "@dev Proof of work is called by the miner when they submit the solution (proof of work and value)\n@param _nonce uint submitted by miner\n@param _requestId the apiId being mined\n@param _value of api query",
            "id": 192,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "submitMiningSolution",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 181,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 176,
                  "name": "_nonce",
                  "nodeType": "VariableDeclaration",
                  "scope": 192,
                  "src": "3920:22:1",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_calldata_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 175,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "3920:6:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 178,
                  "name": "_requestId",
                  "nodeType": "VariableDeclaration",
                  "scope": 192,
                  "src": "3944:18:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 177,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3944:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 180,
                  "name": "_value",
                  "nodeType": "VariableDeclaration",
                  "scope": 192,
                  "src": "3964:14:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 179,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3964:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3919:60:1"
            },
            "returnParameters": {
              "id": 182,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3989:0:1"
            },
            "scope": 316,
            "src": "3890:171:1",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 203,
              "nodeType": "Block",
              "src": "4402:55:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 200,
                        "name": "_pendingOwner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 194,
                        "src": "4436:13:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 197,
                        "name": "tellor",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 81,
                        "src": "4412:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TellorStorageStruct_$5145_storage",
                          "typeString": "struct TellorStorage.TellorStorageStruct storage ref"
                        }
                      },
                      "id": 199,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "proposeOwnership",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4258,
                      "src": "4412:23:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_TellorStorageStruct_$5145_storage_ptr_$_t_address_payable_$returns$__$bound_to$_t_struct$_TellorStorageStruct_$5145_storage_ptr_$",
                        "typeString": "function (struct TellorStorage.TellorStorageStruct storage pointer,address payable)"
                      }
                    },
                    "id": 201,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4412:38:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 202,
                  "nodeType": "ExpressionStatement",
                  "src": "4412:38:1"
                }
              ]
            },
            "documentation": "@dev Allows the current owner to propose transfer control of the contract to a\nnewOwner and the ownership is pending until the new owner calls the claimOwnership\nfunction\n@param _pendingOwner The address to transfer ownership to.",
            "id": 204,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "proposeOwnership",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 195,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 194,
                  "name": "_pendingOwner",
                  "nodeType": "VariableDeclaration",
                  "scope": 204,
                  "src": "4362:29:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "typeName": {
                    "id": 193,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4362:15:1",
                    "stateMutability": "payable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4361:31:1"
            },
            "returnParameters": {
              "id": 196,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4402:0:1"
            },
            "scope": 316,
            "src": "4336:121:1",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 212,
              "nodeType": "Block",
              "src": "4578:40:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "argumentTypes": null,
                        "id": 207,
                        "name": "tellor",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 81,
                        "src": "4588:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TellorStorageStruct_$5145_storage",
                          "typeString": "struct TellorStorage.TellorStorageStruct storage ref"
                        }
                      },
                      "id": 209,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "claimOwnership",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4307,
                      "src": "4588:21:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_TellorStorageStruct_$5145_storage_ptr_$returns$__$bound_to$_t_struct$_TellorStorageStruct_$5145_storage_ptr_$",
                        "typeString": "function (struct TellorStorage.TellorStorageStruct storage pointer)"
                      }
                    },
                    "id": 210,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4588:23:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 211,
                  "nodeType": "ExpressionStatement",
                  "src": "4588:23:1"
                }
              ]
            },
            "documentation": "@dev Allows the new owner to claim control of the contract",
            "id": 213,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "claimOwnership",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 205,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4566:2:1"
            },
            "returnParameters": {
              "id": 206,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4578:0:1"
            },
            "scope": 316,
            "src": "4543:75:1",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 221,
              "nodeType": "Block",
              "src": "4735:38:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "argumentTypes": null,
                        "id": 216,
                        "name": "tellor",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 81,
                        "src": "4745:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TellorStorageStruct_$5145_storage",
                          "typeString": "struct TellorStorage.TellorStorageStruct storage ref"
                        }
                      },
                      "id": 218,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "depositStake",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4923,
                      "src": "4745:19:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_delegatecall_nonpayable$_t_struct$_TellorStorageStruct_$5145_storage_ptr_$returns$__$bound_to$_t_struct$_TellorStorageStruct_$5145_storage_ptr_$",
                        "typeString": "function (struct TellorStorage.TellorStorageStruct storage pointer)"
                      }
                    },
                    "id": 219,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4745:21:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 220,
                  "nodeType": "ExpressionStatement",
                  "src": "4745:21:1"
                }
              ]
            },
            "documentation": "@dev This function allows miners to deposit their stake.",
            "id": 222,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "depositStake",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 214,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4723:2:1"
            },
            "returnParameters": {
              "id": 215,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4735:0:1"
            },
            "scope": 316,
            "src": "4702:71:1",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 230,
              "nodeType": "Block",
              "src": "5058:48:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "argumentTypes": null,
                        "id": 225,
                        "name": "tellor",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 81,
                        "src": "5068:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TellorStorageStruct_$5145_storage",
                          "typeString": "struct TellorStorage.TellorStorageStruct storage ref"
                        }
                      },
                      "id": 227,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "requestStakingWithdraw",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4855,
                      "src": "5068:29:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_delegatecall_nonpayable$_t_struct$_TellorStorageStruct_$5145_storage_ptr_$returns$__$bound_to$_t_struct$_TellorStorageStruct_$5145_storage_ptr_$",
                        "typeString": "function (struct TellorStorage.TellorStorageStruct storage pointer)"
                      }
                    },
                    "id": 228,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5068:31:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 229,
                  "nodeType": "ExpressionStatement",
                  "src": "5068:31:1"
                }
              ]
            },
            "documentation": "@dev This function allows stakers to request to withdraw their stake (no longer stake)\nonce they lock for withdraw(stakes.currentStatus = 2) they are locked for 7 days before they\ncan withdraw the stake",
            "id": 231,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "requestStakingWithdraw",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 223,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5046:2:1"
            },
            "returnParameters": {
              "id": 224,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5058:0:1"
            },
            "scope": 316,
            "src": "5015:91:1",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 239,
              "nodeType": "Block",
              "src": "5265:39:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "argumentTypes": null,
                        "id": 234,
                        "name": "tellor",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 81,
                        "src": "5275:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TellorStorageStruct_$5145_storage",
                          "typeString": "struct TellorStorage.TellorStorageStruct storage ref"
                        }
                      },
                      "id": 236,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "withdrawStake",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4905,
                      "src": "5275:20:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_delegatecall_nonpayable$_t_struct$_TellorStorageStruct_$5145_storage_ptr_$returns$__$bound_to$_t_struct$_TellorStorageStruct_$5145_storage_ptr_$",
                        "typeString": "function (struct TellorStorage.TellorStorageStruct storage pointer)"
                      }
                    },
                    "id": 237,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5275:22:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 238,
                  "nodeType": "ExpressionStatement",
                  "src": "5275:22:1"
                }
              ]
            },
            "documentation": "@dev This function allows users to withdraw their stake after a 7 day waiting period from request",
            "id": 240,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "withdrawStake",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 232,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5253:2:1"
            },
            "returnParameters": {
              "id": 233,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5265:0:1"
            },
            "scope": 316,
            "src": "5231:73:1",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 255,
              "nodeType": "Block",
              "src": "5619:57:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 251,
                        "name": "_spender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 242,
                        "src": "5651:8:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 252,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 244,
                        "src": "5661:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 249,
                        "name": "tellor",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 81,
                        "src": "5636:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TellorStorageStruct_$5145_storage",
                          "typeString": "struct TellorStorage.TellorStorageStruct storage ref"
                        }
                      },
                      "id": 250,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "approve",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5279,
                      "src": "5636:14:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_delegatecall_nonpayable$_t_struct$_TellorStorageStruct_$5145_storage_ptr_$_t_address_$_t_uint256_$returns$_t_bool_$bound_to$_t_struct$_TellorStorageStruct_$5145_storage_ptr_$",
                        "typeString": "function (struct TellorStorage.TellorStorageStruct storage pointer,address,uint256) returns (bool)"
                      }
                    },
                    "id": 253,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5636:33:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 248,
                  "id": 254,
                  "nodeType": "Return",
                  "src": "5629:40:1"
                }
              ]
            },
            "documentation": "@dev This function approves a _spender an _amount of tokens to use\n@param _spender address\n@param _amount amount the spender is being approved for\n@return true if spender appproved successfully",
            "id": 256,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "approve",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 245,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 242,
                  "name": "_spender",
                  "nodeType": "VariableDeclaration",
                  "scope": 256,
                  "src": "5560:16:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 241,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5560:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 244,
                  "name": "_amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 256,
                  "src": "5578:15:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 243,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5578:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "5559:35:1"
            },
            "returnParameters": {
              "id": 248,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 247,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 256,
                  "src": "5613:4:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 246,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "5613:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "5612:6:1"
            },
            "scope": 316,
            "src": "5543:133:1",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 271,
              "nodeType": "Block",
              "src": "5961:53:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 267,
                        "name": "_to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 258,
                        "src": "5994:3:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 268,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 260,
                        "src": "5999:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 265,
                        "name": "tellor",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 81,
                        "src": "5978:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TellorStorageStruct_$5145_storage",
                          "typeString": "struct TellorStorage.TellorStorageStruct storage ref"
                        }
                      },
                      "id": 266,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5191,
                      "src": "5978:15:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_delegatecall_nonpayable$_t_struct$_TellorStorageStruct_$5145_storage_ptr_$_t_address_$_t_uint256_$returns$_t_bool_$bound_to$_t_struct$_TellorStorageStruct_$5145_storage_ptr_$",
                        "typeString": "function (struct TellorStorage.TellorStorageStruct storage pointer,address,uint256) returns (bool)"
                      }
                    },
                    "id": 269,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5978:29:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 264,
                  "id": 270,
                  "nodeType": "Return",
                  "src": "5971:36:1"
                }
              ]
            },
            "documentation": "@dev Allows for a transfer of tokens to _to\n@param _to The address to send tokens to\n@param _amount The amount of tokens to send\n@return true if transfer is successful",
            "id": 272,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "transfer",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 261,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 258,
                  "name": "_to",
                  "nodeType": "VariableDeclaration",
                  "scope": 272,
                  "src": "5907:11:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 257,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5907:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 260,
                  "name": "_amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 272,
                  "src": "5920:15:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 259,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5920:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "5906:30:1"
            },
            "returnParameters": {
              "id": 264,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 263,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 272,
                  "src": "5955:4:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 262,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "5955:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "5954:6:1"
            },
            "scope": 316,
            "src": "5889:125:1",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 290,
              "nodeType": "Block",
              "src": "6447:64:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 285,
                        "name": "_from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 274,
                        "src": "6484:5:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 286,
                        "name": "_to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 276,
                        "src": "6491:3:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 287,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 278,
                        "src": "6496:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 283,
                        "name": "tellor",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 81,
                        "src": "6464:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TellorStorageStruct_$5145_storage",
                          "typeString": "struct TellorStorage.TellorStorageStruct storage ref"
                        }
                      },
                      "id": 284,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5238,
                      "src": "6464:19:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_delegatecall_nonpayable$_t_struct$_TellorStorageStruct_$5145_storage_ptr_$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$bound_to$_t_struct$_TellorStorageStruct_$5145_storage_ptr_$",
                        "typeString": "function (struct TellorStorage.TellorStorageStruct storage pointer,address,address,uint256) returns (bool)"
                      }
                    },
                    "id": 288,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6464:40:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 282,
                  "id": 289,
                  "nodeType": "Return",
                  "src": "6457:47:1"
                }
              ]
            },
            "documentation": "@dev Sends _amount tokens to _to from _from on the condition it\nis approved by _from\n@param _from The address holding the tokens being transferred\n@param _to The address of the recipient\n@param _amount The amount of tokens to be transferred\n@return True if the transfer was successful",
            "id": 291,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "transferFrom",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 279,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 274,
                  "name": "_from",
                  "nodeType": "VariableDeclaration",
                  "scope": 291,
                  "src": "6378:13:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 273,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6378:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 276,
                  "name": "_to",
                  "nodeType": "VariableDeclaration",
                  "scope": 291,
                  "src": "6393:11:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 275,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6393:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 278,
                  "name": "_amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 291,
                  "src": "6406:15:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 277,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6406:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "6377:45:1"
            },
            "returnParameters": {
              "id": 282,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 281,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 291,
                  "src": "6441:4:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 280,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "6441:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "6440:6:1"
            },
            "scope": 316,
            "src": "6356:155:1",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 298,
              "nodeType": "Block",
              "src": "6637:41:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "hexValue": "54656c6c6f72205472696275746573",
                    "id": 296,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "6654:17:1",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_ffa130415425a38c63940260c61c1c0148f12aac50073618dc7ea6d7402db8e1",
                      "typeString": "literal_string \"Tellor Tributes\""
                    },
                    "value": "Tellor Tributes"
                  },
                  "functionReturnParameters": 295,
                  "id": 297,
                  "nodeType": "Return",
                  "src": "6647:24:1"
                }
              ]
            },
            "documentation": "@dev Allows users to access the token's name",
            "id": 299,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "name",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 292,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6596:2:1"
            },
            "returnParameters": {
              "id": 295,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 294,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 299,
                  "src": "6622:13:1",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 293,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "6622:6:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "6621:15:1"
            },
            "scope": 316,
            "src": "6583:95:1",
            "stateMutability": "pure",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 306,
              "nodeType": "Block",
              "src": "6808:29:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "hexValue": "545242",
                    "id": 304,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "6825:5:1",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_2414fea12b2e895cdf6741b2699da456be98b90524622d481ddca83d41288ae0",
                      "typeString": "literal_string \"TRB\""
                    },
                    "value": "TRB"
                  },
                  "functionReturnParameters": 303,
                  "id": 305,
                  "nodeType": "Return",
                  "src": "6818:12:1"
                }
              ]
            },
            "documentation": "@dev Allows users to access the token's symbol",
            "id": 307,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "symbol",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 300,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6767:2:1"
            },
            "returnParameters": {
              "id": 303,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 302,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 307,
                  "src": "6793:13:1",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 301,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "6793:6:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "6792:15:1"
            },
            "scope": 316,
            "src": "6752:85:1",
            "stateMutability": "pure",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 314,
              "nodeType": "Block",
              "src": "6965:26:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "hexValue": "3138",
                    "id": 312,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "6982:2:1",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_18_by_1",
                      "typeString": "int_const 18"
                    },
                    "value": "18"
                  },
                  "functionReturnParameters": 311,
                  "id": 313,
                  "nodeType": "Return",
                  "src": "6975:9:1"
                }
              ]
            },
            "documentation": "@dev Allows users to access the number of decimals",
            "id": 315,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "decimals",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 308,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6932:2:1"
            },
            "returnParameters": {
              "id": 311,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 310,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 315,
                  "src": "6958:5:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 309,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "6958:5:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "6957:7:1"
            },
            "scope": 316,
            "src": "6915:76:1",
            "stateMutability": "pure",
            "superFunction": null,
            "visibility": "external"
          }
        ],
        "scope": 317,
        "src": "505:6489:1"
      }
    ],
    "src": "0:6995:1"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.8+commit.23d335f2.Emscripten.clang"
  },
  "networks": {
    "1566652721142": {
      "events": {
        "0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "name": "_owner",
              "type": "address"
            },
            {
              "indexed": true,
              "name": "_spender",
              "type": "address"
            },
            {
              "indexed": false,
              "name": "_value",
              "type": "uint256"
            }
          ],
          "name": "Approval",
          "type": "event",
          "signature": "0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925"
        },
        "0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "name": "_from",
              "type": "address"
            },
            {
              "indexed": true,
              "name": "_to",
              "type": "address"
            },
            {
              "indexed": false,
              "name": "_value",
              "type": "uint256"
            }
          ],
          "name": "Transfer",
          "type": "event",
          "signature": "0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef"
        },
        "0xeceec1aebf67772b2440120c4b4dc913a1fe1b865509219f9456785c23b9da64": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "name": "_disputeId",
              "type": "uint256"
            },
            {
              "indexed": true,
              "name": "_requestId",
              "type": "uint256"
            },
            {
              "indexed": false,
              "name": "_timestamp",
              "type": "uint256"
            },
            {
              "indexed": false,
              "name": "_miner",
              "type": "address"
            }
          ],
          "name": "NewDispute",
          "type": "event",
          "signature": "0xeceec1aebf67772b2440120c4b4dc913a1fe1b865509219f9456785c23b9da64"
        },
        "0x86abfce99b7dd908bec0169288797f85049ec73cbe046ed9de818fab3a497ae0": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "name": "_disputeID",
              "type": "uint256"
            },
            {
              "indexed": false,
              "name": "_position",
              "type": "bool"
            },
            {
              "indexed": true,
              "name": "_voter",
              "type": "address"
            }
          ],
          "name": "Voted",
          "type": "event",
          "signature": "0x86abfce99b7dd908bec0169288797f85049ec73cbe046ed9de818fab3a497ae0"
        },
        "0x21459c2f5447ebcf83a7f0a238c32c71076faef0d12295e771c0cb1e10434739": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "name": "_disputeID",
              "type": "uint256"
            },
            {
              "indexed": false,
              "name": "_result",
              "type": "int256"
            },
            {
              "indexed": true,
              "name": "_reportedMiner",
              "type": "address"
            },
            {
              "indexed": false,
              "name": "_reportingParty",
              "type": "address"
            },
            {
              "indexed": false,
              "name": "_active",
              "type": "bool"
            }
          ],
          "name": "DisputeVoteTallied",
          "type": "event",
          "signature": "0x21459c2f5447ebcf83a7f0a238c32c71076faef0d12295e771c0cb1e10434739"
        },
        "0xc2d1449eb0b6547aa426e09d9942a77fa4fc8cd3296305b3163e22452e0bcb8d": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "name": "_newTellor",
              "type": "address"
            }
          ],
          "name": "NewTellorAddress",
          "type": "event",
          "signature": "0xc2d1449eb0b6547aa426e09d9942a77fa4fc8cd3296305b3163e22452e0bcb8d"
        },
        "0x46d8ab1385f70e5a3673e97c23c764f7600f7ed7a09b6687deae7131d51752e2": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "name": "_sender",
              "type": "address"
            }
          ],
          "name": "NewStake",
          "type": "event",
          "signature": "0x46d8ab1385f70e5a3673e97c23c764f7600f7ed7a09b6687deae7131d51752e2"
        },
        "0x4a7934670bd8304e7da22378be1368f7c4fef17c5aee81804beda8638fe428ec": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "name": "_sender",
              "type": "address"
            }
          ],
          "name": "StakeWithdrawn",
          "type": "event",
          "signature": "0x4a7934670bd8304e7da22378be1368f7c4fef17c5aee81804beda8638fe428ec"
        },
        "0x453865710d0cb4b14ad25de371c860da196368895daa9662e5087711d14daecf": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "name": "_sender",
              "type": "address"
            }
          ],
          "name": "StakeWithdrawRequested",
          "type": "event",
          "signature": "0x453865710d0cb4b14ad25de371c860da196368895daa9662e5087711d14daecf"
        },
        "0xd32134405b68f6f7220f9c38ae310df1b648d16188006768d45be2f7c24e8820": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "name": "_sender",
              "type": "address"
            },
            {
              "indexed": true,
              "name": "_requestId",
              "type": "uint256"
            },
            {
              "indexed": false,
              "name": "_tip",
              "type": "uint256"
            },
            {
              "indexed": false,
              "name": "_totalTips",
              "type": "uint256"
            }
          ],
          "name": "TipAdded",
          "type": "event",
          "signature": "0xd32134405b68f6f7220f9c38ae310df1b648d16188006768d45be2f7c24e8820"
        },
        "0x6d7f869757848b19c8c2456e95cd98885bc6bed062fda4077bb07985e2f76cc9": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "name": "_sender",
              "type": "address"
            },
            {
              "indexed": false,
              "name": "_query",
              "type": "string"
            },
            {
              "indexed": false,
              "name": "_querySymbol",
              "type": "string"
            },
            {
              "indexed": false,
              "name": "_granularity",
              "type": "uint256"
            },
            {
              "indexed": true,
              "name": "_requestId",
              "type": "uint256"
            },
            {
              "indexed": false,
              "name": "_totalTips",
              "type": "uint256"
            }
          ],
          "name": "DataRequested",
          "type": "event",
          "signature": "0x6d7f869757848b19c8c2456e95cd98885bc6bed062fda4077bb07985e2f76cc9"
        },
        "0x9e959738f09af22daede9ff9563f8edf3f5cec8e17ce60287c911c95fa767f42": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "name": "_currentChallenge",
              "type": "bytes32"
            },
            {
              "indexed": true,
              "name": "_currentRequestId",
              "type": "uint256"
            },
            {
              "indexed": false,
              "name": "_difficulty",
              "type": "uint256"
            },
            {
              "indexed": false,
              "name": "_multiplier",
              "type": "uint256"
            },
            {
              "indexed": false,
              "name": "_query",
              "type": "string"
            },
            {
              "indexed": false,
              "name": "_totalTips",
              "type": "uint256"
            }
          ],
          "name": "NewChallenge",
          "type": "event",
          "signature": "0x9e959738f09af22daede9ff9563f8edf3f5cec8e17ce60287c911c95fa767f42"
        },
        "0x5ab383fe3e28263c839564bc7545520a7dd34b78cbd7ab21b2da5d2fd027bf6c": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "name": "_requestId",
              "type": "uint256"
            },
            {
              "indexed": false,
              "name": "_query",
              "type": "string"
            },
            {
              "indexed": false,
              "name": "_onDeckQueryHash",
              "type": "bytes32"
            },
            {
              "indexed": false,
              "name": "_onDeckTotalTips",
              "type": "uint256"
            }
          ],
          "name": "NewRequestOnDeck",
          "type": "event",
          "signature": "0x5ab383fe3e28263c839564bc7545520a7dd34b78cbd7ab21b2da5d2fd027bf6c"
        },
        "0xc509d04e0782579ee59912139246ccbdf6c36c43abd90591d912017f3467dd16": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "name": "_requestId",
              "type": "uint256"
            },
            {
              "indexed": false,
              "name": "_time",
              "type": "uint256"
            },
            {
              "indexed": false,
              "name": "_value",
              "type": "uint256"
            },
            {
              "indexed": false,
              "name": "_totalTips",
              "type": "uint256"
            },
            {
              "indexed": false,
              "name": "_currentChallenge",
              "type": "bytes32"
            }
          ],
          "name": "NewValue",
          "type": "event",
          "signature": "0xc509d04e0782579ee59912139246ccbdf6c36c43abd90591d912017f3467dd16"
        },
        "0xe6d63a2aee0aaed2ab49702313ce54114f2145af219d7db30d6624af9e6dffc4": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "name": "_miner",
              "type": "address"
            },
            {
              "indexed": false,
              "name": "_nonce",
              "type": "string"
            },
            {
              "indexed": true,
              "name": "_requestId",
              "type": "uint256"
            },
            {
              "indexed": false,
              "name": "_value",
              "type": "uint256"
            },
            {
              "indexed": false,
              "name": "_currentChallenge",
              "type": "bytes32"
            }
          ],
          "name": "NonceSubmitted",
          "type": "event",
          "signature": "0xe6d63a2aee0aaed2ab49702313ce54114f2145af219d7db30d6624af9e6dffc4"
        },
        "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "name": "_previousOwner",
              "type": "address"
            },
            {
              "indexed": true,
              "name": "_newOwner",
              "type": "address"
            }
          ],
          "name": "OwnershipTransferred",
          "type": "event",
          "signature": "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0"
        },
        "0xb51454ce8c7f26becd312a46c4815553887f2ec876a0b8dc813b87f62edf6f80": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "name": "_previousOwner",
              "type": "address"
            },
            {
              "indexed": true,
              "name": "_newOwner",
              "type": "address"
            }
          ],
          "name": "OwnershipProposed",
          "type": "event",
          "signature": "0xb51454ce8c7f26becd312a46c4815553887f2ec876a0b8dc813b87f62edf6f80"
        }
      },
      "links": {
        "TellorTransfer": "0x731A4E84fd77618A758883DDa92323EdD291b313",
        "TellorDispute": "0xaAdE6084F8148ef50c2b1961A2fC0558C697dCE0",
        "TellorStake": "0xeAE06175F23E0a52B49392D05188CAd1c988AaEe",
        "TellorLibrary": "0x2B63d6e98E66C7e9fe11225Ba349B0B33234D9A2"
      },
      "address": "0xaAC692b4F235B14C855F50f7068944AFe5b75A95",
      "transactionHash": "0xdfab21fe2f1105c3ac1b9e18d199f03599e717c923818727bd0ee989ffb771bf"
    }
  },
  "schemaVersion": "3.0.11",
  "updatedAt": "2019-09-29T18:14:30.890Z",
  "devdoc": {
    "details": "Oracle contract where miners can submit the proof of work along with the value. The logic for this contract is in TellorLibrary.sol, TellorDispute.sol, TellorStake.sol, and TellorTransfer.sol",
    "methods": {
      "addTip(uint256,uint256)": {
        "details": "Add tip to Request value from oracle",
        "params": {
          "_requestId": "being requested to be mined",
          "_tip": "amount the requester is willing to pay to be get on queue. Miners mine the onDeckQueryHash, or the api with the highest payout pool"
        }
      },
      "approve(address,uint256)": {
        "details": "This function approves a _spender an _amount of tokens to use",
        "params": {
          "_amount": "amount the spender is being approved for",
          "_spender": "address"
        },
        "return": "true if spender appproved successfully"
      },
      "beginDispute(uint256,uint256,uint256)": {
        "details": "Helps initialize a dispute by assigning it a disputeId when a miner returns a false on the validate array(in Tellor.ProofOfWork) it sends the invalidated value information to POS voting",
        "params": {
          "_minerIndex": "the index of the miner that submitted the value being disputed. Since each official value requires 5 miners to submit a value.",
          "_requestId": "being disputed",
          "_timestamp": "being disputed"
        }
      },
      "claimOwnership()": {
        "details": "Allows the new owner to claim control of the contract"
      },
      "decimals()": {
        "details": "Allows users to access the number of decimals"
      },
      "depositStake()": {
        "details": "This function allows miners to deposit their stake."
      },
      "name()": {
        "details": "Allows users to access the token's name"
      },
      "proposeFork(address)": {
        "details": "Allows for a fork to be proposed",
        "params": {
          "_propNewTellorAddress": "address for new proposed Tellor"
        }
      },
      "proposeOwnership(address)": {
        "details": "Allows the current owner to propose transfer control of the contract to a newOwner and the ownership is pending until the new owner calls the claimOwnership function",
        "params": {
          "_pendingOwner": "The address to transfer ownership to."
        }
      },
      "requestData(string,string,uint256,uint256)": {
        "details": "Request to retreive value from oracle based on timestamp. The tip is not required to be greater than 0 because there are no tokens in circulation for the initial(genesis) request",
        "params": {
          "_c_sapi": "string API being requested be mined",
          "_c_symbol": "is the short string symbol for the api request",
          "_granularity": "is the number of decimals miners should include on the submitted value",
          "_tip": "amount the requester is willing to pay to be get on queue. Miners mine the onDeckQueryHash, or the api with the highest payout pool"
        }
      },
      "requestStakingWithdraw()": {
        "details": "This function allows stakers to request to withdraw their stake (no longer stake) once they lock for withdraw(stakes.currentStatus = 2) they are locked for 7 days before they can withdraw the stake"
      },
      "submitMiningSolution(string,uint256,uint256)": {
        "details": "Proof of work is called by the miner when they submit the solution (proof of work and value)",
        "params": {
          "_nonce": "uint submitted by miner",
          "_requestId": "the apiId being mined",
          "_value": "of api query"
        }
      },
      "symbol()": {
        "details": "Allows users to access the token's symbol"
      },
      "tallyVotes(uint256)": {
        "details": "tallies the votes.",
        "params": {
          "_disputeId": "is the dispute id"
        }
      },
      "transfer(address,uint256)": {
        "details": "Allows for a transfer of tokens to _to",
        "params": {
          "_amount": "The amount of tokens to send",
          "_to": "The address to send tokens to"
        },
        "return": "true if transfer is successful"
      },
      "transferFrom(address,address,uint256)": {
        "details": "Sends _amount tokens to _to from _from on the condition it is approved by _from",
        "params": {
          "_amount": "The amount of tokens to be transferred",
          "_from": "The address holding the tokens being transferred",
          "_to": "The address of the recipient"
        },
        "return": "True if the transfer was successful"
      },
      "vote(uint256,bool)": {
        "details": "Allows token holders to vote",
        "params": {
          "_disputeId": "is the dispute id",
          "_supportsDispute": "is the vote (true=the dispute has basis false = vote against dispute)"
        }
      },
      "withdrawStake()": {
        "details": "This function allows users to withdraw their stake after a 7 day waiting period from request"
      }
    },
    "title": "Tellor Oracle System"
  },
  "userdoc": {
    "methods": {}
  }
}