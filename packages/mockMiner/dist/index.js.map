{"version":3,"sources":["../src/index.js"],"names":["main","addr","process","env","CONTRACT_ADDRESS","Error","web3Url","WEB3_URL","startsWith","provider","Web3","providers","WebsocketProvider","initRequired","INIT_REQUIRED","trim","length","undefined","Promise","done","err","chain","Chain","mnemonic","masterAddress","init","then","task","TaskHandler","start","console","log"],"mappings":";;AAAA;;AACA;;;;AACA;;;;AACA;;;;;;;;AAGA,IAAMA;AAAA,qEAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AACPC,gBADO,GACAC,QAAQC,GAAR,CAAYC,gBADZ;;AAAA,gBAEPH,IAFO;AAAA;AAAA;AAAA;;AAAA,kBAGH,IAAII,KAAJ,CAAU,0CAAV,CAHG;;AAAA;AAKPC,mBALO,GAKGJ,QAAQC,GAAR,CAAYI,QALf;;AAAA,gBAMPD,OANO;AAAA;AAAA;AAAA;;AAAA,kBAOH,IAAID,KAAJ,CAAU,kCAAV,CAPG;;AAAA;AAAA,gBASPC,QAAQE,UAAR,CAAmB,IAAnB,CATO;AAAA;AAAA;AAAA;;AAAA,kBAUH,IAAIH,KAAJ,CAAU,4CAA4CC,OAAtD,CAVG;;AAAA;AAYPG,oBAZO,GAYI,IAAIC,cAAKC,SAAL,CAAeC,iBAAnB,CAAqCN,OAArC,CAZJ;AAcPO,wBAdO,GAcQX,QAAQC,GAAR,CAAYW,aAdpB;;AAeX,gBAAGD,gBAAgBA,aAAaE,IAAb,GAAoBC,MAApB,KAA+B,CAAlD,EAAoD;AAClDH,6BAAeI,SAAf;AACD;;AAjBU,8CAmBJ,IAAIC,OAAJ,CAAY,UAACC,IAAD,EAAMC,GAAN,EAAY;AAC7B,kBAAIC,QAAQ,IAAIC,sBAAJ,CAAU;AACpBC,0BAAU,uEADU;AAEpBC,+BAAevB,IAFK;AAGpBQ;AAHoB,eAAV,CAAZ;;AAMAY,oBAAMI,IAAN,GAAaC,IAAb,yDAAkB;AAAA;AAAA;AAAA;AAAA;AAAA;AACZC,4BADY,GACL,IAAIC,qBAAJ,CAAgB;AACzBP,sCADyB;AAEzBR;AAFyB,yBAAhB,CADK;AAAA;AAAA,+BAKVc,KAAKE,KAAL,EALU;;AAAA;AAMhBV;;AANgB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAAlB;AAQD,aAfM,CAnBI;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAP;;AAAA;AAAA;AAAA;AAAA,GAAN;;AAqCAW,QAAQC,GAAR,CAAY,wBAAZ;AACA/B,OAAO0B,IAAP,CAAY,YAAI;AACdI,UAAQC,GAAR,CAAY,MAAZ;AACD,CAFD","file":"index.js","sourcesContent":["import \"babel-polyfill\";\nimport Chain from './ChainWrapper';\nimport TaskHandler from './TaskHandler';\nimport Web3 from 'web3';\n\n\nconst main = async () => {\n  let addr = process.env.CONTRACT_ADDRESS;\n  if(!addr) {\n    throw new Error(\"Missing CONTRACT_ADDRESS environment var\")\n  }\n  let web3Url = process.env.WEB3_URL;\n  if(!web3Url) {\n    throw new Error(\"Missing WEB3_URL environment var\");\n  }\n  if(!web3Url.startsWith(\"ws\")) {\n    throw new Error(\"Only support websocket based web3 url: \" + web3Url);\n  }\n  let provider = new Web3.providers.WebsocketProvider(web3Url);\n\n  let initRequired = process.env.INIT_REQUIRED;\n  if(initRequired && initRequired.trim().length === 0){\n    initRequired = undefined;\n  }\n\n  return new Promise((done,err)=>{\n    let chain = new Chain({\n      mnemonic: \"nick lucian brenda kevin sam fiscal patch fly damp ocean produce wish\",\n      masterAddress: addr,\n      provider\n    });\n\n    chain.init().then(async ()=>{\n      let task = new TaskHandler({\n        chain,\n        initRequired\n      });\n      await task.start();\n      done();\n    });\n  });\n}\n\nconsole.log(\"Starting mock miner...\");\nmain().then(()=>{\n  console.log(\"Done\");\n});\n"]}