{
  "contractName": "Tellor",
  "abi": [
    {
      "constant": false,
      "inputs": [
        {
          "name": "_address",
          "type": "address"
        },
        {
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "theLazyCoon",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function",
      "signature": "0xb079f64a"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "tellorPostConstructor",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function",
      "signature": "0x799ce980"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_spender",
          "type": "address"
        },
        {
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function",
      "signature": "0x095ea7b3"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "depositStake",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function",
      "signature": "0x0d2d76a2"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_requestId",
          "type": "uint256"
        },
        {
          "name": "_timestamp",
          "type": "uint256"
        },
        {
          "name": "_minerIndex",
          "type": "uint256"
        }
      ],
      "name": "beginDispute",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function",
      "signature": "0x8581af19"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_propNewTellorAddress",
          "type": "address"
        }
      ],
      "name": "proposeFork",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function",
      "signature": "0x26b7d9f6"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_requestId",
          "type": "uint256"
        },
        {
          "name": "_tip",
          "type": "uint256"
        }
      ],
      "name": "addTip",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function",
      "signature": "0x752d49a1"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_c_sapi",
          "type": "string"
        },
        {
          "name": "_c_symbol",
          "type": "string"
        },
        {
          "name": "_requestId",
          "type": "uint256"
        },
        {
          "name": "_granularity",
          "type": "uint256"
        },
        {
          "name": "_tip",
          "type": "uint256"
        }
      ],
      "name": "requestData",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function",
      "signature": "0xf78a63c4"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "requestStakingWithdraw",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function",
      "signature": "0x28449c3a"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_disputeId",
          "type": "uint256"
        }
      ],
      "name": "tallyVotes",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function",
      "signature": "0x4d318b0e"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_nonce",
          "type": "string"
        },
        {
          "name": "_requestId",
          "type": "uint256"
        },
        {
          "name": "_value",
          "type": "uint256"
        }
      ],
      "name": "submitMiningSolution",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function",
      "signature": "0x68c180d5"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_to",
          "type": "address"
        },
        {
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function",
      "signature": "0xa9059cbb"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_from",
          "type": "address"
        },
        {
          "name": "_to",
          "type": "address"
        },
        {
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function",
      "signature": "0x23b872dd"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function",
      "signature": "0xf2fde38b"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_disputeId",
          "type": "uint256"
        },
        {
          "name": "_supportsDispute",
          "type": "bool"
        }
      ],
      "name": "vote",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function",
      "signature": "0xc9d27afe"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "withdrawStake",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function",
      "signature": "0xbed9d861"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.5.0+commit.1d4f565a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"depositStake\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_propNewTellorAddress\",\"type\":\"address\"}],\"name\":\"proposeFork\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"requestStakingWithdraw\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_disputeId\",\"type\":\"uint256\"}],\"name\":\"tallyVotes\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_nonce\",\"type\":\"string\"},{\"name\":\"_requestId\",\"type\":\"uint256\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"submitMiningSolution\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_requestId\",\"type\":\"uint256\"},{\"name\":\"_tip\",\"type\":\"uint256\"}],\"name\":\"addTip\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"tellorPostConstructor\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_requestId\",\"type\":\"uint256\"},{\"name\":\"_timestamp\",\"type\":\"uint256\"},{\"name\":\"_minerIndex\",\"type\":\"uint256\"}],\"name\":\"beginDispute\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_address\",\"type\":\"address\"},{\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"theLazyCoon\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"withdrawStake\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_disputeId\",\"type\":\"uint256\"},{\"name\":\"_supportsDispute\",\"type\":\"bool\"}],\"name\":\"vote\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_c_sapi\",\"type\":\"string\"},{\"name\":\"_c_symbol\",\"type\":\"string\"},{\"name\":\"_requestId\",\"type\":\"uint256\"},{\"name\":\"_granularity\",\"type\":\"uint256\"},{\"name\":\"_tip\",\"type\":\"uint256\"}],\"name\":\"requestData\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Oracle contract where miners can submit the proof of work along with the value. The logic for this contract is in TellorLibrary.sol\",\"methods\":{\"addTip(uint256,uint256)\":{\"details\":\"Add tip to Request value from oracle\",\"params\":{\"_requestId\":\"being requested to be mined\",\"_tip\":\"amount the requester is willing to pay to be get on queue. Miners mine the onDeckQueryHash, or the api with the highest payout pool\"}},\"approve(address,uint256)\":{\"details\":\"This function approves a _spender an _amount of tokens to use\",\"params\":{\"_amount\":\"amount the spender is being approved for\",\"_spender\":\"address\"},\"return\":\"true if spender appproved successfully\"},\"beginDispute(uint256,uint256,uint256)\":{\"details\":\"Helps initialize a dispute by assigning it a disputeId  when a miner returns a false on the validate array(in Tellor.ProofOfWork) it sends the  invalidated value information to POS voting\",\"params\":{\"_minerIndex\":\"the index of the miner that submitted the value being disputed. Since each official value  requires 5 miners to submit a value.\",\"_requestId\":\"being disputed\",\"_timestamp\":\"being disputed\"}},\"depositStake()\":{\"details\":\"This function allows miners to deposit their stake.\"},\"proposeFork(address)\":{\"details\":\"Allows for a fork to be proposed\",\"params\":{\"_propNewTellorAddress\":\"address for new proposed Tellor\"}},\"requestData(string,string,uint256,uint256,uint256)\":{\"details\":\"Request to retreive value from oracle based on timestamp. The tip is not required to be  greater than 0 because there are no tokens in circulation for the initial(genesis) request \",\"params\":{\"_c_sapi\":\"string API being requested be mined\",\"_c_symbol\":\"is the short string symbol for the api request\",\"_granularity\":\"is the number of decimals miners should include on the submitted value\",\"_requestId\":\"being requested be mined if it exist otherwise use zero(0)\",\"_tip\":\"amount the requester is willing to pay to be get on queue. Miners mine the onDeckQueryHash, or the api with the highest payout pool\"}},\"requestStakingWithdraw()\":{\"details\":\"This function allows stakers to request to withdraw their stake (no longer stake)  once they lock for withdraw(stakes.currentStatus = 2) they are locked for 7 days before they  can withdraw the stake\"},\"submitMiningSolution(string,uint256,uint256)\":{\"details\":\"Proof of work is called by the miner when they submit the solution (proof of work and value)\",\"params\":{\"_nonce\":\"uint submitted by miner\",\"_requestId\":\"the apiId being mined\",\"_value\":\"of api query\"}},\"tallyVotes(uint256)\":{\"details\":\"tallies the votes.\",\"params\":{\"_disputeId\":\"is the dispute id\"}},\"transfer(address,uint256)\":{\"details\":\"Allows for a transfer of tokens to _to\",\"params\":{\"_amount\":\"The amount of tokens to send\",\"_to\":\"The address to send tokens to\"},\"return\":\"true if transfer is successful\"},\"transferFrom(address,address,uint256)\":{\"params\":{\"_amount\":\"The amount of tokens to be transferred\",\"_from\":\"The address holding the tokens being transferred\",\"_to\":\"The address of the recipient\"},\"return\":\"True if the transfer was successful\"},\"transferOwnership(address)\":{\"details\":\"Allows the current owner to transfer control of the contract to a newOwner.\",\"params\":{\"_newOwner\":\"The address to transfer ownership to.\"}},\"vote(uint256,bool)\":{\"details\":\"Allows token holders to vote\",\"params\":{\"_disputeId\":\"is the dispute id\",\"_supportsDispute\":\"is the vote (true=the dispute has basis false = vote against dispute)\"}},\"withdrawStake()\":{\"details\":\"This function allows users to withdraw their stake after a 7 day waiting period from request \"}},\"title\":\"Tellor Oracle System\"},\"userdoc\":{\"methods\":{\"transferFrom(address,address,uint256)\":{\"notice\":\"Send _amount tokens to _to from _from on the condition it is approved by _from\"}}}},\"settings\":{\"compilationTarget\":{\"/Users/mdcoon/git/TellorCore/contracts/Tellor.sol\":\"Tellor\"},\"evmVersion\":\"byzantium\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/Users/mdcoon/git/TellorCore/contracts/Tellor.sol\":{\"keccak256\":\"0x9a79042525bb04ac060f0bcf58d20ac19fc35701b01bdc7c83f2f60ad357a146\",\"urls\":[\"bzzr://bedeaaa34a30c9d4c8c921cd6093c7b4064bbd403f3919f5f3926bdcf15d1e38\"]},\"/Users/mdcoon/git/TellorCore/contracts/libraries/SafeMath.sol\":{\"keccak256\":\"0x64bb591a8002f82f9af3e8c97f70e406d5750c6ddd2afb4fe4570c6f22a81b35\",\"urls\":[\"bzzr://b8a1b883348f79a20cb5e568af0857a5032c6ccfba56efb088460c3352f39f3b\"]},\"/Users/mdcoon/git/TellorCore/contracts/libraries/TellorLibrary.sol\":{\"keccak256\":\"0x7cb358ae94bc56a0524d57a64980980cc40a38810ac6dfafcca96be9b55b9cd0\",\"urls\":[\"bzzr://a91eb50842e86bbabba37b3f598e1637c564bb6091246df29d732db335cb7f2d\"]},\"/Users/mdcoon/git/TellorCore/contracts/libraries/Utilities.sol\":{\"keccak256\":\"0xfde2134936e4e2f0a1090efabf773bf311ed03a62d9a5bada406bd756a82686a\",\"urls\":[\"bzzr://4de3e5dda475359778df2982d3095c02b70e8437078fe8c45399bcacc8749cad\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b50615fa380620000216000396000f3fe6080604052600436106100e6576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff168063095ea7b3146100eb5780630d2d76a21461015e57806323b872dd1461017557806326b7d9f61461020857806328449c3a146102595780634d318b0e1461027057806368c180d5146102ab578063752d49a114610345578063799ce9801461038a5780638581af19146103a1578063a9059cbb146103f0578063b079f64a14610463578063bed9d861146104be578063c9d27afe146104d5578063f2fde38b1461051c578063f78a63c41461056d575b600080fd5b3480156100f757600080fd5b506101446004803603604081101561010e57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610666565b604051808215151515815260200191505060405180910390f35b34801561016a57600080fd5b50610173610754565b005b34801561018157600080fd5b506101ee6004803603606081101561019857600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506107dc565b604051808215151515815260200191505060405180910390f35b34801561021457600080fd5b506102576004803603602081101561022b57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506107ff565b005b34801561026557600080fd5b5061026e610816565b005b34801561027c57600080fd5b506102a96004803603602081101561029357600080fd5b8101908080359060200190929190505050610822565b005b3480156102b757600080fd5b50610343600480360360608110156102ce57600080fd5b81019080803590602001906401000000008111156102eb57600080fd5b8201836020820111156102fd57600080fd5b8035906020019184600183028401116401000000008311171561031f57600080fd5b90919293919293908035906020019092919080359060200190929190505050610839565b005b34801561035157600080fd5b506103886004803603604081101561036857600080fd5b81019080803590602001909291908035906020019092919050505061089b565b005b34801561039657600080fd5b5061039f610935565b005b3480156103ad57600080fd5b506103ee600480360360608110156103c457600080fd5b810190808035906020019092919080359060200190929190803590602001909291905050506109bd565b005b3480156103fc57600080fd5b506104496004803603604081101561041357600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610a60565b604051808215151515815260200191505060405180910390f35b34801561046f57600080fd5b506104bc6004803603604081101561048657600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610a80565b005b3480156104ca57600080fd5b506104d3610b46565b005b3480156104e157600080fd5b5061051a600480360360408110156104f857600080fd5b8101908080359060200190929190803515159060200190929190505050610b52565b005b34801561052857600080fd5b5061056b6004803603602081101561053f57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610b6c565b005b34801561057957600080fd5b50610664600480360360a081101561059057600080fd5b81019080803590602001906401000000008111156105ad57600080fd5b8201836020820111156105bf57600080fd5b803590602001918460018302840111640100000000831117156105e157600080fd5b90919293919293908035906020019064010000000081111561060257600080fd5b82018360208201111561061457600080fd5b8035906020019184600183028401116401000000008311171561063657600080fd5b9091929391929390803590602001909291908035906020019092919080359060200190929190505050610b83565b005b60008073__TellorLibrary_________________________63a3dd5a05909185856040518463ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808481526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001828152602001935050505060206040518083038186803b15801561071157600080fd5b505af4158015610725573d6000803e3d6000fd5b505050506040513d602081101561073b57600080fd5b8101908080519060200190929190505050905092915050565b600073__TellorLibrary_________________________6316c7360c90916040518263ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004018082815260200191505060006040518083038186803b1580156107c257600080fd5b505af41580156107d6573d6000803e3d6000fd5b50505050565b60006107f68484846000610c30909392919063ffffffff16565b90509392505050565b610813816000610d6390919063ffffffff16565b50565b61082060006111bf565b565b6108368160006112da90919063ffffffff16565b50565b61089584848080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505083836000611b8c909392919063ffffffff16565b50505050565b600073__TellorLibrary_________________________634cd87233909184846040518463ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040180848152602001838152602001828152602001935050505060006040518083038186803b15801561091957600080fd5b505af415801561092d573d6000803e3d6000fd5b505050505050565b600073__TellorLibrary_________________________63a8181b3090916040518263ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004018082815260200191505060006040518083038186803b1580156109a357600080fd5b505af41580156109b7573d6000803e3d6000fd5b50505050565b600073__TellorLibrary_________________________63e4d15a3a90918585856040518563ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004018085815260200184815260200183815260200182815260200194505050505060006040518083038186803b158015610a4357600080fd5b505af4158015610a57573d6000803e3d6000fd5b50505050505050565b6000610a7883836000613d699092919063ffffffff16565b905092915050565b600073__TellorLibrary_________________________6367f2cd10909184846040518463ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808481526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001828152602001935050505060006040518083038186803b158015610b2a57600080fd5b505af4158015610b3e573d6000803e3d6000fd5b505050505050565b610b506000613d82565b565b610b6882826000613e569092919063ffffffff16565b5050565b610b8081600061411c90919063ffffffff16565b50565b610c2787878080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505086868080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505085858560006143119095949392919063ffffffff16565b50505050505050565b60008185604e0160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205410151515610cbf57600080fd5b8185604e0160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282540392505081905550610d57858585856148bd565b60019050949350505050565b600081604051602001808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166c01000000000000000000000000028152601401915050604051602081830303815290604052805190602001209050600083605201600083815260200190815260200160002054141515610ded57600080fd5b610e4383333086604801600060405180807f6469737075746546656500000000000000000000000000000000000000000000815250600a01905060405180910390208152602001908152602001600020546148bd565b82604801600060405180807f64697370757465436f756e740000000000000000000000000000000000000000815250600c0190506040518091039020815260200190815260200160002060008154809291906001019190505550600083604801600060405180807f64697370757465436f756e740000000000000000000000000000000000000000815250600c01905060405180910390208152602001908152602001600020549050808460520160008481526020019081526020016000208190555061010060405190810160405280838152602001600081526020016000151581526020016000151581526020016001151581526020013373ffffffffffffffffffffffffffffffffffffffff1681526020013373ffffffffffffffffffffffffffffffffffffffff1681526020018473ffffffffffffffffffffffffffffffffffffffff1681525084604c016000838152602001908152602001600020600082015181600001556020820151816001015560408201518160020160006101000a81548160ff02191690831515021790555060608201518160020160016101000a81548160ff02191690831515021790555060808201518160020160026101000a81548160ff02191690831515021790555060a08201518160020160036101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060c08201518160030160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060e08201518160040160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055509050504384604c016000838152602001908152602001600020600501600060405180807f626c6f636b4e756d626572000000000000000000000000000000000000000000815250600b019050604051809103902081526020019081526020016000208190555062093a80420184604c016000838152602001908152602001600020600501600060405180807f6d696e457865637574696f6e44617465000000000000000000000000000000008152506010019050604051809103902081526020019081526020016000208190555050505050565b600081604f0160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002090506001816000015414151561121757600080fd5b60028160000181905550620151804281151561122f57fe5b0642038160010181905550600182604801600060405180807f7374616b6572436f756e74000000000000000000000000000000000000000000815250600b01905060405180910390208152602001908152602001600020600082825403925050819055503373ffffffffffffffffffffffffffffffffffffffff167f453865710d0cb4b14ad25de371c860da196368895daa9662e5087711d14daecf60405160405180910390a25050565b600082604c0160008381526020019081526020016000209050600083605001600083600501600060405180807f72657175657374496400000000000000000000000000000000000000000000008152506009019050604051809103902081526020019081526020016000205481526020019081526020016000209050600015158260020160009054906101000a900460ff16151514151561137a57600080fd5b81600501600060405180807f6d696e457865637574696f6e446174650000000000000000000000000000000081525060100190506040518091039020815260200190815260200160002054421115156113d257600080fd5b600015158260020160029054906101000a900460ff16151514156119a057600084604f0160008460020160039054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002090506000836001015413156116fd5760008160000181905550620151804281151561147e57fe5b064203816001018190555084604801600060405180807f7374616b6572436f756e74000000000000000000000000000000000000000000815250600b019050604051809103902081526020019081526020016000206000815480929190600190039190505550611582858460020160039054906101000a900473ffffffffffffffffffffffffffffffffffffffff168560030160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1688604801600060405180807f7374616b65416d6f756e74000000000000000000000000000000000000000000815250600b01905060405180910390208152602001908152602001600020546148bd565b6115fc85338560030160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1688604801600060405180807f6469737075746546656500000000000000000000000000000000000000000000815250600a01905060405180910390208152602001908152602001600020546148bd565b60018360020160016101000a81548160ff0219169083151502179055506001151582600701600085600501600060405180807f74696d657374616d70000000000000000000000000000000000000000000000081525060090190506040518091039020815260200190815260200160002054815260200190815260200160002060009054906101000a900460ff16151514156116f857600082600601600085600501600060405180807f74696d657374616d700000000000000000000000000000000000000000000000815250600901905060405180910390208152602001908152602001600020548152602001908152602001600020819055505b6118ae565b6001816000018190555060018360020160006101000a81548160ff02191690831515021790555060008360020160016101000a81548160ff0219169083151502179055506117bb85338560020160039054906101000a900473ffffffffffffffffffffffffffffffffffffffff1688604801600060405180807f6469737075746546656500000000000000000000000000000000000000000000815250600a01905060405180910390208152602001908152602001600020546148bd565b6001151582600701600085600501600060405180807f74696d657374616d70000000000000000000000000000000000000000000000081525060090190506040518091039020815260200190815260200160002054815260200190815260200160002060009054906101000a900460ff16151514156118ad57600082600701600085600501600060405180807f74696d657374616d70000000000000000000000000000000000000000000000081525060090190506040518091039020815260200190815260200160002054815260200190815260200160002060006101000a81548160ff0219169083151502179055505b5b8260020160039054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16847f21459c2f5447ebcf83a7f0a238c32c71076faef0d12295e771c0cb1e1043473985600101548660030160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff168760020160019054906101000a900460ff16604051808481526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182151515158152602001935050505060405180910390a350611b86565b6064601485604801600060405180807f746f74616c5f737570706c790000000000000000000000000000000000000000815250600c0190506040518091039020815260200190815260200160002054028115156119f957fe5b0482600501600060405180807f71756f72756d000000000000000000000000000000000000000000000000000081525060060190506040518091039020815260200190815260200160002054111515611a5157600080fd5b8160040160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1684604701600060405180807f74656c6c6f72436f6e7472616374000000000000000000000000000000000000815250600e0190506040518091039020815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507fc2d1449eb0b6547aa426e09d9942a77fa4fc8cd3296305b3163e22452e0bcb8d8260040160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390a15b50505050565b600184604f0160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000154141515611bdf57600080fd5b83604801600060405180807f63757272656e74526571756573744964000000000000000000000000000000008152506010019050604051809103902081526020019081526020016000205482141515611c3757600080fd5b60006002600386600001543387604051602001808481526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166c0100000000000000000000000002815260140182805190602001908083835b602083101515611cc35780518252602082019150602081019050602083039250611c9e565b6001836020036101000a038019825116818451168082178552505050505050905001935050505060405160208183030381529060405280519060200120604051602001808281526020019150506040516020818303038152906040526040518082805190602001908083835b602083101515611d545780518252602082019150602081019050602083039250611d2f565b6001836020036101000a038019825116818451168082178552505050505050905001915050602060405180830381855afa158015611d96573d6000803e3d6000fd5b505050604051516c010000000000000000000000000260405160200180826bffffffffffffffffffffffff19166bffffffffffffffffffffffff191681526014019150506040516020818303038152906040526040518082805190602001908083835b602083101515611e1e5780518252602082019150602081019050602083039250611df9565b6001836020036101000a038019825116818451168082178552505050505050905001915050602060405180830381855afa158015611e60573d6000803e3d6000fd5b5050506040513d6020811015611e7557600080fd5b81019080805190602001909291905050509050600085604801600060405180807f646966666963756c747900000000000000000000000000000000000000000000815250600a01905060405180910390208152602001908152602001600020548260019004811515611ee357fe5b06141515611ef057600080fd5b600015158560490160008760000154815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff161515141515611f6657600080fd5b8185603d0186604801600060405180807f736c6f7450726f67726573730000000000000000000000000000000000000000815250600c0190506040518091039020815260200190815260200160002054600581101515611fc257fe5b60020201600001819055503385603d0186604801600060405180807f736c6f7450726f67726573730000000000000000000000000000000000000000815250600c019050604051809103902081526020019081526020016000205460058110151561202957fe5b6002020160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555084604801600060405180807f736c6f7450726f67726573730000000000000000000000000000000000000000815250600c019050604051809103902081526020019081526020016000206000815480929190600101919050555060018560490160008760000154815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908315150217905550823373ffffffffffffffffffffffffffffffffffffffff167fe6d63a2aee0aaed2ab49702313ce54114f2145af219d7db30d6624af9e6dffc4868589600001546040518080602001848152602001838152602001828103825285818151815260200191508051906020019080838360005b838110156121c35780820151818401526020810190506121a8565b50505050905090810190601f1680156121f05780820380516001836020036101000a031916815260200191505b5094505050505060405180910390a3600585604801600060405180807f736c6f7450726f67726573730000000000000000000000000000000000000000815250600c01905060405180910390208152602001908152602001600020541415613d6257600085605001600085815260200190815260200160002090506000603c87604801600060405180807f74696d654f664c6173744e657756616c7565000000000000000000000000000081525060120190506040518091039020815260200190815260200160002054420388604801600060405180807f74696d6554617267657400000000000000000000000000000000000000000000815250600a01905060405180910390208152602001908152602001600020540381151561231157fe5b0587604801600060405180807f646966666963756c747900000000000000000000000000000000000000000000815250600a01905060405180910390208152602001908152602001600020540113156124a857603c86604801600060405180807f74696d654f664c6173744e657756616c7565000000000000000000000000000081525060120190506040518091039020815260200190815260200160002054420387604801600060405180807f74696d6554617267657400000000000000000000000000000000000000000000815250600a01905060405180910390208152602001908152602001600020540381151561240857fe5b0586604801600060405180807f646966666963756c747900000000000000000000000000000000000000000000815250600a01905060405180910390208152602001908152602001600020540186604801600060405180807f646966666963756c747900000000000000000000000000000000000000000000815250600a01905060405180910390208152602001908152602001600020819055506124f9565b600186604801600060405180807f646966666963756c747900000000000000000000000000000000000000000000815250600a01905060405180910390208152602001908152602001600020819055505b603c4281151561250557fe5b06420386604801600060405180807f74696d654f664c6173744e657756616c756500000000000000000000000000008152506012019050604051809103902081526020019081526020016000208190555061255e615c73565b86603d01600580602002604051908101604052809291906000905b8282101561260157838260020201604080519081016040529081600082015481526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152505081526020019060010190612579565b5050505090506000600190505b60058110156127a5576000828260058110151561262757fe5b60200201516000015190506000838360058110151561264257fe5b602002015160200151905060008390505b60008111801561267b5750846001820360058110151561266f57fe5b60200201516000015183105b1561272657846001820360058110151561269157fe5b60200201516000015185826005811015156126a857fe5b6020020151600001818152505084600182036005811015156126c657fe5b60200201516020015185826005811015156126dd57fe5b60200201516020019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff1681525050808060019003915050612653565b838110156127955782858260058110151561273d57fe5b6020020151600001818152505081858260058110151561275957fe5b60200201516020019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff16815250505b505050808060010191505061260e565b600090505b600581101561287357612866883084846005811015156127c657fe5b602002015160200151670de0b6b3a76400008c600401866005811015156127e957fe5b015460168e604801600060405180807f63757272656e74546f74616c54697073000000000000000000000000000000008152506010019050604051809103902081526020019081526020016000205481151561284157fe5b040281151561284c57fe5b048c6004018660058110151561285e57fe5b0154016148bd565b80806001019150506127aa565b857fc509d04e0782579ee59912139246ccbdf6c36c43abd90591d912017f3467dd1689604801600060405180807f74696d654f664c6173744e657756616c75650000000000000000000000000000815250601201905060405180910390208152602001908152602001600020548460026005811015156128ef57fe5b60200201516000015160168c604801600060405180807f63757272656e74546f74616c54697073000000000000000000000000000000008152506010019050604051809103902081526020019081526020016000205481151561294e57fe5b068c604801600060405180807f63757272656e74546f74616c546970730000000000000000000000000000000081525060100190506040518091039020815260200190815260200160002054038c600001546040518085815260200184815260200183815260200182815260200194505050505060405180910390a26064606e89604801600060405180807f6d696e696e675265776172640000000000000000000000000000000000000000815250600c019050604051809103902081526020019081526020016000205402811515612a2357fe5b04601689604801600060405180807f63757272656e74546f74616c546970730000000000000000000000000000000081525060100190506040518091039020815260200190815260200160002054811515612a7a57fe5b0689604801600060405180807f63757272656e74546f74616c546970730000000000000000000000000000000081525060100190506040518091039020815260200190815260200160002054030188604801600060405180807f746f74616c5f737570706c790000000000000000000000000000000000000000815250600c0190506040518091039020815260200190815260200160002060008282540192505081905550612bee88308a604701600060405180807f5f6f776e6572000000000000000000000000000000000000000000000000000081525060060190506040518091039020815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166064600a8d604801600060405180807f6d696e696e675265776172640000000000000000000000000000000000000000815250600c019050604051809103902081526020019081526020016000205402811515612be857fe5b046148bd565b816002600581101515612bfd57fe5b6020020151600001518360060160008a604801600060405180807f74696d654f664c6173744e657756616c75650000000000000000000000000000815250601201905060405180910390208152602001908152602001600020548152602001908152602001600020819055508260030188604801600060405180807f74696d654f664c6173744e657756616c7565000000000000000000000000000081525060120190506040518091039020815260200190815260200160002054908060018154018082558091505090600182039060005260206000200160009091929091909150555060a060405190810160405280836000600581101515612cfc57fe5b60200201516020015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001836001600581101515612d4557fe5b60200201516020015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001836002600581101515612d8e57fe5b60200201516020015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001836003600581101515612dd757fe5b60200201516020015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001836004600581101515612e2057fe5b60200201516020015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152508360080160008a604801600060405180807f74696d654f664c6173744e657756616c75650000000000000000000000000000815250601201905060405180910390208152602001908152602001600020548152602001908152602001600020906005612ec5929190615ca2565b5060a060405190810160405280836000600581101515612ee157fe5b6020020151600001518152602001836001600581101515612efe57fe5b6020020151600001518152602001836002600581101515612f1b57fe5b6020020151600001518152602001836003600581101515612f3857fe5b6020020151600001518152602001836004600581101515612f5557fe5b6020020151600001518152508360090160008a604801600060405180807f74696d654f664c6173744e657756616c75650000000000000000000000000000815250601201905060405180910390208152602001908152602001600020548152602001908152602001600020906005612fce929190615d1f565b50438360050160008a604801600060405180807f74696d654f664c6173744e657756616c756500000000000000000000000000008152506012019050604051809103902081526020019081526020016000205481526020019081526020016000208190555087604801600060405180807f6f6e4465636b5265717565737449640000000000000000000000000000000000815250600f019050604051809103902081526020019081526020016000205488604801600060405180807f63757272656e74526571756573744964000000000000000000000000000000008152506010019050604051809103902081526020019081526020016000208190555087604801600060405180807f6f6e4465636b546f74616c546970730000000000000000000000000000000000815250600f019050604051809103902081526020019081526020016000205488604801600060405180807f63757272656e74546f74616c5469707300000000000000000000000000000000815250601001905060405180910390208152602001908152602001600020819055508588604a0160008a604801600060405180807f74696d654f664c6173744e657756616c756500000000000000000000000000008152506012019050604051809103902081526020019081526020016000205481526020019081526020016000208190555087603c0188604801600060405180807f74696d654f664c6173744e657756616c75650000000000000000000000000000815250601201905060405180910390208152602001908152602001600020549080600181540180825580915050906001820390600052602060002001600090919290919091505550600088604801600060405180807f736c6f7450726f67726573730000000000000000000000000000000000000000815250600c01905060405180910390208152602001908152602001600020819055506000886009018960500160008b604801600060405180807f6f6e4465636b5265717565737449640000000000000000000000000000000000815250600f01905060405180910390208152602001908152602001600020548152602001908152602001600020600401600060405180807f7265717565737451506f736974696f6e000000000000000000000000000000008152506010019050604051809103902081526020019081526020016000205460338110151561334c57fe5b0181905550600088604b0160008a60500160008c604801600060405180807f6f6e4465636b5265717565737449640000000000000000000000000000000000815250600f01905060405180910390208152602001908152602001600020548152602001908152602001600020600401600060405180807f7265717565737451506f736974696f6e000000000000000000000000000000008152506010019050604051809103902081526020019081526020016000205481526020019081526020016000208190555060008860500160008a604801600060405180807f6f6e4465636b5265717565737449640000000000000000000000000000000000815250600f01905060405180910390208152602001908152602001600020548152602001908152602001600020600401600060405180807f7265717565737451506f736974696f6e000000000000000000000000000000008152506010019050604051809103902081526020019081526020016000208190555060008860500160008a604801600060405180807f6f6e4465636b5265717565737449640000000000000000000000000000000000815250600f01905060405180910390208152602001908152602001600020548152602001908152602001600020600401600060405180807f746f74616c54697000000000000000000000000000000000000000000000000081525060080190506040518091039020815260200190815260200160002081905550613578615d5f565b600089604801600060405180807f63757272656e7452657175657374496400000000000000000000000000000000815250601001905060405180910390208152602001908152602001600020541115613ca85761361389600901603380602002604051908101604052809291908260338015613609576020028201915b8154815260200190600101908083116135f5575b5050505050614a4f565b82600060028110151561362257fe5b6020020183600160028110151561363557fe5b602002018281525082815250505088604b01600082600160028110151561365857fe5b602002015181526020019081526020016000205489604801600060405180807f6f6e4465636b5265717565737449640000000000000000000000000000000000815250600f01905060405180910390208152602001908152602001600020819055508860500160008a604801600060405180807f6f6e4465636b5265717565737449640000000000000000000000000000000000815250600f0190506040518091039020815260200190815260200160002054815260200190815260200160002060020154896001018190555080600060028110151561373457fe5b602002015189604801600060405180807f6f6e4465636b546f74616c546970730000000000000000000000000000000000815250600f019050604051809103902081526020019081526020016000208190555087896000015460014303406040516020018084805190602001908083835b6020831015156137ca57805182526020820191506020810190506020830392506137a5565b6001836020036101000a038019825116818451168082178552505050505050905001838152602001828152602001935050505060405160208183030381529060405280519060200120896000018190555088604801600060405180807f63757272656e7452657175657374496400000000000000000000000000000000815250601001905060405180910390208152602001908152602001600020547f9e959738f09af22daede9ff9563f8edf3f5cec8e17ce60287c911c95fa767f428a600001548b604801600060405180807f646966666963756c747900000000000000000000000000000000000000000000815250600a01905060405180910390208152602001908152602001600020548c60500160008e604801600060405180807f63757272656e7452657175657374496400000000000000000000000000000000815250601001905060405180910390208152602001908152602001600020548152602001908152602001600020600401600060405180807f6772616e756c6172697479000000000000000000000000000000000000000000815250600b01905060405180910390208152602001908152602001600020548d60500160008f604801600060405180807f63757272656e74526571756573744964000000000000000000000000000000008152506010019050604051809103902081526020019081526020016000205481526020019081526020016000206000018e604801600060405180807f63757272656e74546f74616c5469707300000000000000000000000000000000815250601001905060405180910390208152602001908152602001600020546040518086815260200185815260200184815260200180602001838152602001828103825284818154600181600116156101000203166002900481526020019150805460018160011615610100020316600290048015613ace5780601f10613aa357610100808354040283529160200191613ace565b820191906000526020600020905b815481529060010190602001808311613ab157829003601f168201915b5050965050505050505060405180910390a288604801600060405180807f6f6e4465636b5265717565737449640000000000000000000000000000000000815250600f01905060405180910390208152602001908152602001600020547f5ab383fe3e28263c839564bc7545520a7dd34b78cbd7ab21b2da5d2fd027bf6c8a60500160008c604801600060405180807f6f6e4465636b5265717565737449640000000000000000000000000000000000815250600f019050604051809103902081526020019081526020016000205481526020019081526020016000206000018b600101548c604801600060405180807f6f6e4465636b546f74616c546970730000000000000000000000000000000000815250600f01905060405180910390208152602001908152602001600020546040518080602001848152602001838152602001828103825285818154600181600116156101000203166002900481526020019150805460018160011615610100020316600290048015613c935780601f10613c6857610100808354040283529160200191613c93565b820191906000526020600020905b815481529060010190602001808311613c7657829003601f168201915b505094505050505060405180910390a2613d5d565b600089604801600060405180807f6f6e4465636b5265717565737449640000000000000000000000000000000000815250600f0190506040518091039020815260200190815260200160002081905550600089604801600060405180807f6f6e4465636b546f74616c546970730000000000000000000000000000000000815250600f019050604051809103902081526020019081526020016000208190555060008960010181905550600089600001819055505b505050505b5050505050565b6000613d77843385856148bd565b600190509392505050565b600081604f0160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020905060006201518042811515613dd757fe5b064203905062093a808260010154820310158015613df9575060028260000154145b1515613e0457600080fd5b600082600001819055503373ffffffffffffffffffffffffffffffffffffffff167f4a7934670bd8304e7da22378be1368f7c4fef17c5aee81804beda8638fe428ec60405160405180910390a2505050565b600083604c01600084815260200190815260200160002090506000613ec6853384600501600060405180807f626c6f636b4e756d626572000000000000000000000000000000000000000000815250600b0190506040518091039020815260200190815260200160002054614abe565b9050600115158260060160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16151514151515613f2a57600080fd5b600081111515613f3957600080fd5b600385604f0160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000015414151515613f8d57600080fd5b60018260060160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908315150217905550600182600501600060405180807f6e756d6265724f66566f74657300000000000000000000000000000000000000815250600d01905060405180910390208152602001908152602001600020600082825401925050819055508082600501600060405180807f71756f72756d00000000000000000000000000000000000000000000000000008152506006019050604051809103902081526020019081526020016000206000828254019250508190555082156140b2578082600101540182600101819055506140c2565b8082600101540382600101819055505b3373ffffffffffffffffffffffffffffffffffffffff16847f86abfce99b7dd908bec0169288797f85049ec73cbe046ed9de818fab3a497ae085604051808215151515815260200191505060405180910390a35050505050565b81604701600060405180807f5f6f776e6572000000000000000000000000000000000000000000000000000081525060060190506040518091039020815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156141c057600080fd5b8073ffffffffffffffffffffffffffffffffffffffff1682604701600060405180807f5f6f776e6572000000000000000000000000000000000000000000000000000081525060060190506040518091039020815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a38082604701600060405180807f5f6f776e6572000000000000000000000000000000000000000000000000000081525060060190506040518091039020815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050565b60008211151561432057600080fd5b670de0b6b3a7640000821115151561433757600080fd5b60008314156148a957606085905060608590506000825111151561435a57600080fd5b6040815110151561436a57600080fd5b600082856040516020018083805190602001908083835b6020831015156143a65780518252602082019150602081019050602083039250614381565b6001836020036101000a0380198251168184511680821785525050505050509050018281526020019250505060405160208183030381529060405280519060200120905060008960510160008381526020019081526020016000205414156148805788604801600060405180807f72657175657374436f756e740000000000000000000000000000000000000000815250600c019050604051809103902081526020019081526020016000206000815480929190600101919050555088604801600060405180807f72657175657374436f756e740000000000000000000000000000000000000000815250600c0190506040518091039020815260200190815260200160002054955060806040519081016040528084815260200183815260200182815260200160006040519080825280602002602001820160405280156144fd5781602001602082028038833980820191505090505b508152508960500160008881526020019081526020016000206000820151816000019080519060200190614532929190615d81565b50602082015181600101908051906020019061454f929190615d81565b50604082015181600201556060820151816003019080519060200190614576929190615e01565b5090505084896050016000888152602001908152602001600020600401600060405180807f6772616e756c6172697479000000000000000000000000000000000000000000815250600b01905060405180910390208152602001908152602001600020819055506000896050016000888152602001908152602001600020600401600060405180807f7265717565737451506f736974696f6e00000000000000000000000000000000815250601001905060405180910390208152602001908152602001600020819055506000896050016000888152602001908152602001600020600401600060405180807f746f74616c54697000000000000000000000000000000000000000000000000081525060080190506040518091039020815260200190815260200160002081905550858960510160008381526020019081526020016000208190555060008411156146d5576146d4893330876148bd565b5b6146e28987866000614bfd565b853373ffffffffffffffffffffffffffffffffffffffff167f6d7f869757848b19c8c2456e95cd98885bc6bed062fda4077bb07985e2f76cc98b60500160008a81526020019081526020016000206000018c60500160008b815260200190815260200160002060010189896040518080602001806020018581526020018481526020018381038352878181546001816001161561010002031660029004815260200191508054600181600116156101000203166002900480156147e65780601f106147bb576101008083540402835291602001916147e6565b820191906000526020600020905b8154815290600101906020018083116147c957829003601f168201915b50508381038252868181546001816001161561010002031660029004815260200191508054600181600116156101000203166002900480156148695780601f1061483e57610100808354040283529160200191614869565b820191906000526020600020905b81548152906001019060200180831161484c57829003601f168201915b5050965050505050505060405180910390a36148a1565b6148a0898a60510160008481526020019081526020016000205486615626565b5b5050506148b5565b6148b4868483615626565b5b505050505050565b6000811115156148cc57600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415151561490857600080fd5b614913848483615712565b151561491e57600080fd5b600061492b858543614abe565b905061497985604d0160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002083830361582a565b614984858443614abe565b9050808282011015151561499757600080fd5b6149e385604d0160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002083830161582a565b8273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040518082815260200191505060405180910390a35050505050565b600080826001603381101515614a6157fe5b602002015191506000600190505b6033811015614ab857828482603381101515614a8757fe5b60200201511115614aab578381603381101515614aa057fe5b602002015192508091505b8080600101915050614a6f565b50915091565b60008084604d0160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805490501480614b9b57508184604d0160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000815481101515614b5d57fe5b9060005260206000200160000160009054906101000a90046fffffffffffffffffffffffffffffffff166fffffffffffffffffffffffffffffffff16115b15614ba95760009050614bf6565b614bf384604d0160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208361599f565b90505b9392505050565b600084605001600085815260200190815260200160002090506000831115614ccb57614c7c8382600401600060405180807f746f74616c54697000000000000000000000000000000000000000000000000081525060080190506040518091039020815260200190815260200160002054615bae90919063ffffffff16565b81600401600060405180807f746f74616c546970000000000000000000000000000000000000000000000000815250600801905060405180910390208152602001908152602001600020819055505b600081600401600060405180807f746f74616c546970000000000000000000000000000000000000000000000000815250600801905060405180910390208152602001908152602001600020549050600086604801600060405180807f63757272656e745265717565737449640000000000000000000000000000000081525060100190506040518091039020815260200190815260200160002054141561516c57600082600401600060405180807f746f74616c546970000000000000000000000000000000000000000000000000815250600801905060405180910390208152602001908152602001600020819055508486604801600060405180807f63757272656e7452657175657374496400000000000000000000000000000000815250601001905060405180910390208152602001908152602001600020819055508086604801600060405180807f63757272656e74546f74616c546970730000000000000000000000000000000081525060100190506040518091039020815260200190815260200160002081905550808660000154600143034060405160200180848152602001838152602001828152602001935050505060405160208183030381529060405280519060200120866000018190555085604801600060405180807f63757272656e7452657175657374496400000000000000000000000000000000815250601001905060405180910390208152602001908152602001600020547f9e959738f09af22daede9ff9563f8edf3f5cec8e17ce60287c911c95fa767f42876000015488604801600060405180807f646966666963756c747900000000000000000000000000000000000000000000815250600a01905060405180910390208152602001908152602001600020548960500160008b604801600060405180807f63757272656e7452657175657374496400000000000000000000000000000000815250601001905060405180910390208152602001908152602001600020548152602001908152602001600020600401600060405180807f6772616e756c6172697479000000000000000000000000000000000000000000815250600b01905060405180910390208152602001908152602001600020548a60500160008c604801600060405180807f63757272656e74526571756573744964000000000000000000000000000000008152506010019050604051809103902081526020019081526020016000205481526020019081526020016000206000018b604801600060405180807f63757272656e74546f74616c54697073000000000000000000000000000000008152506010019050604051809103902081526020019081526020016000205460405180868152602001858152602001848152602001806020018381526020018281038252848181546001816001161561010002031660029004815260200191508054600181600116156101000203166002900480156151555780601f1061512a57610100808354040283529160200191615155565b820191906000526020600020905b81548152906001019060200180831161513857829003601f168201915b5050965050505050505060405180910390a261561e565b85604801600060405180807f6f6e4465636b5265717565737449640000000000000000000000000000000000815250600f0190506040518091039020815260200190815260200160002054851415615212578086604801600060405180807f6f6e4465636b546f74616c546970730000000000000000000000000000000000815250600f0190506040518091039020815260200190815260200160002081905550615447565b85604801600060405180807f6f6e4465636b546f74616c546970730000000000000000000000000000000000815250600f01905060405180910390208152602001908152602001600020548111806152c45750600086604801600060405180807f6f6e4465636b5265717565737449640000000000000000000000000000000000815250600f01905060405180910390208152602001908152602001600020541480156152c3575060001515831515145b5b15615446578486604801600060405180807f6f6e4465636b5265717565737449640000000000000000000000000000000000815250600f0190506040518091039020815260200190815260200160002081905550816002015486600101819055508086604801600060405180807f6f6e4465636b546f74616c546970730000000000000000000000000000000000815250600f0190506040518091039020815260200190815260200160002081905550847f5ab383fe3e28263c839564bc7545520a7dd34b78cbd7ab21b2da5d2fd027bf6c8360000188600101548460405180806020018481526020018381526020018281038252858181546001816001161561010002031660029004815260200191508054600181600116156101000203166002900480156154355780601f1061540a57610100808354040283529160200191615435565b820191906000526020600020905b81548152906001019060200180831161541857829003601f168201915b505094505050505060405180910390a25b5b600082600401600060405180807f7265717565737451506f736974696f6e00000000000000000000000000000000815250601001905060405180910390208152602001908152602001600020541480156154a5575060001515831515145b15615598576000806154f5886009016033806020026040519081016040528092919082603380156154eb576020028201915b8154815260200190600101908083116154d7575b5050505050615bcc565b80925081935050508183118061550b5750600082145b156155915782886009018260338110151561552257fe5b01819055508688604b016000838152602001908152602001600020819055508084600401600060405180807f7265717565737451506f736974696f6e00000000000000000000000000000000815250601001905060405180910390208152602001908152602001600020819055505b505061561d565b6000841180156155ac575060001515831515145b1561561c57838660090183600401600060405180807f7265717565737451506f736974696f6e000000000000000000000000000000008152506010019050604051809103902081526020019081526020016000205460338110151561560d57fe5b01600082825401925050819055505b5b5b505050505050565b60008211151561563557600080fd5b600081111561564b5761564a833330846148bd565b5b6156588383836000614bfd565b813373ffffffffffffffffffffffffffffffffffffffff167fd32134405b68f6f7220f9c38ae310df1b648d16188006768d45be2f7c24e882083866050016000878152602001908152602001600020600401600060405180807f746f74616c54697000000000000000000000000000000000000000000000000081525060080190506040518091039020815260200190815260200160002054604051808381526020018281526020019250505060405180910390a3505050565b60008084604f0160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000015411156157ef5760006157da836157cc87604801600060405180807f7374616b65416d6f756e74000000000000000000000000000000000000000000815250600b01905060405180910390208152602001908152602001600020546157be8989615c45565b615c5a90919063ffffffff16565b615c5a90919063ffffffff16565b1015156157ea5760019050615823565b61581e565b600061580d836157ff8787615c45565b615c5a90919063ffffffff16565b10151561581d5760019050615823565b5b600090505b9392505050565b60008280549050148061588c57504382600184805490500381548110151561584e57fe5b9060005260206000200160000160009054906101000a90046fffffffffffffffffffffffffffffffff166fffffffffffffffffffffffffffffffff16105b1561593b576000828380548091906001016158a79190615e4e565b8154811015156158b357fe5b906000526020600020019050438160000160006101000a8154816fffffffffffffffffffffffffffffffff02191690836fffffffffffffffffffffffffffffffff160217905550818160000160106101000a8154816fffffffffffffffffffffffffffffffff02191690836fffffffffffffffffffffffffffffffff1602179055505061599b565b600082600184805490500381548110151561595257fe5b906000526020600020019050818160000160106101000a8154816fffffffffffffffffffffffffffffffff02191690836fffffffffffffffffffffffffffffffff160217905550505b5050565b600080838054905014156159b65760009050615ba8565b8260018480549050038154811015156159cb57fe5b9060005260206000200160000160009054906101000a90046fffffffffffffffffffffffffffffffff166fffffffffffffffffffffffffffffffff1682101515615a6757826001848054905003815481101515615a2457fe5b9060005260206000200160000160109054906101000a90046fffffffffffffffffffffffffffffffff166fffffffffffffffffffffffffffffffff169050615ba8565b826000815481101515615a7657fe5b9060005260206000200160000160009054906101000a90046fffffffffffffffffffffffffffffffff166fffffffffffffffffffffffffffffffff16821015615ac25760009050615ba8565b60008090506000600185805490500390505b81811115615b595760006002600184840101811515615aef57fe5b049050848682815481101515615b0157fe5b9060005260206000200160000160009054906101000a90046fffffffffffffffffffffffffffffffff166fffffffffffffffffffffffffffffffff16111515615b4c57809250615b53565b6001810391505b50615ad4565b8482815481101515615b6757fe5b9060005260206000200160000160109054906101000a90046fffffffffffffffffffffffffffffffff166fffffffffffffffffffffffffffffffff16925050505b92915050565b6000808284019050838110151515615bc257fe5b8091505092915050565b600080600160330390508281603381101515615be457fe5b602002015191506000600160330390505b6000811115615c3f57828482603381101515615c0d57fe5b60200201511015615c31578381603381101515615c2657fe5b602002015192508091505b808060019003915050615bf5565b50915091565b6000615c52838343614abe565b905092915050565b6000828211151515615c6857fe5b818303905092915050565b610140604051908101604052806005905b615c8c615e7a565b815260200190600190039081615c845790505090565b8260058101928215615d0e579160200282015b82811115615d0d5782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555091602001919060010190615cb5565b5b509050615d1b9190615eaa565b5090565b8260058101928215615d4e579160200282015b82811115615d4d578251825591602001919060010190615d32565b5b509050615d5b9190615eed565b5090565b6040805190810160405280600290602082028038833980820191505090505090565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10615dc257805160ff1916838001178555615df0565b82800160010185558215615df0579182015b82811115615def578251825591602001919060010190615dd4565b5b509050615dfd9190615eed565b5090565b828054828255906000526020600020908101928215615e3d579160200282015b82811115615e3c578251825591602001919060010190615e21565b5b509050615e4a9190615eed565b5090565b815481835581811115615e7557818360005260206000209182019101615e749190615f12565b5b505050565b604080519081016040528060008152602001600073ffffffffffffffffffffffffffffffffffffffff1681525090565b615eea91905b80821115615ee657600081816101000a81549073ffffffffffffffffffffffffffffffffffffffff021916905550600101615eb0565b5090565b90565b615f0f91905b80821115615f0b576000816000905550600101615ef3565b5090565b90565b615f7491905b80821115615f7057600080820160006101000a8154906fffffffffffffffffffffffffffffffff02191690556000820160106101000a8154906fffffffffffffffffffffffffffffffff021916905550600101615f18565b5090565b9056fea165627a7a7230582025bbe6d3bc746092b391c3fa45a782b3714de299bd93042acf60cd478612b9030029",
  "deployedBytecode": "0x6080604052600436106100e6576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff168063095ea7b3146100eb5780630d2d76a21461015e57806323b872dd1461017557806326b7d9f61461020857806328449c3a146102595780634d318b0e1461027057806368c180d5146102ab578063752d49a114610345578063799ce9801461038a5780638581af19146103a1578063a9059cbb146103f0578063b079f64a14610463578063bed9d861146104be578063c9d27afe146104d5578063f2fde38b1461051c578063f78a63c41461056d575b600080fd5b3480156100f757600080fd5b506101446004803603604081101561010e57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610666565b604051808215151515815260200191505060405180910390f35b34801561016a57600080fd5b50610173610754565b005b34801561018157600080fd5b506101ee6004803603606081101561019857600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506107dc565b604051808215151515815260200191505060405180910390f35b34801561021457600080fd5b506102576004803603602081101561022b57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506107ff565b005b34801561026557600080fd5b5061026e610816565b005b34801561027c57600080fd5b506102a96004803603602081101561029357600080fd5b8101908080359060200190929190505050610822565b005b3480156102b757600080fd5b50610343600480360360608110156102ce57600080fd5b81019080803590602001906401000000008111156102eb57600080fd5b8201836020820111156102fd57600080fd5b8035906020019184600183028401116401000000008311171561031f57600080fd5b90919293919293908035906020019092919080359060200190929190505050610839565b005b34801561035157600080fd5b506103886004803603604081101561036857600080fd5b81019080803590602001909291908035906020019092919050505061089b565b005b34801561039657600080fd5b5061039f610935565b005b3480156103ad57600080fd5b506103ee600480360360608110156103c457600080fd5b810190808035906020019092919080359060200190929190803590602001909291905050506109bd565b005b3480156103fc57600080fd5b506104496004803603604081101561041357600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610a60565b604051808215151515815260200191505060405180910390f35b34801561046f57600080fd5b506104bc6004803603604081101561048657600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610a80565b005b3480156104ca57600080fd5b506104d3610b46565b005b3480156104e157600080fd5b5061051a600480360360408110156104f857600080fd5b8101908080359060200190929190803515159060200190929190505050610b52565b005b34801561052857600080fd5b5061056b6004803603602081101561053f57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610b6c565b005b34801561057957600080fd5b50610664600480360360a081101561059057600080fd5b81019080803590602001906401000000008111156105ad57600080fd5b8201836020820111156105bf57600080fd5b803590602001918460018302840111640100000000831117156105e157600080fd5b90919293919293908035906020019064010000000081111561060257600080fd5b82018360208201111561061457600080fd5b8035906020019184600183028401116401000000008311171561063657600080fd5b9091929391929390803590602001909291908035906020019092919080359060200190929190505050610b83565b005b60008073__TellorLibrary_________________________63a3dd5a05909185856040518463ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808481526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001828152602001935050505060206040518083038186803b15801561071157600080fd5b505af4158015610725573d6000803e3d6000fd5b505050506040513d602081101561073b57600080fd5b8101908080519060200190929190505050905092915050565b600073__TellorLibrary_________________________6316c7360c90916040518263ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004018082815260200191505060006040518083038186803b1580156107c257600080fd5b505af41580156107d6573d6000803e3d6000fd5b50505050565b60006107f68484846000610c30909392919063ffffffff16565b90509392505050565b610813816000610d6390919063ffffffff16565b50565b61082060006111bf565b565b6108368160006112da90919063ffffffff16565b50565b61089584848080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505083836000611b8c909392919063ffffffff16565b50505050565b600073__TellorLibrary_________________________634cd87233909184846040518463ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040180848152602001838152602001828152602001935050505060006040518083038186803b15801561091957600080fd5b505af415801561092d573d6000803e3d6000fd5b505050505050565b600073__TellorLibrary_________________________63a8181b3090916040518263ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004018082815260200191505060006040518083038186803b1580156109a357600080fd5b505af41580156109b7573d6000803e3d6000fd5b50505050565b600073__TellorLibrary_________________________63e4d15a3a90918585856040518563ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004018085815260200184815260200183815260200182815260200194505050505060006040518083038186803b158015610a4357600080fd5b505af4158015610a57573d6000803e3d6000fd5b50505050505050565b6000610a7883836000613d699092919063ffffffff16565b905092915050565b600073__TellorLibrary_________________________6367f2cd10909184846040518463ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808481526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001828152602001935050505060006040518083038186803b158015610b2a57600080fd5b505af4158015610b3e573d6000803e3d6000fd5b505050505050565b610b506000613d82565b565b610b6882826000613e569092919063ffffffff16565b5050565b610b8081600061411c90919063ffffffff16565b50565b610c2787878080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505086868080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505085858560006143119095949392919063ffffffff16565b50505050505050565b60008185604e0160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205410151515610cbf57600080fd5b8185604e0160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282540392505081905550610d57858585856148bd565b60019050949350505050565b600081604051602001808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166c01000000000000000000000000028152601401915050604051602081830303815290604052805190602001209050600083605201600083815260200190815260200160002054141515610ded57600080fd5b610e4383333086604801600060405180807f6469737075746546656500000000000000000000000000000000000000000000815250600a01905060405180910390208152602001908152602001600020546148bd565b82604801600060405180807f64697370757465436f756e740000000000000000000000000000000000000000815250600c0190506040518091039020815260200190815260200160002060008154809291906001019190505550600083604801600060405180807f64697370757465436f756e740000000000000000000000000000000000000000815250600c01905060405180910390208152602001908152602001600020549050808460520160008481526020019081526020016000208190555061010060405190810160405280838152602001600081526020016000151581526020016000151581526020016001151581526020013373ffffffffffffffffffffffffffffffffffffffff1681526020013373ffffffffffffffffffffffffffffffffffffffff1681526020018473ffffffffffffffffffffffffffffffffffffffff1681525084604c016000838152602001908152602001600020600082015181600001556020820151816001015560408201518160020160006101000a81548160ff02191690831515021790555060608201518160020160016101000a81548160ff02191690831515021790555060808201518160020160026101000a81548160ff02191690831515021790555060a08201518160020160036101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060c08201518160030160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060e08201518160040160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055509050504384604c016000838152602001908152602001600020600501600060405180807f626c6f636b4e756d626572000000000000000000000000000000000000000000815250600b019050604051809103902081526020019081526020016000208190555062093a80420184604c016000838152602001908152602001600020600501600060405180807f6d696e457865637574696f6e44617465000000000000000000000000000000008152506010019050604051809103902081526020019081526020016000208190555050505050565b600081604f0160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002090506001816000015414151561121757600080fd5b60028160000181905550620151804281151561122f57fe5b0642038160010181905550600182604801600060405180807f7374616b6572436f756e74000000000000000000000000000000000000000000815250600b01905060405180910390208152602001908152602001600020600082825403925050819055503373ffffffffffffffffffffffffffffffffffffffff167f453865710d0cb4b14ad25de371c860da196368895daa9662e5087711d14daecf60405160405180910390a25050565b600082604c0160008381526020019081526020016000209050600083605001600083600501600060405180807f72657175657374496400000000000000000000000000000000000000000000008152506009019050604051809103902081526020019081526020016000205481526020019081526020016000209050600015158260020160009054906101000a900460ff16151514151561137a57600080fd5b81600501600060405180807f6d696e457865637574696f6e446174650000000000000000000000000000000081525060100190506040518091039020815260200190815260200160002054421115156113d257600080fd5b600015158260020160029054906101000a900460ff16151514156119a057600084604f0160008460020160039054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002090506000836001015413156116fd5760008160000181905550620151804281151561147e57fe5b064203816001018190555084604801600060405180807f7374616b6572436f756e74000000000000000000000000000000000000000000815250600b019050604051809103902081526020019081526020016000206000815480929190600190039190505550611582858460020160039054906101000a900473ffffffffffffffffffffffffffffffffffffffff168560030160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1688604801600060405180807f7374616b65416d6f756e74000000000000000000000000000000000000000000815250600b01905060405180910390208152602001908152602001600020546148bd565b6115fc85338560030160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1688604801600060405180807f6469737075746546656500000000000000000000000000000000000000000000815250600a01905060405180910390208152602001908152602001600020546148bd565b60018360020160016101000a81548160ff0219169083151502179055506001151582600701600085600501600060405180807f74696d657374616d70000000000000000000000000000000000000000000000081525060090190506040518091039020815260200190815260200160002054815260200190815260200160002060009054906101000a900460ff16151514156116f857600082600601600085600501600060405180807f74696d657374616d700000000000000000000000000000000000000000000000815250600901905060405180910390208152602001908152602001600020548152602001908152602001600020819055505b6118ae565b6001816000018190555060018360020160006101000a81548160ff02191690831515021790555060008360020160016101000a81548160ff0219169083151502179055506117bb85338560020160039054906101000a900473ffffffffffffffffffffffffffffffffffffffff1688604801600060405180807f6469737075746546656500000000000000000000000000000000000000000000815250600a01905060405180910390208152602001908152602001600020546148bd565b6001151582600701600085600501600060405180807f74696d657374616d70000000000000000000000000000000000000000000000081525060090190506040518091039020815260200190815260200160002054815260200190815260200160002060009054906101000a900460ff16151514156118ad57600082600701600085600501600060405180807f74696d657374616d70000000000000000000000000000000000000000000000081525060090190506040518091039020815260200190815260200160002054815260200190815260200160002060006101000a81548160ff0219169083151502179055505b5b8260020160039054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16847f21459c2f5447ebcf83a7f0a238c32c71076faef0d12295e771c0cb1e1043473985600101548660030160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff168760020160019054906101000a900460ff16604051808481526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182151515158152602001935050505060405180910390a350611b86565b6064601485604801600060405180807f746f74616c5f737570706c790000000000000000000000000000000000000000815250600c0190506040518091039020815260200190815260200160002054028115156119f957fe5b0482600501600060405180807f71756f72756d000000000000000000000000000000000000000000000000000081525060060190506040518091039020815260200190815260200160002054111515611a5157600080fd5b8160040160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1684604701600060405180807f74656c6c6f72436f6e7472616374000000000000000000000000000000000000815250600e0190506040518091039020815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507fc2d1449eb0b6547aa426e09d9942a77fa4fc8cd3296305b3163e22452e0bcb8d8260040160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390a15b50505050565b600184604f0160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000154141515611bdf57600080fd5b83604801600060405180807f63757272656e74526571756573744964000000000000000000000000000000008152506010019050604051809103902081526020019081526020016000205482141515611c3757600080fd5b60006002600386600001543387604051602001808481526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166c0100000000000000000000000002815260140182805190602001908083835b602083101515611cc35780518252602082019150602081019050602083039250611c9e565b6001836020036101000a038019825116818451168082178552505050505050905001935050505060405160208183030381529060405280519060200120604051602001808281526020019150506040516020818303038152906040526040518082805190602001908083835b602083101515611d545780518252602082019150602081019050602083039250611d2f565b6001836020036101000a038019825116818451168082178552505050505050905001915050602060405180830381855afa158015611d96573d6000803e3d6000fd5b505050604051516c010000000000000000000000000260405160200180826bffffffffffffffffffffffff19166bffffffffffffffffffffffff191681526014019150506040516020818303038152906040526040518082805190602001908083835b602083101515611e1e5780518252602082019150602081019050602083039250611df9565b6001836020036101000a038019825116818451168082178552505050505050905001915050602060405180830381855afa158015611e60573d6000803e3d6000fd5b5050506040513d6020811015611e7557600080fd5b81019080805190602001909291905050509050600085604801600060405180807f646966666963756c747900000000000000000000000000000000000000000000815250600a01905060405180910390208152602001908152602001600020548260019004811515611ee357fe5b06141515611ef057600080fd5b600015158560490160008760000154815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff161515141515611f6657600080fd5b8185603d0186604801600060405180807f736c6f7450726f67726573730000000000000000000000000000000000000000815250600c0190506040518091039020815260200190815260200160002054600581101515611fc257fe5b60020201600001819055503385603d0186604801600060405180807f736c6f7450726f67726573730000000000000000000000000000000000000000815250600c019050604051809103902081526020019081526020016000205460058110151561202957fe5b6002020160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555084604801600060405180807f736c6f7450726f67726573730000000000000000000000000000000000000000815250600c019050604051809103902081526020019081526020016000206000815480929190600101919050555060018560490160008760000154815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908315150217905550823373ffffffffffffffffffffffffffffffffffffffff167fe6d63a2aee0aaed2ab49702313ce54114f2145af219d7db30d6624af9e6dffc4868589600001546040518080602001848152602001838152602001828103825285818151815260200191508051906020019080838360005b838110156121c35780820151818401526020810190506121a8565b50505050905090810190601f1680156121f05780820380516001836020036101000a031916815260200191505b5094505050505060405180910390a3600585604801600060405180807f736c6f7450726f67726573730000000000000000000000000000000000000000815250600c01905060405180910390208152602001908152602001600020541415613d6257600085605001600085815260200190815260200160002090506000603c87604801600060405180807f74696d654f664c6173744e657756616c7565000000000000000000000000000081525060120190506040518091039020815260200190815260200160002054420388604801600060405180807f74696d6554617267657400000000000000000000000000000000000000000000815250600a01905060405180910390208152602001908152602001600020540381151561231157fe5b0587604801600060405180807f646966666963756c747900000000000000000000000000000000000000000000815250600a01905060405180910390208152602001908152602001600020540113156124a857603c86604801600060405180807f74696d654f664c6173744e657756616c7565000000000000000000000000000081525060120190506040518091039020815260200190815260200160002054420387604801600060405180807f74696d6554617267657400000000000000000000000000000000000000000000815250600a01905060405180910390208152602001908152602001600020540381151561240857fe5b0586604801600060405180807f646966666963756c747900000000000000000000000000000000000000000000815250600a01905060405180910390208152602001908152602001600020540186604801600060405180807f646966666963756c747900000000000000000000000000000000000000000000815250600a01905060405180910390208152602001908152602001600020819055506124f9565b600186604801600060405180807f646966666963756c747900000000000000000000000000000000000000000000815250600a01905060405180910390208152602001908152602001600020819055505b603c4281151561250557fe5b06420386604801600060405180807f74696d654f664c6173744e657756616c756500000000000000000000000000008152506012019050604051809103902081526020019081526020016000208190555061255e615c73565b86603d01600580602002604051908101604052809291906000905b8282101561260157838260020201604080519081016040529081600082015481526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152505081526020019060010190612579565b5050505090506000600190505b60058110156127a5576000828260058110151561262757fe5b60200201516000015190506000838360058110151561264257fe5b602002015160200151905060008390505b60008111801561267b5750846001820360058110151561266f57fe5b60200201516000015183105b1561272657846001820360058110151561269157fe5b60200201516000015185826005811015156126a857fe5b6020020151600001818152505084600182036005811015156126c657fe5b60200201516020015185826005811015156126dd57fe5b60200201516020019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff1681525050808060019003915050612653565b838110156127955782858260058110151561273d57fe5b6020020151600001818152505081858260058110151561275957fe5b60200201516020019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff16815250505b505050808060010191505061260e565b600090505b600581101561287357612866883084846005811015156127c657fe5b602002015160200151670de0b6b3a76400008c600401866005811015156127e957fe5b015460168e604801600060405180807f63757272656e74546f74616c54697073000000000000000000000000000000008152506010019050604051809103902081526020019081526020016000205481151561284157fe5b040281151561284c57fe5b048c6004018660058110151561285e57fe5b0154016148bd565b80806001019150506127aa565b857fc509d04e0782579ee59912139246ccbdf6c36c43abd90591d912017f3467dd1689604801600060405180807f74696d654f664c6173744e657756616c75650000000000000000000000000000815250601201905060405180910390208152602001908152602001600020548460026005811015156128ef57fe5b60200201516000015160168c604801600060405180807f63757272656e74546f74616c54697073000000000000000000000000000000008152506010019050604051809103902081526020019081526020016000205481151561294e57fe5b068c604801600060405180807f63757272656e74546f74616c546970730000000000000000000000000000000081525060100190506040518091039020815260200190815260200160002054038c600001546040518085815260200184815260200183815260200182815260200194505050505060405180910390a26064606e89604801600060405180807f6d696e696e675265776172640000000000000000000000000000000000000000815250600c019050604051809103902081526020019081526020016000205402811515612a2357fe5b04601689604801600060405180807f63757272656e74546f74616c546970730000000000000000000000000000000081525060100190506040518091039020815260200190815260200160002054811515612a7a57fe5b0689604801600060405180807f63757272656e74546f74616c546970730000000000000000000000000000000081525060100190506040518091039020815260200190815260200160002054030188604801600060405180807f746f74616c5f737570706c790000000000000000000000000000000000000000815250600c0190506040518091039020815260200190815260200160002060008282540192505081905550612bee88308a604701600060405180807f5f6f776e6572000000000000000000000000000000000000000000000000000081525060060190506040518091039020815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166064600a8d604801600060405180807f6d696e696e675265776172640000000000000000000000000000000000000000815250600c019050604051809103902081526020019081526020016000205402811515612be857fe5b046148bd565b816002600581101515612bfd57fe5b6020020151600001518360060160008a604801600060405180807f74696d654f664c6173744e657756616c75650000000000000000000000000000815250601201905060405180910390208152602001908152602001600020548152602001908152602001600020819055508260030188604801600060405180807f74696d654f664c6173744e657756616c7565000000000000000000000000000081525060120190506040518091039020815260200190815260200160002054908060018154018082558091505090600182039060005260206000200160009091929091909150555060a060405190810160405280836000600581101515612cfc57fe5b60200201516020015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001836001600581101515612d4557fe5b60200201516020015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001836002600581101515612d8e57fe5b60200201516020015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001836003600581101515612dd757fe5b60200201516020015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001836004600581101515612e2057fe5b60200201516020015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152508360080160008a604801600060405180807f74696d654f664c6173744e657756616c75650000000000000000000000000000815250601201905060405180910390208152602001908152602001600020548152602001908152602001600020906005612ec5929190615ca2565b5060a060405190810160405280836000600581101515612ee157fe5b6020020151600001518152602001836001600581101515612efe57fe5b6020020151600001518152602001836002600581101515612f1b57fe5b6020020151600001518152602001836003600581101515612f3857fe5b6020020151600001518152602001836004600581101515612f5557fe5b6020020151600001518152508360090160008a604801600060405180807f74696d654f664c6173744e657756616c75650000000000000000000000000000815250601201905060405180910390208152602001908152602001600020548152602001908152602001600020906005612fce929190615d1f565b50438360050160008a604801600060405180807f74696d654f664c6173744e657756616c756500000000000000000000000000008152506012019050604051809103902081526020019081526020016000205481526020019081526020016000208190555087604801600060405180807f6f6e4465636b5265717565737449640000000000000000000000000000000000815250600f019050604051809103902081526020019081526020016000205488604801600060405180807f63757272656e74526571756573744964000000000000000000000000000000008152506010019050604051809103902081526020019081526020016000208190555087604801600060405180807f6f6e4465636b546f74616c546970730000000000000000000000000000000000815250600f019050604051809103902081526020019081526020016000205488604801600060405180807f63757272656e74546f74616c5469707300000000000000000000000000000000815250601001905060405180910390208152602001908152602001600020819055508588604a0160008a604801600060405180807f74696d654f664c6173744e657756616c756500000000000000000000000000008152506012019050604051809103902081526020019081526020016000205481526020019081526020016000208190555087603c0188604801600060405180807f74696d654f664c6173744e657756616c75650000000000000000000000000000815250601201905060405180910390208152602001908152602001600020549080600181540180825580915050906001820390600052602060002001600090919290919091505550600088604801600060405180807f736c6f7450726f67726573730000000000000000000000000000000000000000815250600c01905060405180910390208152602001908152602001600020819055506000886009018960500160008b604801600060405180807f6f6e4465636b5265717565737449640000000000000000000000000000000000815250600f01905060405180910390208152602001908152602001600020548152602001908152602001600020600401600060405180807f7265717565737451506f736974696f6e000000000000000000000000000000008152506010019050604051809103902081526020019081526020016000205460338110151561334c57fe5b0181905550600088604b0160008a60500160008c604801600060405180807f6f6e4465636b5265717565737449640000000000000000000000000000000000815250600f01905060405180910390208152602001908152602001600020548152602001908152602001600020600401600060405180807f7265717565737451506f736974696f6e000000000000000000000000000000008152506010019050604051809103902081526020019081526020016000205481526020019081526020016000208190555060008860500160008a604801600060405180807f6f6e4465636b5265717565737449640000000000000000000000000000000000815250600f01905060405180910390208152602001908152602001600020548152602001908152602001600020600401600060405180807f7265717565737451506f736974696f6e000000000000000000000000000000008152506010019050604051809103902081526020019081526020016000208190555060008860500160008a604801600060405180807f6f6e4465636b5265717565737449640000000000000000000000000000000000815250600f01905060405180910390208152602001908152602001600020548152602001908152602001600020600401600060405180807f746f74616c54697000000000000000000000000000000000000000000000000081525060080190506040518091039020815260200190815260200160002081905550613578615d5f565b600089604801600060405180807f63757272656e7452657175657374496400000000000000000000000000000000815250601001905060405180910390208152602001908152602001600020541115613ca85761361389600901603380602002604051908101604052809291908260338015613609576020028201915b8154815260200190600101908083116135f5575b5050505050614a4f565b82600060028110151561362257fe5b6020020183600160028110151561363557fe5b602002018281525082815250505088604b01600082600160028110151561365857fe5b602002015181526020019081526020016000205489604801600060405180807f6f6e4465636b5265717565737449640000000000000000000000000000000000815250600f01905060405180910390208152602001908152602001600020819055508860500160008a604801600060405180807f6f6e4465636b5265717565737449640000000000000000000000000000000000815250600f0190506040518091039020815260200190815260200160002054815260200190815260200160002060020154896001018190555080600060028110151561373457fe5b602002015189604801600060405180807f6f6e4465636b546f74616c546970730000000000000000000000000000000000815250600f019050604051809103902081526020019081526020016000208190555087896000015460014303406040516020018084805190602001908083835b6020831015156137ca57805182526020820191506020810190506020830392506137a5565b6001836020036101000a038019825116818451168082178552505050505050905001838152602001828152602001935050505060405160208183030381529060405280519060200120896000018190555088604801600060405180807f63757272656e7452657175657374496400000000000000000000000000000000815250601001905060405180910390208152602001908152602001600020547f9e959738f09af22daede9ff9563f8edf3f5cec8e17ce60287c911c95fa767f428a600001548b604801600060405180807f646966666963756c747900000000000000000000000000000000000000000000815250600a01905060405180910390208152602001908152602001600020548c60500160008e604801600060405180807f63757272656e7452657175657374496400000000000000000000000000000000815250601001905060405180910390208152602001908152602001600020548152602001908152602001600020600401600060405180807f6772616e756c6172697479000000000000000000000000000000000000000000815250600b01905060405180910390208152602001908152602001600020548d60500160008f604801600060405180807f63757272656e74526571756573744964000000000000000000000000000000008152506010019050604051809103902081526020019081526020016000205481526020019081526020016000206000018e604801600060405180807f63757272656e74546f74616c5469707300000000000000000000000000000000815250601001905060405180910390208152602001908152602001600020546040518086815260200185815260200184815260200180602001838152602001828103825284818154600181600116156101000203166002900481526020019150805460018160011615610100020316600290048015613ace5780601f10613aa357610100808354040283529160200191613ace565b820191906000526020600020905b815481529060010190602001808311613ab157829003601f168201915b5050965050505050505060405180910390a288604801600060405180807f6f6e4465636b5265717565737449640000000000000000000000000000000000815250600f01905060405180910390208152602001908152602001600020547f5ab383fe3e28263c839564bc7545520a7dd34b78cbd7ab21b2da5d2fd027bf6c8a60500160008c604801600060405180807f6f6e4465636b5265717565737449640000000000000000000000000000000000815250600f019050604051809103902081526020019081526020016000205481526020019081526020016000206000018b600101548c604801600060405180807f6f6e4465636b546f74616c546970730000000000000000000000000000000000815250600f01905060405180910390208152602001908152602001600020546040518080602001848152602001838152602001828103825285818154600181600116156101000203166002900481526020019150805460018160011615610100020316600290048015613c935780601f10613c6857610100808354040283529160200191613c93565b820191906000526020600020905b815481529060010190602001808311613c7657829003601f168201915b505094505050505060405180910390a2613d5d565b600089604801600060405180807f6f6e4465636b5265717565737449640000000000000000000000000000000000815250600f0190506040518091039020815260200190815260200160002081905550600089604801600060405180807f6f6e4465636b546f74616c546970730000000000000000000000000000000000815250600f019050604051809103902081526020019081526020016000208190555060008960010181905550600089600001819055505b505050505b5050505050565b6000613d77843385856148bd565b600190509392505050565b600081604f0160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020905060006201518042811515613dd757fe5b064203905062093a808260010154820310158015613df9575060028260000154145b1515613e0457600080fd5b600082600001819055503373ffffffffffffffffffffffffffffffffffffffff167f4a7934670bd8304e7da22378be1368f7c4fef17c5aee81804beda8638fe428ec60405160405180910390a2505050565b600083604c01600084815260200190815260200160002090506000613ec6853384600501600060405180807f626c6f636b4e756d626572000000000000000000000000000000000000000000815250600b0190506040518091039020815260200190815260200160002054614abe565b9050600115158260060160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16151514151515613f2a57600080fd5b600081111515613f3957600080fd5b600385604f0160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000015414151515613f8d57600080fd5b60018260060160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908315150217905550600182600501600060405180807f6e756d6265724f66566f74657300000000000000000000000000000000000000815250600d01905060405180910390208152602001908152602001600020600082825401925050819055508082600501600060405180807f71756f72756d00000000000000000000000000000000000000000000000000008152506006019050604051809103902081526020019081526020016000206000828254019250508190555082156140b2578082600101540182600101819055506140c2565b8082600101540382600101819055505b3373ffffffffffffffffffffffffffffffffffffffff16847f86abfce99b7dd908bec0169288797f85049ec73cbe046ed9de818fab3a497ae085604051808215151515815260200191505060405180910390a35050505050565b81604701600060405180807f5f6f776e6572000000000000000000000000000000000000000000000000000081525060060190506040518091039020815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156141c057600080fd5b8073ffffffffffffffffffffffffffffffffffffffff1682604701600060405180807f5f6f776e6572000000000000000000000000000000000000000000000000000081525060060190506040518091039020815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a38082604701600060405180807f5f6f776e6572000000000000000000000000000000000000000000000000000081525060060190506040518091039020815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050565b60008211151561432057600080fd5b670de0b6b3a7640000821115151561433757600080fd5b60008314156148a957606085905060608590506000825111151561435a57600080fd5b6040815110151561436a57600080fd5b600082856040516020018083805190602001908083835b6020831015156143a65780518252602082019150602081019050602083039250614381565b6001836020036101000a0380198251168184511680821785525050505050509050018281526020019250505060405160208183030381529060405280519060200120905060008960510160008381526020019081526020016000205414156148805788604801600060405180807f72657175657374436f756e740000000000000000000000000000000000000000815250600c019050604051809103902081526020019081526020016000206000815480929190600101919050555088604801600060405180807f72657175657374436f756e740000000000000000000000000000000000000000815250600c0190506040518091039020815260200190815260200160002054955060806040519081016040528084815260200183815260200182815260200160006040519080825280602002602001820160405280156144fd5781602001602082028038833980820191505090505b508152508960500160008881526020019081526020016000206000820151816000019080519060200190614532929190615d81565b50602082015181600101908051906020019061454f929190615d81565b50604082015181600201556060820151816003019080519060200190614576929190615e01565b5090505084896050016000888152602001908152602001600020600401600060405180807f6772616e756c6172697479000000000000000000000000000000000000000000815250600b01905060405180910390208152602001908152602001600020819055506000896050016000888152602001908152602001600020600401600060405180807f7265717565737451506f736974696f6e00000000000000000000000000000000815250601001905060405180910390208152602001908152602001600020819055506000896050016000888152602001908152602001600020600401600060405180807f746f74616c54697000000000000000000000000000000000000000000000000081525060080190506040518091039020815260200190815260200160002081905550858960510160008381526020019081526020016000208190555060008411156146d5576146d4893330876148bd565b5b6146e28987866000614bfd565b853373ffffffffffffffffffffffffffffffffffffffff167f6d7f869757848b19c8c2456e95cd98885bc6bed062fda4077bb07985e2f76cc98b60500160008a81526020019081526020016000206000018c60500160008b815260200190815260200160002060010189896040518080602001806020018581526020018481526020018381038352878181546001816001161561010002031660029004815260200191508054600181600116156101000203166002900480156147e65780601f106147bb576101008083540402835291602001916147e6565b820191906000526020600020905b8154815290600101906020018083116147c957829003601f168201915b50508381038252868181546001816001161561010002031660029004815260200191508054600181600116156101000203166002900480156148695780601f1061483e57610100808354040283529160200191614869565b820191906000526020600020905b81548152906001019060200180831161484c57829003601f168201915b5050965050505050505060405180910390a36148a1565b6148a0898a60510160008481526020019081526020016000205486615626565b5b5050506148b5565b6148b4868483615626565b5b505050505050565b6000811115156148cc57600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415151561490857600080fd5b614913848483615712565b151561491e57600080fd5b600061492b858543614abe565b905061497985604d0160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002083830361582a565b614984858443614abe565b9050808282011015151561499757600080fd5b6149e385604d0160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002083830161582a565b8273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040518082815260200191505060405180910390a35050505050565b600080826001603381101515614a6157fe5b602002015191506000600190505b6033811015614ab857828482603381101515614a8757fe5b60200201511115614aab578381603381101515614aa057fe5b602002015192508091505b8080600101915050614a6f565b50915091565b60008084604d0160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805490501480614b9b57508184604d0160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000815481101515614b5d57fe5b9060005260206000200160000160009054906101000a90046fffffffffffffffffffffffffffffffff166fffffffffffffffffffffffffffffffff16115b15614ba95760009050614bf6565b614bf384604d0160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208361599f565b90505b9392505050565b600084605001600085815260200190815260200160002090506000831115614ccb57614c7c8382600401600060405180807f746f74616c54697000000000000000000000000000000000000000000000000081525060080190506040518091039020815260200190815260200160002054615bae90919063ffffffff16565b81600401600060405180807f746f74616c546970000000000000000000000000000000000000000000000000815250600801905060405180910390208152602001908152602001600020819055505b600081600401600060405180807f746f74616c546970000000000000000000000000000000000000000000000000815250600801905060405180910390208152602001908152602001600020549050600086604801600060405180807f63757272656e745265717565737449640000000000000000000000000000000081525060100190506040518091039020815260200190815260200160002054141561516c57600082600401600060405180807f746f74616c546970000000000000000000000000000000000000000000000000815250600801905060405180910390208152602001908152602001600020819055508486604801600060405180807f63757272656e7452657175657374496400000000000000000000000000000000815250601001905060405180910390208152602001908152602001600020819055508086604801600060405180807f63757272656e74546f74616c546970730000000000000000000000000000000081525060100190506040518091039020815260200190815260200160002081905550808660000154600143034060405160200180848152602001838152602001828152602001935050505060405160208183030381529060405280519060200120866000018190555085604801600060405180807f63757272656e7452657175657374496400000000000000000000000000000000815250601001905060405180910390208152602001908152602001600020547f9e959738f09af22daede9ff9563f8edf3f5cec8e17ce60287c911c95fa767f42876000015488604801600060405180807f646966666963756c747900000000000000000000000000000000000000000000815250600a01905060405180910390208152602001908152602001600020548960500160008b604801600060405180807f63757272656e7452657175657374496400000000000000000000000000000000815250601001905060405180910390208152602001908152602001600020548152602001908152602001600020600401600060405180807f6772616e756c6172697479000000000000000000000000000000000000000000815250600b01905060405180910390208152602001908152602001600020548a60500160008c604801600060405180807f63757272656e74526571756573744964000000000000000000000000000000008152506010019050604051809103902081526020019081526020016000205481526020019081526020016000206000018b604801600060405180807f63757272656e74546f74616c54697073000000000000000000000000000000008152506010019050604051809103902081526020019081526020016000205460405180868152602001858152602001848152602001806020018381526020018281038252848181546001816001161561010002031660029004815260200191508054600181600116156101000203166002900480156151555780601f1061512a57610100808354040283529160200191615155565b820191906000526020600020905b81548152906001019060200180831161513857829003601f168201915b5050965050505050505060405180910390a261561e565b85604801600060405180807f6f6e4465636b5265717565737449640000000000000000000000000000000000815250600f0190506040518091039020815260200190815260200160002054851415615212578086604801600060405180807f6f6e4465636b546f74616c546970730000000000000000000000000000000000815250600f0190506040518091039020815260200190815260200160002081905550615447565b85604801600060405180807f6f6e4465636b546f74616c546970730000000000000000000000000000000000815250600f01905060405180910390208152602001908152602001600020548111806152c45750600086604801600060405180807f6f6e4465636b5265717565737449640000000000000000000000000000000000815250600f01905060405180910390208152602001908152602001600020541480156152c3575060001515831515145b5b15615446578486604801600060405180807f6f6e4465636b5265717565737449640000000000000000000000000000000000815250600f0190506040518091039020815260200190815260200160002081905550816002015486600101819055508086604801600060405180807f6f6e4465636b546f74616c546970730000000000000000000000000000000000815250600f0190506040518091039020815260200190815260200160002081905550847f5ab383fe3e28263c839564bc7545520a7dd34b78cbd7ab21b2da5d2fd027bf6c8360000188600101548460405180806020018481526020018381526020018281038252858181546001816001161561010002031660029004815260200191508054600181600116156101000203166002900480156154355780601f1061540a57610100808354040283529160200191615435565b820191906000526020600020905b81548152906001019060200180831161541857829003601f168201915b505094505050505060405180910390a25b5b600082600401600060405180807f7265717565737451506f736974696f6e00000000000000000000000000000000815250601001905060405180910390208152602001908152602001600020541480156154a5575060001515831515145b15615598576000806154f5886009016033806020026040519081016040528092919082603380156154eb576020028201915b8154815260200190600101908083116154d7575b5050505050615bcc565b80925081935050508183118061550b5750600082145b156155915782886009018260338110151561552257fe5b01819055508688604b016000838152602001908152602001600020819055508084600401600060405180807f7265717565737451506f736974696f6e00000000000000000000000000000000815250601001905060405180910390208152602001908152602001600020819055505b505061561d565b6000841180156155ac575060001515831515145b1561561c57838660090183600401600060405180807f7265717565737451506f736974696f6e000000000000000000000000000000008152506010019050604051809103902081526020019081526020016000205460338110151561560d57fe5b01600082825401925050819055505b5b5b505050505050565b60008211151561563557600080fd5b600081111561564b5761564a833330846148bd565b5b6156588383836000614bfd565b813373ffffffffffffffffffffffffffffffffffffffff167fd32134405b68f6f7220f9c38ae310df1b648d16188006768d45be2f7c24e882083866050016000878152602001908152602001600020600401600060405180807f746f74616c54697000000000000000000000000000000000000000000000000081525060080190506040518091039020815260200190815260200160002054604051808381526020018281526020019250505060405180910390a3505050565b60008084604f0160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000015411156157ef5760006157da836157cc87604801600060405180807f7374616b65416d6f756e74000000000000000000000000000000000000000000815250600b01905060405180910390208152602001908152602001600020546157be8989615c45565b615c5a90919063ffffffff16565b615c5a90919063ffffffff16565b1015156157ea5760019050615823565b61581e565b600061580d836157ff8787615c45565b615c5a90919063ffffffff16565b10151561581d5760019050615823565b5b600090505b9392505050565b60008280549050148061588c57504382600184805490500381548110151561584e57fe5b9060005260206000200160000160009054906101000a90046fffffffffffffffffffffffffffffffff166fffffffffffffffffffffffffffffffff16105b1561593b576000828380548091906001016158a79190615e4e565b8154811015156158b357fe5b906000526020600020019050438160000160006101000a8154816fffffffffffffffffffffffffffffffff02191690836fffffffffffffffffffffffffffffffff160217905550818160000160106101000a8154816fffffffffffffffffffffffffffffffff02191690836fffffffffffffffffffffffffffffffff1602179055505061599b565b600082600184805490500381548110151561595257fe5b906000526020600020019050818160000160106101000a8154816fffffffffffffffffffffffffffffffff02191690836fffffffffffffffffffffffffffffffff160217905550505b5050565b600080838054905014156159b65760009050615ba8565b8260018480549050038154811015156159cb57fe5b9060005260206000200160000160009054906101000a90046fffffffffffffffffffffffffffffffff166fffffffffffffffffffffffffffffffff1682101515615a6757826001848054905003815481101515615a2457fe5b9060005260206000200160000160109054906101000a90046fffffffffffffffffffffffffffffffff166fffffffffffffffffffffffffffffffff169050615ba8565b826000815481101515615a7657fe5b9060005260206000200160000160009054906101000a90046fffffffffffffffffffffffffffffffff166fffffffffffffffffffffffffffffffff16821015615ac25760009050615ba8565b60008090506000600185805490500390505b81811115615b595760006002600184840101811515615aef57fe5b049050848682815481101515615b0157fe5b9060005260206000200160000160009054906101000a90046fffffffffffffffffffffffffffffffff166fffffffffffffffffffffffffffffffff16111515615b4c57809250615b53565b6001810391505b50615ad4565b8482815481101515615b6757fe5b9060005260206000200160000160109054906101000a90046fffffffffffffffffffffffffffffffff166fffffffffffffffffffffffffffffffff16925050505b92915050565b6000808284019050838110151515615bc257fe5b8091505092915050565b600080600160330390508281603381101515615be457fe5b602002015191506000600160330390505b6000811115615c3f57828482603381101515615c0d57fe5b60200201511015615c31578381603381101515615c2657fe5b602002015192508091505b808060019003915050615bf5565b50915091565b6000615c52838343614abe565b905092915050565b6000828211151515615c6857fe5b818303905092915050565b610140604051908101604052806005905b615c8c615e7a565b815260200190600190039081615c845790505090565b8260058101928215615d0e579160200282015b82811115615d0d5782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555091602001919060010190615cb5565b5b509050615d1b9190615eaa565b5090565b8260058101928215615d4e579160200282015b82811115615d4d578251825591602001919060010190615d32565b5b509050615d5b9190615eed565b5090565b6040805190810160405280600290602082028038833980820191505090505090565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10615dc257805160ff1916838001178555615df0565b82800160010185558215615df0579182015b82811115615def578251825591602001919060010190615dd4565b5b509050615dfd9190615eed565b5090565b828054828255906000526020600020908101928215615e3d579160200282015b82811115615e3c578251825591602001919060010190615e21565b5b509050615e4a9190615eed565b5090565b815481835581811115615e7557818360005260206000209182019101615e749190615f12565b5b505050565b604080519081016040528060008152602001600073ffffffffffffffffffffffffffffffffffffffff1681525090565b615eea91905b80821115615ee657600081816101000a81549073ffffffffffffffffffffffffffffffffffffffff021916905550600101615eb0565b5090565b90565b615f0f91905b80821115615f0b576000816000905550600101615ef3565b5090565b90565b615f7491905b80821115615f7057600080820160006101000a8154906fffffffffffffffffffffffffffffffff02191690556000820160106101000a8154906fffffffffffffffffffffffffffffffff021916905550600101615f18565b5090565b9056fea165627a7a7230582025bbe6d3bc746092b391c3fa45a782b3714de299bd93042acf60cd478612b9030029",
  "sourceMap": "351:5969:2:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;351:5969:2;;;;;;;",
  "deployedSourceMap": "351:5969:2:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1306:129;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1306:129:2;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1306:129:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1519:71;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1519:71:2;;;;;;5355:153;;8:9:-1;5:2;;;30:1;27;20:12;5:2;5355:153:2;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;5355:153:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2346:119;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2346:119:2;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2346:119:2;;;;;;;;;;;;;;;;;;;;;;3984:91;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3984:91:2;;;;;;4169:92;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4169:92:2;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;4169:92:2;;;;;;;;;;;;;;;;;;;;4510:162;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4510:162:2;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;4510:162:2;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;4510:162:2;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;4510:162:2;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;4510:162:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2743:100;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2743:100:2;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2743:100:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;977:89;;8:9:-1;5:2;;;30:1;27;20:12;5:2;977:89:2;;;;;;2060:153;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2060:153:2;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2060:153:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4886:124;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4886:124:2;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;4886:124:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;630:113;;8:9:-1;5:2;;;30:1;27;20:12;5:2;630:113:2;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;630:113:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6244:73;;8:9:-1;5:2;;;30:1;27;20:12;5:2;6244:73:2;;;;;;5997:120;;8:9:-1;5:2;;;30:1;27;20:12;5:2;5997:120:2;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;5997:120:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5678:115;;8:9:-1;5:2;;;30:1;27;20:12;5:2;5678:115:2;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;5678:115:2;;;;;;;;;;;;;;;;;;;;;;3526:209;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3526:209:2;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;3526:209:2;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;3526:209:2;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;3526:209:2;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;3526:209:2;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;3526:209:2;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;3526:209:2;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;3526:209:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1306:129;1373:4;1396:6;:14;;;;1411:8;1420:7;1396:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1396:32:2;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1396:32:2;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1396:32:2;;;;;;;;;;;;;;;;1389:39;;1306:129;;;;:::o;1519:71::-;1562:6;:19;;;;:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1562:21:2;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1562:21:2;;;;1519:71::o;5355:153::-;5440:4;5463:38;5483:5;5489:3;5493:7;5463:6;:19;;:38;;;;;;:::i;:::-;5456:45;;5355:153;;;;;:::o;2346:119::-;2417:41;2436:21;2417:6;:18;;:41;;;;:::i;:::-;2346:119;:::o;3984:91::-;4037:31;:6;:29;:31::i;:::-;3984:91::o;4169:92::-;4225:29;4243:10;4225:6;:17;;:29;;;;:::i;:::-;4169:92;:::o;4510:162::-;4612:53;4640:6;;4612:53;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;4612:53:2;;;;;;4647:10;4658:6;4612;:27;;:53;;;;;;:::i;:::-;4510:162;;;;:::o;2743:100::-;2806:6;:13;;;;2820:10;2831:4;2806:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2806:30:2;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2806:30:2;;;;2743:100;;:::o;977:89::-;1029:6;:28;;;;:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1029:30:2;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1029:30:2;;;;977:89::o;2060:153::-;2152:6;:19;;;;2172:10;2183;2194:11;2152:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2152:54:2;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2152:54:2;;;;2060:153;;;:::o;4886:124::-;4952:4;4975:28;4991:3;4995:7;4975:6;:15;;:28;;;;;:::i;:::-;4968:35;;4886:124;;;;:::o;630:113::-;700:6;:18;;;;719:8;728:7;700:36;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;700:36:2;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;700:36:2;;;;630:113;;:::o;6244:73::-;6288:22;:6;:20;:22::i;:::-;6244:73::o;5997:120::-;6070:40;6082:10;6093:16;6070:6;:11;;:40;;;;;:::i;:::-;5997:120;;:::o;5678:115::-;5751:35;5776:9;5751:6;:24;;:35;;;;:::i;:::-;5678:115;:::o;3526:209::-;3662:66;3681:7;;3662:66;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;3662:66:2;;;;;;3689:9;;3662:66;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;3662:66:2;;;;;;3699:10;3710:12;3723:4;3662:6;:18;;:66;;;;;;;;:::i;:::-;3526:209;;;;;;;:::o;21904:320:9:-;22023:12;22090:7;22055:4;:12;;:19;22068:5;22055:19;;;;;;;;;;;;;;;:31;22075:10;22055:31;;;;;;;;;;;;;;;;:42;;22047:51;;;;;;;;22143:7;22108:4;:12;;:19;22121:5;22108:19;;;;;;;;;;;;;;;:31;22128:10;22108:31;;;;;;;;;;;;;;;;:42;;;;;;;;;;;22160:36;22171:4;22176:5;22183:3;22188:7;22160:10;:36::i;:::-;22213:4;22206:11;;21904:320;;;;;;:::o;22356:1150::-;22461:13;22504:21;22487:39;;;;;;;;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;22487:39:9;;;22477:50;;;;;;22461:66;;22583:1;22545:4;:27;;:34;22573:5;22545:34;;;;;;;;;;;;:39;22537:48;;;;;;;;22680:81;22691:4;22696:10;22715:4;22722;:13;;:38;22736:23;;;;;;;;;;;;;;;;;;;22722:38;;;;;;;;;;;;22680:10;:81::i;:::-;22793:4;:13;;:40;22807:25;;;;;;;;;;;;;;;;;;;22793:40;;;;;;;;;;;;:42;;;;;;;;;;;;;22845:14;22862:4;:13;;:40;22876:25;;;;;;;;;;;;;;;;;;;22862:40;;;;;;;;;;;;22845:57;;22949:9;22912:4;:27;;:34;22940:5;22912:34;;;;;;;;;;;:46;;;;22999:304;;;;;;;;;23027:5;22999:304;;;;23287:1;22999:304;;;;23223:5;22999:304;;;;;;23261:5;22999:304;;;;;;23058:4;22999:304;;;;;;23091:10;22999:304;;;;;;23132:10;22999:304;;;;;;23178:21;22999:304;;;;;22968:4;:17;;:28;22986:9;22968:28;;;;;;;;;;;:335;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23387:12;23314:4;:17;;:28;23332:9;23314:28;;;;;;;;;;;:44;;:70;23359:24;;;;;;;;;;;;;;;;;;;23314:70;;;;;;;;;;;:85;;;;23493:6;23487:3;:12;23409:4;:17;;:28;23427:9;23409:28;;;;;;;;;;;:44;;:75;23454:29;;;;;;;;;;;;;;;;;;;23409:75;;;;;;;;;;;:90;;;;22356:1150;;;;:::o;27798:689::-;27883:24;27910:4;:18;;:30;27929:10;27910:30;;;;;;;;;;;;;;;27883:57;;28025:1;28001:6;:20;;;:25;27993:34;;;;;;;;28125:1;28102:6;:20;;:24;;;;28335:5;28329:3;:11;;;;;;;;28323:3;:18;28304:6;:16;;:37;;;;28429:1;28386:4;:13;;:39;28400:24;;;;;;;;;;;;;;;;;;;28386:39;;;;;;;;;;;;:44;;;;;;;;;;;28469:10;28446:34;;;;;;;;;;;;27798:689;;:::o;28581:3816::-;28671:20;28694:4;:17;;:29;28712:10;28694:29;;;;;;;;;;;28671:52;;28733:24;28760:4;:19;;:65;28780:4;:20;;:44;28801:22;;;;;;;;;;;;;;;;;;;28780:44;;;;;;;;;;;;28760:65;;;;;;;;;;;28733:92;;28921:5;28904:22;;:4;:13;;;;;;;;;;;;:22;;;28896:31;;;;;;;;29001:4;:20;;:51;29022:29;;;;;;;;;;;;;;;;;;;29001:51;;;;;;;;;;;;28995:3;:57;28987:66;;;;;;;;29134:5;29116:23;;:4;:15;;;;;;;;;;;;:23;;;29112:3279;;;29150:24;29177:4;:18;;:38;29196:4;:18;;;;;;;;;;;;29177:38;;;;;;;;;;;;;;;29150:65;;29441:1;29428:4;:10;;;:14;29424:2316;;;29640:1;29617:6;:20;;:24;;;;29690:5;29684:3;:11;;;;;;;;29678:3;:18;29659:6;:16;;:37;;;;29800:4;:13;;:39;29814:24;;;;;;;;;;;;;;;;;;;29800:39;;;;;;;;;;;;:41;;;;;;;;;;;;;;29951:96;29962:4;29967;:18;;;;;;;;;;;;29986:4;:19;;;;;;;;;;;;30007:4;:13;;:39;30021:24;;;;;;;;;;;;;;;;;;;30007:39;;;;;;;;;;;;29951:10;:96::i;:::-;30146:87;30157:4;30162:10;30173:4;:19;;;;;;;;;;;;30194:4;:13;;:38;30208:23;;;;;;;;;;;;;;;;;;;30194:38;;;;;;;;;;;;30146:10;:87::i;:::-;30348:4;30323;:22;;;:29;;;;;;;;;;;;;;;;;;30605:4;30537:72;;:8;:18;;:64;30556:4;:20;;:44;30577:22;;;;;;;;;;;;;;;;;;;30556:44;;;;;;;;;;;;30537:64;;;;;;;;;;;;;;;;;;;;;:72;;;30534:187;;;30701:1;30632:8;:20;;:66;30653:4;:20;;:44;30674:22;;;;;;;;;;;;;;;;;;;30653:44;;;;;;;;;;;;30632:66;;;;;;;;;;;:70;;;;30534:187;29424:2316;;;31079:1;31056:6;:20;;:24;;;;31171:4;31155;:13;;;:20;;;;;;;;;;;;;;;;;;31338:5;31313:4;:22;;;:30;;;;;;;;;;;;;;;;;;31433:86;31444:4;31449:10;31460:4;:18;;;;;;;;;;;;31480:4;:13;;:38;31494:23;;;;;;;;;;;;;;;;;;;31480:38;;;;;;;;;;;;31433:10;:86::i;:::-;31608:4;31540:72;;:8;:18;;:64;31559:4;:20;;:44;31580:22;;;;;;;;;;;;;;;;;;;31559:44;;;;;;;;;;;;31540:64;;;;;;;;;;;;;;;;;;;;;:72;;;31537:189;;;31702:5;31635:8;:18;;:64;31654:4;:20;;:44;31675:22;;;;;;;;;;;;;;;;;;;31654:44;;;;;;;;;;;;31635:64;;;;;;;;;;;;:72;;;;;;;;;;;;;;;;;;31537:189;29424:2316;31796:4;:18;;;;;;;;;;;;31755:103;;31774:10;31755:103;31785:4;:10;;;31815:4;:19;;;;;;;;;;;;31835:4;:22;;;;;;;;;;;;31755:103;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;29112:3279;;;;32228:3;32223:2;32180:4;:13;;:40;32194:25;;;;;;;;;;;;;;;;;;;32180:40;;;;;;;;;;;;:45;:51;;;;;;;;32134:4;:20;;:41;32155:19;;;;;;;;;;;;;;;;;;;32134:41;;;;;;;;;;;;:98;32126:107;;;;;;;;32295:4;:24;;;;;;;;;;;;32247:4;:16;;:45;32264:27;;;;;;;;;;;;;;;;;;;32247:45;;;;;;;;;;;;:72;;;;;;;;;;;;;;;;;;32338:42;32355:4;:24;;;;;;;;;;;;32338:42;;;;;;;;;;;;;;;;;;;;;;29112:3279;28581:3816;;;;:::o;32646:9478::-;32868:1;32820:4;:18;;:30;32839:10;32820:30;;;;;;;;;;;;;;;:44;;;:49;32812:58;;;;;;;;32902:4;:13;;:44;32916:29;;;;;;;;;;;;;;;;;;;32902:44;;;;;;;;;;;;32888:10;:58;32880:67;;;;;;;;33043:9;33055:123;33079:97;33133:4;:21;;;33155:10;33166:6;33116:57;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;51:19;36:153;;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;33116:57:9;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;33116:57:9;;;33106:68;;;;;;33089:86;;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;33089:86:9;;;33079:97;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;51:19;36:153;;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;33079:97:9;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;33079:97:9;;;;;;;;33062:115;;;;;;;;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;33062:115:9;;;33055:123;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;51:19;36:153;;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;33055:123:9;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;33055:123:9;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;33055:123:9;;;;;;;;;;;;;;;;33043:135;;33248:1;33206:4;:13;;:38;33220:23;;;;;;;;;;;;;;;;;;;33206:38;;;;;;;;;;;;33201:1;33196:7;;;:48;;;;;;;;:53;33188:62;;;;;;;;33407:5;33346:66;;:4;:22;;:45;33369:4;:21;;;33346:45;;;;;;;;;;;:57;33392:10;33346:57;;;;;;;;;;;;;;;;;;;;;;;;;:66;;;33338:75;;;;;;;;33546:6;33477:4;:18;;33496:4;:13;;:40;33510:25;;;;;;;;;;;;;;;;;;;33496:40;;;;;;;;;;;;33477:60;;;;;;;;;;;;:66;;:75;;;;33631:10;33562:4;:18;;33581:4;:13;;:40;33595:25;;;;;;;;;;;;;;;;;;;33581:40;;;;;;;;;;;;33562:60;;;;;;;;;;;;:66;;;:79;;;;;;;;;;;;;;;;;;33759:4;:13;;:40;33773:25;;;;;;;;;;;;;;;;;;;33759:40;;;;;;;;;;;;:42;;;;;;;;;;;;;33983:4;33923;:22;;:45;33946:4;:21;;;33923:45;;;;;;;;;;;:57;33969:10;33923:57;;;;;;;;;;;;;;;;:64;;;;;;;;;;;;;;;;;;34036:10;34018;34003:73;;;34029:6;34047;34054:4;:21;;;34003:73;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;34003:73:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;34253:1;34209:4;:13;;:40;34223:25;;;;;;;;;;;;;;;;;;;34209:40;;;;;;;;;;;;:45;34206:7912;;;34271:24;34298:4;:19;;:31;34318:10;34298:31;;;;;;;;;;;34271:58;;34815:1;34810:2;34761:4;:13;;:46;34775:31;;;;;;;;;;;;;;;;;;;34761:46;;;;;;;;;;;;34755:3;:52;34709:4;:13;;:38;34723:23;;;;;;;;;;;;;;;;;;;34709:38;;;;;;;;;;;;34705:103;34704:108;;;;;;;;34662:4;:13;;:38;34676:23;;;;;;;;;;;;;;;;;;;34662:38;;;;;;;;;;;;34658:154;:158;34655:488;;;35033:2;34984:4;:13;;:46;34998:31;;;;;;;;;;;;;;;;;;;34984:46;;;;;;;;;;;;34978:3;:52;34932:4;:13;;:38;34946:23;;;;;;;;;;;;;;;;;;;34932:38;;;;;;;;;;;;34928:103;34927:108;;;;;;;;34885:4;:13;;:38;34899:23;;;;;;;;;;;;;;;;;;;34885:38;;;;;;;;;;;;34881:154;34835:4;:13;;:38;34849:23;;;;;;;;;;;;;;;;;;;34835:38;;;;;;;;;;;:201;;;;34655:488;;;35127:1;35086:4;:13;;:38;35100:23;;;;;;;;;;;;;;;;;;;35086:38;;;;;;;;;;;:42;;;;34655:488;35295:9;35289:3;:15;;;;;;;;35282:3;:23;35233:4;:13;;:46;35247:31;;;;;;;;;;;;;;;;;;;35233:46;;;;;;;;;;;:72;;;;35428:19;;:::i;:::-;35450:4;:18;;35428:40;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;35482:6;35511:1;35507:5;;35502:461;35516:1;35513;:4;35502:461;;;35540:9;35552:1;35554;35552:4;;;;;;;;;;;;;:10;;;35540:22;;35580:13;35596:1;35598;35596:4;;;;;;;;;;;;;:10;;;35580:26;;35624:6;35633:1;35624:10;;35652:176;35662:1;35658;:5;:28;;;;;35674:1;35678;35676;:3;35674:6;;;;;;;;;;;;;:12;;;35667:4;:19;35658:28;35652:176;;;35722:1;35726;35724;:3;35722:6;;;;;;;;;;;;;:12;;;35709:1;35711;35709:4;;;;;;;;;;;;;:10;;:25;;;;;35769:1;35773;35771;:3;35769:6;;;;;;;;;;;;;:12;;;35756:1;35758;35756:4;;;;;;;;;;;;;:10;;:25;;;;;;;;;;;35806:3;;;;;;;;35652:176;;;35850:1;35848;:3;35845:104;;;35887:4;35874:1;35876;35874:4;;;;;;;;;;;;;:10;;:17;;;;;35925:5;35913:1;35915;35913:4;;;;;;;;;;;;;:10;;:17;;;;;;;;;;;35845:104;35502:461;;;35518:3;;;;;;;35502:461;;;36064:1;36060:5;;36055:221;36069:1;36066;:4;36055:221;;;36093:168;36104:4;36117;36123:1;36125;36123:4;;;;;;;;;;;;;:10;;;36256:4;36220;:30;;36251:1;36220:33;;;;;;;;;;;36215:2;36170:4;:13;;:44;36184:29;;;;;;;;;;;;;;;;;;;36170:44;;;;;;;;;;;;:47;;;;;;;;:83;:90;;;;;;;;36134:4;:30;;36165:1;36134:33;;;;;;;;;;;:126;36093:10;:168::i;:::-;36071:3;;;;;;;36055:221;;;36303:10;36294:195;36314:4;:13;;:46;36328:31;;;;;;;;;;;;;;;;;;;36314:46;;;;;;;;;;;;36361:1;36363;36361:4;;;;;;;;;;;;;:10;;;36464:2;36419:4;:13;;:44;36433:29;;;;;;;;;;;;;;;;;;;36419:44;;;;;;;;;;;;:47;;;;;;;;36372:4;:13;;:44;36386:29;;;;;;;;;;;;;;;;;;;36372:44;;;;;;;;;;;;:94;36467:4;:21;;;36294:195;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;36740:3;36736;36695:4;:13;;:40;36709:25;;;;;;;;;;;;;;;;;;;36695:40;;;;;;;;;;;;:44;:48;;;;;;;;36690:2;36645:4;:13;;:44;36659:29;;;;;;;;;;;;;;;;;;;36645:44;;;;;;;;;;;;:47;;;;;;;;36598:4;:13;;:44;36612:29;;;;;;;;;;;;;;;;;;;36598:44;;;;;;;;;;;;:94;:145;36554:4;:13;;:40;36568:25;;;;;;;;;;;;;;;;;;;36554:40;;;;;;;;;;;;:189;;;;;;;;;;;36825:122;36836:4;36849;36855;:16;;:37;36872:19;;;;;;;;;;;;;;;;;;;36855:37;;;;;;;;;;;;;;;;;;;;;36942:3;36937:2;36894:4;:13;;:40;36908:25;;;;;;;;;;;;;;;;;;;36894:40;;;;;;;;;;;;:45;:51;;;;;;;;36825:10;:122::i;:::-;37190:1;37192;37190:4;;;;;;;;;;;;;:10;;;37119:8;:20;;:68;37140:4;:13;;:46;37154:31;;;;;;;;;;;;;;;;;;;37140:46;;;;;;;;;;;;37119:68;;;;;;;;;;;:81;;;;37214:8;:26;;37246:4;:13;;:46;37260:31;;;;;;;;;;;;;;;;;;;37246:46;;;;;;;;;;;;37214:79;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;37214:79:9;;;;;;;;;;;;;;;;;;;;;;37351:129;;;;;;;;;37425:1;37427;37425:4;;;;;;;;;;;;;:10;;;37351:129;;;;;;;;37436:1;37438;37436:4;;;;;;;;;;;;;:10;;;37351:129;;;;;;;;37447:1;37449;37447:4;;;;;;;;;;;;;:10;;;37351:129;;;;;;;;37458:1;37460;37458:4;;;;;;;;;;;;;:10;;;37351:129;;;;;;;;37469:1;37471;37469:4;;;;;;;;;;;;;:10;;;37351:129;;;;;;;:8;:22;;:70;37374:4;:13;;:46;37388:31;;;;;;;;;;;;;;;;;;;37374:46;;;;;;;;;;;;37351:70;;;;;;;;;;;:129;;;;;;;:::i;:::-;;37494:133;;;;;;;;;37572:1;37574;37572:4;;;;;;;;;;;;;:10;;;37494:133;;;;37583:1;37585;37583:4;;;;;;;;;;;;;:10;;;37494:133;;;;37594:1;37596;37594:4;;;;;;;;;;;;;:10;;;37494:133;;;;37605:1;37607;37605:4;;;;;;;;;;;;;:10;;;37494:133;;;;37616:1;37618;37616:4;;;;;;;;;;;;;:10;;;37494:133;;;:8;:26;;:74;37521:4;:13;;:46;37535:31;;;;;;;;;;;;;;;;;;;37521:46;;;;;;;;;;;;37494:74;;;;;;;;;;;:133;;;;;;;:::i;:::-;;37714:12;37641:8;:22;;:70;37664:4;:13;;:46;37678:31;;;;;;;;;;;;;;;;;;;37664:46;;;;;;;;;;;;37641:70;;;;;;;;;;;:85;;;;37939:4;:13;;:43;37953:28;;;;;;;;;;;;;;;;;;;37939:43;;;;;;;;;;;;37892:4;:13;;:44;37906:29;;;;;;;;;;;;;;;;;;;37892:44;;;;;;;;;;;:90;;;;38044:4;:13;;:43;38058:28;;;;;;;;;;;;;;;;;;;38044:43;;;;;;;;;;;;37997:4;:13;;:44;38011:29;;;;;;;;;;;;;;;;;;;37997:44;;;;;;;;;;;:90;;;;38265:10;38189:4;:25;;:73;38215:4;:13;;:46;38229:31;;;;;;;;;;;;;;;;;;;38215:46;;;;;;;;;;;;38189:73;;;;;;;;;;;:86;;;;38368:4;:23;;38397:4;:13;;:46;38411:31;;;;;;;;;;;;;;;;;;;38397:46;;;;;;;;;;;;38368:76;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;38368:76:9;;;;;;;;;;;;;;;;;;;;;;38614:1;38571:4;:13;;:40;38585:25;;;;;;;;;;;;;;;;;;;38571:40;;;;;;;;;;;:44;;;;38888:1;38763:4;:13;;38777:4;:19;;:64;38797:4;:13;;:43;38811:28;;;;;;;;;;;;;;;;;;;38797:43;;;;;;;;;;;;38777:64;;;;;;;;;;;:76;;:107;38854:29;;;;;;;;;;;;;;;;;;;38777:107;;;;;;;;;;;;38763:122;;;;;;;;;;:126;;;;39148:1;39007:4;:29;;:138;39037:4;:19;;:64;39057:4;:13;;:43;39071:28;;;;;;;;;;;;;;;;;;;39057:43;;;;;;;;;;;;39037:64;;;;;;;;;;;:76;;:107;39114:29;;;;;;;;;;;;;;;;;;;39037:107;;;;;;;;;;;;39007:138;;;;;;;;;;;:142;;;;39397:1;39287:4;:19;;:64;39307:4;:13;;:43;39321:28;;;;;;;;;;;;;;;;;;;39307:43;;;;;;;;;;;;39287:64;;;;;;;;;;;:76;;:107;39364:29;;;;;;;;;;;;;;;;;;;39287:107;;;;;;;;;;;:111;;;;39758:1;39656:4;:19;;:64;39676:4;:13;;:43;39690:28;;;;;;;;;;;;;;;;;;;39676:43;;;;;;;;;;;;39656:64;;;;;;;;;;;:76;;:99;39733:21;;;;;;;;;;;;;;;;;;;39656:99;;;;;;;;;;;:103;;;;39773:19;;:::i;:::-;40157:1;40110:4;:13;;:44;40124:29;;;;;;;;;;;;;;;;;;;40110:44;;;;;;;;;;;;:48;40107:2001;;;40315:31;40332:4;:13;;40315:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:16;:31::i;:::-;40296:4;40301:1;40296:7;;;;;;;;;;;;40304:4;40309:1;40304:7;;;;;;;;;;;;40295:51;;;;;;;;;;40559:4;:29;;:38;40589:4;40594:1;40589:7;;;;;;;;;;;;;40559:38;;;;;;;;;;;;40513:4;:13;;:43;40527:28;;;;;;;;;;;;;;;;;;;40513:43;;;;;;;;;;;:84;;;;40746:4;:19;;:64;40766:4;:13;;:43;40780:28;;;;;;;;;;;;;;;;;;;40766:43;;;;;;;;;;;;40746:64;;;;;;;;;;;:74;;;40723:4;:20;;:97;;;;41015:4;41020:1;41015:7;;;;;;;;;;;;;40969:4;:13;;:43;40983:28;;;;;;;;;;;;;;;;;;;40969:43;;;;;;;;;;;:53;;;;41155:6;41162:4;:21;;;41210:1;41195:12;:16;41185:27;41138:75;;;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;51:19;36:153;;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;41138:75:9;;;;;;;;;;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;41138:75:9;;;41128:86;;;;;;41104:4;:21;;:110;;;;41300:4;:13;;:44;41314:29;;;;;;;;;;;;;;;;;;;41300:44;;;;;;;;;;;;41265:346;41278:4;:21;;;41345:4;:13;;:38;41359:23;;;;;;;;;;;;;;;;;;;41345:38;;;;;;;;;;;;41384:4;:19;;:65;41404:4;:13;;:44;41418:29;;;;;;;;;;;;;;;;;;;41404:44;;;;;;;;;;;;41384:65;;;;;;;;;;;:77;;:103;41462:24;;;;;;;;;;;;;;;;;;;41384:103;;;;;;;;;;;;41488:4;:19;;:65;41508:4;:13;;:44;41522:29;;;;;;;;;;;;;;;;;;;41508:44;;;;;;;;;;;;41488:65;;;;;;;;;;;:77;;41566:4;:13;;:44;41580:29;;;;;;;;;;;;;;;;;;;41566:44;;;;;;;;;;;;41265:346;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;41654:4;:13;;:43;41668:28;;;;;;;;;;;;;;;;;;;41654:43;;;;;;;;;;;;41637:203;41698:4;:19;;:64;41718:4;:13;;:43;41732:28;;;;;;;;;;;;;;;;;;;41718:43;;;;;;;;;;;;41698:64;;;;;;;;;;;:76;;41775:4;:20;;;41796:4;:13;;:43;41810:28;;;;;;;;;;;;;;;;;;;41796:43;;;;;;;;;;;;41637:203;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;40107:2001;;;41940:1;41894:4;:13;;:43;41908:28;;;;;;;;;;;;;;;;;;;41894:43;;;;;;;;;;;:47;;;;42005:1;41959:4;:13;;:43;41973:28;;;;;;;;;;;;;;;;;;;41959:43;;;;;;;;;;;:47;;;;42024:25;:4;:20;;:25;;;;42067:26;:4;:21;;:26;;;;40107:2001;34206:7912;;;;;32646:9478;;;;;:::o;21366:193::-;21466:12;21490:41;21501:4;21506:10;21518:3;21523:7;21490:10;:41::i;:::-;21548:4;21541:11;;21366:193;;;;;:::o;49610:488::-;49686:24;49713:4;:18;;:30;49732:10;49713:30;;;;;;;;;;;;;;;49686:57;;49753:11;49780:5;49774:3;:11;;;;;;;;49767:3;:19;49753:33;;49979:6;49959;:16;;;49950:6;:25;:35;;:64;;;;;50013:1;49989:6;:20;;;:25;49950:64;49942:73;;;;;;;;50049:1;50026:6;:20;;:24;;;;50080:10;50065:26;;;;;;;;;;;;49610:488;;;:::o;47925:1558::-;48032:20;48055:4;:17;;:29;48073:10;48055:29;;;;;;;;;;;48032:52;;48201:15;48219:75;48231:4;48236:10;48247:4;:20;;:46;48268:24;;;;;;;;;;;;;;;;;;;48247:46;;;;;;;;;;;;48219:11;:75::i;:::-;48201:93;;48399:4;48373:30;;:4;:10;;:22;48384:10;48373:22;;;;;;;;;;;;;;;;;;;;;;;;;:30;;;;48365:39;;;;;;;;48530:1;48517:10;:14;48509:23;;;;;;;;48667:1;48619:4;:18;;:30;48638:10;48619:30;;;;;;;;;;;;;;;:44;;;:49;;48611:58;;;;;;;;48757:4;48732;:10;;:22;48743:10;48732:22;;;;;;;;;;;;;;;;:29;;;;;;;;;;;;;;;;;;48885:1;48833:4;:20;;:48;48854:26;;;;;;;;;;;;;;;;;;;48833:48;;;;;;;;;;;;:53;;;;;;;;;;;49003:10;48958:4;:20;;:41;48979:19;;;;;;;;;;;;;;;;;;;48958:41;;;;;;;;;;;;:55;;;;;;;;;;;49165:16;49161:160;;;49227:10;49210:4;:10;;;:28;49197:4;:10;;:41;;;;49161:160;;;49299:10;49282:4;:10;;;:28;49269:4;:10;;:41;;;;49161:160;49465:10;49431:45;;49437:10;49431:45;49448:16;49431:45;;;;;;;;;;;;;;;;;;;;;;47925:1558;;;;;:::o;42294:329::-;42426:4;:16;;:37;42443:19;;;;;;;;;;;;;;;;;;;42426:37;;;;;;;;;;;;;;;;;;;;;42412:51;;:10;:51;;;42404:60;;;;;;;;42543:9;42483:70;;42504:4;:16;;:37;42521:19;;;;;;;;;;;;;;;;;;;42504:37;;;;;;;;;;;;;;;;;;;;;42483:70;;;;;;;;;;;;42607:9;42567:4;:16;;:37;42584:19;;;;;;;;;;;;;;;;;;;42567:37;;;;;;;;;;;;:49;;;;;;;;;;;;;;;;;;42294:329;;:::o;25028:2521::-;25262:1;25247:12;:16;25239:25;;;;;;;;25352:4;25336:12;:20;;25328:29;;;;;;;;25623:1;25609:10;:15;25606:1937;;;25639:19;25661:7;25639:29;;25682:21;25706:9;25682:33;;25759:1;25743:5;25737:19;:23;25729:32;;;;;;;;25807:2;25789:7;25783:21;:26;25775:35;;;;;;;;25824:18;25872:5;25878:12;25855:36;;;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;51:19;36:153;;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;25855:36:9;;;;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;25855:36:9;;;25845:47;;;;;;25824:68;;26173:1;26132:4;:25;;:37;26158:10;26132:37;;;;;;;;;;;;:42;26129:1337;;;26193:4;:13;;:40;26207:25;;;;;;;;;;;;;;;;;;;26193:40;;;;;;;;;;;;:42;;;;;;;;;;;;;26264:4;:13;;:40;26278:25;;;;;;;;;;;;;;;;;;;26264:40;;;;;;;;;;;;26253:51;;26356:211;;;;;;;;;26400:5;26356:211;;;;26440:7;26356:211;;;;26480:10;26356:211;;;;26542:1;26531:13;;;;;;;;;;;;;;;;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;148:4;140:6;136:17;126:27;;0:157;26531:13:9;;;;26356:211;;;26322:4;:19;;:31;26342:10;26322:31;;;;;;;;;;;:245;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;26657:12;26585:4;:19;;:31;26605:10;26585:31;;;;;;;;;;;:43;;:69;26629:24;;;;;;;;;;;;;;;;;;;26585:69;;;;;;;;;;;:84;;;;26764:1;26687:4;:19;;:31;26707:10;26687:31;;;;;;;;;;;:43;;:74;26731:29;;;;;;;;;;;;;;;;;;;26687:74;;;;;;;;;;;:78;;;;26852:1;26783:4;:19;;:31;26803:10;26783:31;;;;;;;;;;;:43;;:66;26827:21;;;;;;;;;;;;;;;;;;;26783:66;;;;;;;;;;;:70;;;;26911:10;26871:4;:25;;:37;26897:10;26871:37;;;;;;;;;;;:50;;;;27036:1;27029:4;:8;27026:99;;;27060:46;27071:4;27076:10;27095:4;27101;27060:10;:46::i;:::-;27026:99;27142:40;27155:4;27160:10;27171:4;27176:5;27142:12;:40::i;:::-;27330:10;27219;27205:141;;;27230:4;:19;;:31;27250:10;27230:31;;;;;;;;;;;:43;;27274:4;:19;;:31;27294:10;27274:31;;;;;;;;;;;:42;;27317:12;27341:4;27205:141;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;26129:1337;;;27396:55;27403:4;27408;:25;;:37;27434:10;27408:37;;;;;;;;;;;;27446:4;27396:6;:55::i;:::-;26129:1337;25606:1937;;;;;;27504:28;27511:4;27516:10;27527:4;27504:6;:28::i;:::-;25606:1937;25028:2521;;;;;;:::o;15051:730::-;15182:1;15172:7;:11;15164:20;;;;;;;;15217:1;15202:17;;:3;:17;;;;15194:26;;;;;;;;15238:34;15253:4;15258:5;15264:7;15238:14;:34::i;:::-;15230:43;;;;;;;;15370:20;15393:37;15405:4;15410:5;15417:12;15393:11;:37::i;:::-;15370:60;;15440:67;15459:4;:13;;:20;15473:5;15459:20;;;;;;;;;;;;;;;15499:7;15481:15;:25;15440:18;:67::i;:::-;15535:35;15547:4;15552:3;15557:12;15535:11;:35::i;:::-;15517:53;;15617:15;15606:7;15588:15;:25;:44;;15580:53;;;;;;;;15665:65;15684:4;:13;;:18;15698:3;15684:18;;;;;;;;;;;;;;;15722:7;15704:15;:25;15665:18;:65::i;:::-;15761:3;15745:29;;15754:5;15745:29;;;15766:7;15745:29;;;;;;;;;;;;;;;;;;15051:730;;;;;:::o;112:352:10:-;172:15;188:13;227:4;232:1;227:7;;;;;;;;;;;;;217:17;;274:6;281:1;274:8;;270:190;287:11;283:1;:15;270:190;;;338:7;328:4;333:1;328:7;;;;;;;;;;;;;:17;325:121;;;380:4;385:1;380:7;;;;;;;;;;;;;370:17;;422:1;411:12;;325:121;299:3;;;;;;;270:190;;;;112:352;;;:::o;14477:346:9:-;14586:4;14638:1;14607:4;:13;;:20;14621:5;14607:20;;;;;;;;;;;;;;;:27;;;;:32;14606:88;;;;14681:12;14645:4;:13;;:20;14659:5;14645:20;;;;;;;;;;;;;;;14666:1;14645:23;;;;;;;;;;;;;;;;;:33;;;;;;;;;;;;:48;;;14606:88;14602:215;;;14721:1;14714:8;;;;14602:215;14761:48;14774:4;:13;;:20;14788:5;14774:20;;;;;;;;;;;;;;;14796:12;14761;:48::i;:::-;14754:55;;14477:346;;;;;;:::o;43615:4106::-;43728:24;43755:4;:19;;:31;43775:10;43755:31;;;;;;;;;;;43728:58;;43864:1;43857:4;:8;43853:137;;;43926:53;43974:4;43926:8;:20;;:43;43947:21;;;;;;;;;;;;;;;;;;;43926:43;;;;;;;;;;;;:47;;:53;;;;:::i;:::-;43880:8;:20;;:43;43901:21;;;;;;;;;;;;;;;;;;;43880:43;;;;;;;;;;;:99;;;;43853:137;44047:12;44062:8;:20;;:43;44083:21;;;;;;;;;;;;;;;;;;;44062:43;;;;;;;;;;;;44047:58;;44422:1;44374:4;:13;;:44;44388:29;;;;;;;;;;;;;;;;;;;44374:44;;;;;;;;;;;;:49;44371:3344;;;44484:1;44438:8;:20;;:43;44459:21;;;;;;;;;;;;;;;;;;;44438:43;;;;;;;;;;;:47;;;;44546:10;44499:4;:13;;:44;44513:29;;;;;;;;;;;;;;;;;;;44499:44;;;;;;;;;;;:57;;;;44617:7;44570:4;:13;;:44;44584:29;;;;;;;;;;;;;;;;;;;44570:44;;;;;;;;;;;:54;;;;44689:7;44698:4;:21;;;44746:1;44731:12;:16;44721:27;44672:77;;;;;;;;;;;;;;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;44672:77:9;;;44662:88;;;;;;44638:4;:21;;:112;;;;44832:4;:13;;:44;44846:29;;;;;;;;;;;;;;;;;;;44832:44;;;;;;;;;;;;44797:346;44810:4;:21;;;44877:4;:13;;:38;44891:23;;;;;;;;;;;;;;;;;;;44877:38;;;;;;;;;;;;44916:4;:19;;:65;44936:4;:13;;:44;44950:29;;;;;;;;;;;;;;;;;;;44936:44;;;;;;;;;;;;44916:65;;;;;;;;;;;:77;;:103;44994:24;;;;;;;;;;;;;;;;;;;44916:103;;;;;;;;;;;;45020:4;:19;;:65;45040:4;:13;;:44;45054:29;;;;;;;;;;;;;;;;;;;45040:44;;;;;;;;;;;;45020:65;;;;;;;;;;;:77;;45098:4;:13;;:44;45112:29;;;;;;;;;;;;;;;;;;;45098:44;;;;;;;;;;;;44797:346;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;44371:3344;;;45387:4;:13;;:43;45401:28;;;;;;;;;;;;;;;;;;;45387:43;;;;;;;;;;;;45373:10;:57;45370:1100;;;45495:7;45449:4;:13;;:43;45463:28;;;;;;;;;;;;;;;;;;;45449:43;;;;;;;;;;;:53;;;;45370:1100;;;45941:4;:13;;:43;45955:28;;;;;;;;;;;;;;;;;;;45941:43;;;;;;;;;;;;45931:7;:53;:125;;;;46036:1;45989:4;:13;;:43;46003:28;;;;;;;;;;;;;;;;;;;45989:43;;;;;;;;;;;;:48;45988:68;;;;;46051:5;46042:14;;:5;:14;;;45988:68;45931:125;45927:543;;;46126:10;46080:4;:13;;:43;46094:28;;;;;;;;;;;;;;;;;;;46080:43;;;;;;;;;;;:56;;;;46181:8;:18;;;46158:4;:20;;:41;;;;46267:7;46221:4;:13;;:43;46235:28;;;;;;;;;;;;;;;;;;;46221:43;;;;;;;;;;;:53;;;;46394:10;46377:78;46405:8;:20;;46426:4;:20;;;46447:7;46377:78;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;45927:543;45370:1100;46786:1;46731:8;:20;;:51;46752:29;;;;;;;;;;;;;;;;;;;46731:51;;;;;;;;;;;;:56;:74;;;;;46800:5;46791:14;;:5;:14;;;46731:74;46728:977;;;46824:9;46851:11;46896:31;46913:4;:13;;46896:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:16;:31::i;:::-;46880:47;;;;;;;;47200:4;47190:7;:14;:27;;;;47216:1;47208:4;:9;47190:27;47187:257;;;47264:7;47240:4;:13;;47254:6;47240:21;;;;;;;;;;:31;;;;47333:10;47293:4;:29;;:37;47323:6;47293:37;;;;;;;;;;;:50;;;;47419:6;47365:8;:20;;:51;47386:29;;;;;;;;;;;;;;;;;;;47365:51;;;;;;;;;;;:60;;;;47187:257;46728:977;;;;;47578:1;47571:4;:8;:26;;;;;47592:5;47583:14;;:5;:14;;;47571:26;47567:138;;;47686:4;47616;:13;;47630:8;:20;;:51;47651:29;;;;;;;;;;;;;;;;;;;47630:51;;;;;;;;;;;;47616:66;;;;;;;;;;;:74;;;;;;;;;;;47567:138;46728:977;44371:3344;43615:4106;;;;;;:::o;23783:563::-;23898:1;23885:10;:14;23877:23;;;;;;;;23988:1;23981:4;:8;23978:83;;;24004:46;24015:4;24020:10;24039:4;24045;24004:10;:46::i;:::-;23978:83;24181:40;24194:4;24199:10;24210:4;24215:5;24181:12;:40::i;:::-;24256:10;24245;24236:103;;;24267:4;24272;:19;;:31;24292:10;24272:31;;;;;;;;;;;:43;;:66;24316:21;;;;;;;;;;;;;;;;;;;24272:66;;;;;;;;;;;;24236:103;;;;;;;;;;;;;;;;;;;;;;;;23783:563;;;:::o;12773:521::-;12878:4;12937:1;12896:4;:18;;:25;12915:5;12896:25;;;;;;;;;;;;;;;:39;;;:42;12893:373;;;13113:1;13030:79;13101:7;13030:66;13056:4;:13;;:39;13070:24;;;;;;;;;;;;;;;;;;;13056:39;;;;;;;;;;;;13030:21;13040:4;13045:5;13030:9;:21::i;:::-;:25;;:66;;;;:::i;:::-;:70;;:79;;;;:::i;:::-;:84;;13027:132;;;13140:4;13133:11;;;;13027:132;12893:373;;;13224:1;13186:34;13212:7;13186:21;13196:4;13201:5;13186:9;:21::i;:::-;:25;;:34;;;;:::i;:::-;:39;;13183:83;;;13251:4;13244:11;;;;13183:83;12893:373;13282:5;13275:12;;12773:521;;;;;;:::o;42836:570::-;42958:1;42936:11;:18;;;;:23;42935:90;;;;43012:12;42965:11;42997:1;42977:11;:18;;;;:21;42965:34;;;;;;;;;;;;;;;;;:44;;;;;;;;;;;;:59;;;42935:90;42931:469;;;43044:32;43079:11;43092;:20;;;;;;;;;;;:::i;:::-;43079:35;;;;;;;;;;;;;;;;;43044:70;;43166:12;43131:13;:23;;;:48;;;;;;;;;;;;;;;;;;43226:6;43196:13;:19;;;:37;;;;;;;;;;;;;;;;;;42931:469;;;;43267:32;43302:11;43333:1;43314:11;:18;;;;:20;43302:33;;;;;;;;;;;;;;;;;43267:68;;43382:6;43352:13;:19;;;:37;;;;;;;;;;;;;;;;;;42931:469;;42836:570;;:::o;16053:713::-;16143:4;16185:1;16163:11;:18;;;;:23;16159:37;;;16195:1;16188:8;;;;16159:37;16220:11;16251:1;16232:11;:18;;;;:20;16220:33;;;;;;;;;;;;;;;;;:43;;;;;;;;;;;;16210:53;;:6;:53;;16206:117;;;16284:11;16315:1;16296:11;:18;;;;:20;16284:33;;;;;;;;;;;;;;;;;:39;;;;;;;;;;;;16277:46;;;;;;16206:117;16346:11;16358:1;16346:14;;;;;;;;;;;;;;;;;:24;;;;;;;;;;;;16337:33;;:6;:33;16333:47;;;16379:1;16372:8;;;;16333:47;16441:8;16452:1;16441:12;;16463:8;16493:1;16474:11;:18;;;;:20;16463:31;;16504:217;16517:3;16511;:9;16504:217;;;16536:8;16564:1;16560;16554:3;16548;:9;:13;16547:18;;;;;;;;16536:29;;16611:6;16583:11;16595:3;16583:16;;;;;;;;;;;;;;;;;:26;;;;;;;;;;;;:34;;;;16579:132;;;16643:3;16637:9;;16579:132;;;16695:1;16691:3;:5;16685:11;;16579:132;16504:217;;;;16737:11;16749:3;16737:16;;;;;;;;;;;;;;;;;:22;;;;;;;;;;;;16730:29;;;;;;16053:713;;;;;:::o;117:129:7:-;175:7;190:9;206:1;202;:5;190:17;;225:1;220;:6;;213:14;;;;;;240:1;233:8;;;117:129;;;;:::o;518:339:10:-;578:15;594:13;644:1;630:11;:15;619:26;;665:4;670:8;665:14;;;;;;;;;;;;;655:24;;693:6;714:1;702:11;:13;693:22;;689:164;720:1;716;:5;689:164;;;754:7;744:4;749:1;744:7;;;;;;;;;;;;;:17;741:102;;;791:4;796:1;791:7;;;;;;;;;;;;;781:17;;827:1;816:12;;741:102;722:3;;;;;;;;689:164;;;;518:339;;;:::o;14036:157:9:-;14124:4;14148:37;14160:4;14165:5;14172:12;14148:11;:37::i;:::-;14141:44;;14036:157;;;;:::o;511:110:7:-;569:7;596:1;591;:6;;584:14;;;;;;615:1;611;:5;604:12;;511:110;;;;:::o;351:5969:2:-;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;148:4;140:6;136:17;126:27;;0:157;351:5969:2;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o",
  "source": "pragma solidity ^0.5.0;\n\nimport \"./libraries/SafeMath.sol\";\nimport \"./libraries/Utilities.sol\";\nimport \"./libraries/TellorLibrary.sol\";\n//import \"./TellorGetters.sol\";\n\n/**\n * @title Tellor Oracle System\n * @dev Oracle contract where miners can submit the proof of work along with the value.\n * The logic for this contract is in TellorLibrary.sol\n */\ncontract Tellor /* is TellorGetters*/{\n\n    using SafeMath for uint256;\n\n    using TellorLibrary for TellorLibrary.TellorStorageStruct;\n    TellorLibrary.TellorStorageStruct tellor;\n\n    /*Functions*/\n    /*This is a cheat for demo purposes, will delete upon actual launch*/\n    function theLazyCoon(address _address, uint _amount) public {\n        tellor.theLazyCoon(_address,_amount);\n    }\n\n    /*\n    * @dev This function gives 5 miners the inital staked tokens in the system.  \n    * It would run with the constructor, but throws on too much gas\n    * It only runs once or only when the requestCount is zero. \n    */\n    function tellorPostConstructor() external {\n        tellor.tellorPostConstructor();\n    }\n\n\n    /**\n    * @dev This function approves a _spender an _amount of tokens to use\n    * @param _spender address\n    * @param _amount amount the spender is being approved for\n    * @return true if spender appproved successfully\n    */\n    function approve(address _spender, uint _amount) external returns (bool) {\n        return tellor.approve(_spender,_amount);\n    }\n\n    /**\n    * @dev This function allows miners to deposit their stake.\n    */\n    function depositStake() external {\n        tellor.depositStake();\n    }\n\n\n    /**\n    * @dev Helps initialize a dispute by assigning it a disputeId \n    * when a miner returns a false on the validate array(in Tellor.ProofOfWork) it sends the \n    * invalidated value information to POS voting\n    * @param _requestId being disputed\n    * @param _timestamp being disputed\n    * @param _minerIndex the index of the miner that submitted the value being disputed. Since each official value \n    * requires 5 miners to submit a value.\n    */\n    function beginDispute(uint _requestId, uint _timestamp,uint _minerIndex) external {\n        tellor.beginDispute(_requestId,_timestamp,_minerIndex);\n    }\n\n\n    /**\n    * @dev Allows for a fork to be proposed\n    * @param _propNewTellorAddress address for new proposed Tellor\n    */\n    function proposeFork(address _propNewTellorAddress) external {\n        tellor.proposeFork(_propNewTellorAddress);\n    }\n\n\n    /**\n    * @dev Add tip to Request value from oracle\n    * @param _requestId being requested to be mined\n    * @param _tip amount the requester is willing to pay to be get on queue. Miners\n    * mine the onDeckQueryHash, or the api with the highest payout pool\n    */\n    function addTip(uint _requestId, uint _tip) external {\n        tellor.addTip(_requestId,_tip);\n    }\n\n\n    /**\n    * @dev Request to retreive value from oracle based on timestamp. The tip is not required to be \n    * greater than 0 because there are no tokens in circulation for the initial(genesis) request \n    * @param _c_sapi string API being requested be mined\n    * @param _c_symbol is the short string symbol for the api request\n    * @param _requestId being requested be mined if it exist otherwise use zero(0)\n    * @param _granularity is the number of decimals miners should include on the submitted value\n    * @param _tip amount the requester is willing to pay to be get on queue. Miners\n    * mine the onDeckQueryHash, or the api with the highest payout pool\n    */\n    function requestData(string calldata _c_sapi,string calldata _c_symbol,uint _requestId,uint _granularity, uint _tip) external {\n        tellor.requestData(_c_sapi,_c_symbol,_requestId,_granularity,_tip);\n    }\n    \n\n    /**\n    * @dev This function allows stakers to request to withdraw their stake (no longer stake) \n    * once they lock for withdraw(stakes.currentStatus = 2) they are locked for 7 days before they \n    * can withdraw the stake\n    */\n    function requestStakingWithdraw() external {\n        tellor.requestStakingWithdraw();\n    }\n\n\n    /**\n    * @dev tallies the votes.\n    * @param _disputeId is the dispute id\n    */\n    function tallyVotes(uint _disputeId) external {\n        tellor.tallyVotes(_disputeId);\n    }\n\n\n    /**\n    * @dev Proof of work is called by the miner when they submit the solution (proof of work and value)\n    * @param _nonce uint submitted by miner\n    * @param _requestId the apiId being mined\n    * @param _value of api query\n    */\n    function submitMiningSolution(string calldata _nonce, uint _requestId, uint _value) external{\n        tellor.submitMiningSolution(_nonce,_requestId,_value);\n    }\n\n\n    /**\n    * @dev Allows for a transfer of tokens to _to\n    * @param _to The address to send tokens to\n    * @param _amount The amount of tokens to send\n    * @return true if transfer is successful\n    */\n    function transfer(address _to, uint256 _amount) external returns (bool) {\n        return tellor.transfer(_to,_amount);\n    }\n\n\n    /**\n    * @notice Send _amount tokens to _to from _from on the condition it\n    * is approved by _from\n    * @param _from The address holding the tokens being transferred\n    * @param _to The address of the recipient\n    * @param _amount The amount of tokens to be transferred\n    * @return True if the transfer was successful\n    */\n    function transferFrom(address _from, address _to, uint256 _amount) external returns (bool) {\n        return tellor.transferFrom(_from,_to,_amount);\n    }\n\n\n    /**\n    * @dev Allows the current owner to transfer control of the contract to a newOwner.\n    * @param _newOwner The address to transfer ownership to.\n    */\n    function transferOwnership(address payable _newOwner) external {\n        tellor.transferOwnership(_newOwner);\n    }\n\n\n    /**\n    * @dev Allows token holders to vote\n    * @param _disputeId is the dispute id\n    * @param _supportsDispute is the vote (true=the dispute has basis false = vote against dispute)\n    */\n    function vote(uint _disputeId, bool _supportsDispute) external {\n        tellor.vote(_disputeId,_supportsDispute);\n    }\n\n\n    /**\n    * @dev This function allows users to withdraw their stake after a 7 day waiting period from request \n    */\n    function withdrawStake() external {\n        tellor.withdrawStake();\n    }\n\n}\n",
  "sourcePath": "/Users/mdcoon/git/TellorCore/contracts/Tellor.sol",
  "ast": {
    "absolutePath": "/Users/mdcoon/git/TellorCore/contracts/Tellor.sol",
    "exportedSymbols": {
      "Tellor": [
        299
      ]
    },
    "id": 300,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 59,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:2"
      },
      {
        "absolutePath": "/Users/mdcoon/git/TellorCore/contracts/libraries/SafeMath.sol",
        "file": "./libraries/SafeMath.sol",
        "id": 60,
        "nodeType": "ImportDirective",
        "scope": 300,
        "sourceUnit": 977,
        "src": "25:34:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/mdcoon/git/TellorCore/contracts/libraries/Utilities.sol",
        "file": "./libraries/Utilities.sol",
        "id": 61,
        "nodeType": "ImportDirective",
        "scope": 300,
        "sourceUnit": 5908,
        "src": "60:35:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/mdcoon/git/TellorCore/contracts/libraries/TellorLibrary.sol",
        "file": "./libraries/TellorLibrary.sol",
        "id": 62,
        "nodeType": "ImportDirective",
        "scope": 300,
        "sourceUnit": 5798,
        "src": "96:39:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": "@title Tellor Oracle System\n@dev Oracle contract where miners can submit the proof of work along with the value.\nThe logic for this contract is in TellorLibrary.sol",
        "fullyImplemented": true,
        "id": 299,
        "linearizedBaseContracts": [
          299
        ],
        "name": "Tellor",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 65,
            "libraryName": {
              "contractScope": null,
              "id": 63,
              "name": "SafeMath",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 976,
              "src": "401:8:2",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SafeMath_$976",
                "typeString": "library SafeMath"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "395:27:2",
            "typeName": {
              "id": 64,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "414:7:2",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "id": 68,
            "libraryName": {
              "contractScope": null,
              "id": 66,
              "name": "TellorLibrary",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 5797,
              "src": "434:13:2",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_TellorLibrary_$5797",
                "typeString": "library TellorLibrary"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "428:58:2",
            "typeName": {
              "contractScope": null,
              "id": 67,
              "name": "TellorLibrary.TellorStorageStruct",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2375,
              "src": "452:33:2",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_TellorStorageStruct_$2375_storage_ptr",
                "typeString": "struct TellorLibrary.TellorStorageStruct"
              }
            }
          },
          {
            "constant": false,
            "id": 70,
            "name": "tellor",
            "nodeType": "VariableDeclaration",
            "scope": 299,
            "src": "491:40:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_struct$_TellorStorageStruct_$2375_storage",
              "typeString": "struct TellorLibrary.TellorStorageStruct"
            },
            "typeName": {
              "contractScope": null,
              "id": 69,
              "name": "TellorLibrary.TellorStorageStruct",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2375,
              "src": "491:33:2",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_TellorStorageStruct_$2375_storage_ptr",
                "typeString": "struct TellorLibrary.TellorStorageStruct"
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 84,
              "nodeType": "Block",
              "src": "690:53:2",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 80,
                        "name": "_address",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 72,
                        "src": "719:8:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 81,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 74,
                        "src": "728:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 77,
                        "name": "tellor",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 70,
                        "src": "700:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TellorStorageStruct_$2375_storage",
                          "typeString": "struct TellorLibrary.TellorStorageStruct storage ref"
                        }
                      },
                      "id": 79,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "theLazyCoon",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2543,
                      "src": "700:18:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_delegatecall_nonpayable$_t_struct$_TellorStorageStruct_$2375_storage_ptr_$_t_address_$_t_uint256_$returns$__$bound_to$_t_struct$_TellorStorageStruct_$2375_storage_ptr_$",
                        "typeString": "function (struct TellorLibrary.TellorStorageStruct storage pointer,address,uint256)"
                      }
                    },
                    "id": 82,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "700:36:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 83,
                  "nodeType": "ExpressionStatement",
                  "src": "700:36:2"
                }
              ]
            },
            "documentation": null,
            "id": 85,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "theLazyCoon",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 75,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 72,
                  "name": "_address",
                  "nodeType": "VariableDeclaration",
                  "scope": 85,
                  "src": "651:16:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 71,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "651:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 74,
                  "name": "_amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 85,
                  "src": "669:12:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 73,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "669:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "650:32:2"
            },
            "returnParameters": {
              "id": 76,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "690:0:2"
            },
            "scope": 299,
            "src": "630:113:2",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 93,
              "nodeType": "Block",
              "src": "1019:47:2",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "argumentTypes": null,
                        "id": 88,
                        "name": "tellor",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 70,
                        "src": "1029:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TellorStorageStruct_$2375_storage",
                          "typeString": "struct TellorLibrary.TellorStorageStruct storage ref"
                        }
                      },
                      "id": 90,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "tellorPostConstructor",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2800,
                      "src": "1029:28:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_delegatecall_nonpayable$_t_struct$_TellorStorageStruct_$2375_storage_ptr_$returns$__$bound_to$_t_struct$_TellorStorageStruct_$2375_storage_ptr_$",
                        "typeString": "function (struct TellorLibrary.TellorStorageStruct storage pointer)"
                      }
                    },
                    "id": 91,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1029:30:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 92,
                  "nodeType": "ExpressionStatement",
                  "src": "1029:30:2"
                }
              ]
            },
            "documentation": null,
            "id": 94,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "tellorPostConstructor",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 86,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1007:2:2"
            },
            "returnParameters": {
              "id": 87,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1019:0:2"
            },
            "scope": 299,
            "src": "977:89:2",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 109,
              "nodeType": "Block",
              "src": "1379:56:2",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 105,
                        "name": "_spender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 96,
                        "src": "1411:8:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 106,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 98,
                        "src": "1420:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 103,
                        "name": "tellor",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 70,
                        "src": "1396:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TellorStorageStruct_$2375_storage",
                          "typeString": "struct TellorLibrary.TellorStorageStruct storage ref"
                        }
                      },
                      "id": 104,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "approve",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2898,
                      "src": "1396:14:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_delegatecall_nonpayable$_t_struct$_TellorStorageStruct_$2375_storage_ptr_$_t_address_$_t_uint256_$returns$_t_bool_$bound_to$_t_struct$_TellorStorageStruct_$2375_storage_ptr_$",
                        "typeString": "function (struct TellorLibrary.TellorStorageStruct storage pointer,address,uint256) returns (bool)"
                      }
                    },
                    "id": 107,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1396:32:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 102,
                  "id": 108,
                  "nodeType": "Return",
                  "src": "1389:39:2"
                }
              ]
            },
            "documentation": "@dev This function approves a _spender an _amount of tokens to use\n@param _spender address\n@param _amount amount the spender is being approved for\n@return true if spender appproved successfully",
            "id": 110,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "approve",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 99,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 96,
                  "name": "_spender",
                  "nodeType": "VariableDeclaration",
                  "scope": 110,
                  "src": "1323:16:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 95,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1323:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 98,
                  "name": "_amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 110,
                  "src": "1341:12:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 97,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1341:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1322:32:2"
            },
            "returnParameters": {
              "id": 102,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 101,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 110,
                  "src": "1373:4:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 100,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1373:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1372:6:2"
            },
            "scope": 299,
            "src": "1306:129:2",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 118,
              "nodeType": "Block",
              "src": "1552:38:2",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "argumentTypes": null,
                        "id": 113,
                        "name": "tellor",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 70,
                        "src": "1562:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TellorStorageStruct_$2375_storage",
                          "typeString": "struct TellorLibrary.TellorStorageStruct storage ref"
                        }
                      },
                      "id": 115,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "depositStake",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3214,
                      "src": "1562:19:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_delegatecall_nonpayable$_t_struct$_TellorStorageStruct_$2375_storage_ptr_$returns$__$bound_to$_t_struct$_TellorStorageStruct_$2375_storage_ptr_$",
                        "typeString": "function (struct TellorLibrary.TellorStorageStruct storage pointer)"
                      }
                    },
                    "id": 116,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1562:21:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 117,
                  "nodeType": "ExpressionStatement",
                  "src": "1562:21:2"
                }
              ]
            },
            "documentation": "@dev This function allows miners to deposit their stake.",
            "id": 119,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "depositStake",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 111,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1540:2:2"
            },
            "returnParameters": {
              "id": 112,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1552:0:2"
            },
            "scope": 299,
            "src": "1519:71:2",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 136,
              "nodeType": "Block",
              "src": "2142:71:2",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 131,
                        "name": "_requestId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 121,
                        "src": "2172:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 132,
                        "name": "_timestamp",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 123,
                        "src": "2183:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 133,
                        "name": "_minerIndex",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 125,
                        "src": "2194:11:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 128,
                        "name": "tellor",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 70,
                        "src": "2152:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TellorStorageStruct_$2375_storage",
                          "typeString": "struct TellorLibrary.TellorStorageStruct storage ref"
                        }
                      },
                      "id": 130,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "beginDispute",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3476,
                      "src": "2152:19:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_delegatecall_nonpayable$_t_struct$_TellorStorageStruct_$2375_storage_ptr_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$bound_to$_t_struct$_TellorStorageStruct_$2375_storage_ptr_$",
                        "typeString": "function (struct TellorLibrary.TellorStorageStruct storage pointer,uint256,uint256,uint256)"
                      }
                    },
                    "id": 134,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2152:54:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 135,
                  "nodeType": "ExpressionStatement",
                  "src": "2152:54:2"
                }
              ]
            },
            "documentation": "@dev Helps initialize a dispute by assigning it a disputeId \nwhen a miner returns a false on the validate array(in Tellor.ProofOfWork) it sends the \ninvalidated value information to POS voting\n@param _requestId being disputed\n@param _timestamp being disputed\n@param _minerIndex the index of the miner that submitted the value being disputed. Since each official value \nrequires 5 miners to submit a value.",
            "id": 137,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "beginDispute",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 126,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 121,
                  "name": "_requestId",
                  "nodeType": "VariableDeclaration",
                  "scope": 137,
                  "src": "2082:15:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 120,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "2082:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 123,
                  "name": "_timestamp",
                  "nodeType": "VariableDeclaration",
                  "scope": 137,
                  "src": "2099:15:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 122,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "2099:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 125,
                  "name": "_minerIndex",
                  "nodeType": "VariableDeclaration",
                  "scope": 137,
                  "src": "2115:16:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 124,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "2115:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2081:51:2"
            },
            "returnParameters": {
              "id": 127,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2142:0:2"
            },
            "scope": 299,
            "src": "2060:153:2",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 148,
              "nodeType": "Block",
              "src": "2407:58:2",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 145,
                        "name": "_propNewTellorAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 139,
                        "src": "2436:21:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 142,
                        "name": "tellor",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 70,
                        "src": "2417:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TellorStorageStruct_$2375_storage",
                          "typeString": "struct TellorLibrary.TellorStorageStruct storage ref"
                        }
                      },
                      "id": 144,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "proposeFork",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3659,
                      "src": "2417:18:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_TellorStorageStruct_$2375_storage_ptr_$_t_address_$returns$__$bound_to$_t_struct$_TellorStorageStruct_$2375_storage_ptr_$",
                        "typeString": "function (struct TellorLibrary.TellorStorageStruct storage pointer,address)"
                      }
                    },
                    "id": 146,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2417:41:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 147,
                  "nodeType": "ExpressionStatement",
                  "src": "2417:41:2"
                }
              ]
            },
            "documentation": "@dev Allows for a fork to be proposed\n@param _propNewTellorAddress address for new proposed Tellor",
            "id": 149,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "proposeFork",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 140,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 139,
                  "name": "_propNewTellorAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 149,
                  "src": "2367:29:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 138,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2367:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2366:31:2"
            },
            "returnParameters": {
              "id": 141,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2407:0:2"
            },
            "scope": 299,
            "src": "2346:119:2",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 163,
              "nodeType": "Block",
              "src": "2796:47:2",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 159,
                        "name": "_requestId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 151,
                        "src": "2820:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 160,
                        "name": "_tip",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 153,
                        "src": "2831:4:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 156,
                        "name": "tellor",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 70,
                        "src": "2806:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TellorStorageStruct_$2375_storage",
                          "typeString": "struct TellorLibrary.TellorStorageStruct storage ref"
                        }
                      },
                      "id": 158,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "addTip",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3713,
                      "src": "2806:13:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_delegatecall_nonpayable$_t_struct$_TellorStorageStruct_$2375_storage_ptr_$_t_uint256_$_t_uint256_$returns$__$bound_to$_t_struct$_TellorStorageStruct_$2375_storage_ptr_$",
                        "typeString": "function (struct TellorLibrary.TellorStorageStruct storage pointer,uint256,uint256)"
                      }
                    },
                    "id": 161,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2806:30:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 162,
                  "nodeType": "ExpressionStatement",
                  "src": "2806:30:2"
                }
              ]
            },
            "documentation": "@dev Add tip to Request value from oracle\n@param _requestId being requested to be mined\n@param _tip amount the requester is willing to pay to be get on queue. Miners\nmine the onDeckQueryHash, or the api with the highest payout pool",
            "id": 164,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "addTip",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 154,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 151,
                  "name": "_requestId",
                  "nodeType": "VariableDeclaration",
                  "scope": 164,
                  "src": "2759:15:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 150,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "2759:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 153,
                  "name": "_tip",
                  "nodeType": "VariableDeclaration",
                  "scope": 164,
                  "src": "2776:9:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 152,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "2776:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2758:28:2"
            },
            "returnParameters": {
              "id": 155,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2796:0:2"
            },
            "scope": 299,
            "src": "2743:100:2",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 187,
              "nodeType": "Block",
              "src": "3652:83:2",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 180,
                        "name": "_c_sapi",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 166,
                        "src": "3681:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 181,
                        "name": "_c_symbol",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 168,
                        "src": "3689:9:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 182,
                        "name": "_requestId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 170,
                        "src": "3699:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 183,
                        "name": "_granularity",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 172,
                        "src": "3710:12:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 184,
                        "name": "_tip",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 174,
                        "src": "3723:4:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        },
                        {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 177,
                        "name": "tellor",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 70,
                        "src": "3662:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TellorStorageStruct_$2375_storage",
                          "typeString": "struct TellorLibrary.TellorStorageStruct storage ref"
                        }
                      },
                      "id": 179,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "requestData",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3929,
                      "src": "3662:18:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_TellorStorageStruct_$2375_storage_ptr_$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$bound_to$_t_struct$_TellorStorageStruct_$2375_storage_ptr_$",
                        "typeString": "function (struct TellorLibrary.TellorStorageStruct storage pointer,string memory,string memory,uint256,uint256,uint256)"
                      }
                    },
                    "id": 185,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3662:66:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 186,
                  "nodeType": "ExpressionStatement",
                  "src": "3662:66:2"
                }
              ]
            },
            "documentation": "@dev Request to retreive value from oracle based on timestamp. The tip is not required to be \ngreater than 0 because there are no tokens in circulation for the initial(genesis) request \n@param _c_sapi string API being requested be mined\n@param _c_symbol is the short string symbol for the api request\n@param _requestId being requested be mined if it exist otherwise use zero(0)\n@param _granularity is the number of decimals miners should include on the submitted value\n@param _tip amount the requester is willing to pay to be get on queue. Miners\nmine the onDeckQueryHash, or the api with the highest payout pool",
            "id": 188,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "requestData",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 175,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 166,
                  "name": "_c_sapi",
                  "nodeType": "VariableDeclaration",
                  "scope": 188,
                  "src": "3547:23:2",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_calldata_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 165,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "3547:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 168,
                  "name": "_c_symbol",
                  "nodeType": "VariableDeclaration",
                  "scope": 188,
                  "src": "3571:25:2",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_calldata_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 167,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "3571:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 170,
                  "name": "_requestId",
                  "nodeType": "VariableDeclaration",
                  "scope": 188,
                  "src": "3597:15:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 169,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "3597:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 172,
                  "name": "_granularity",
                  "nodeType": "VariableDeclaration",
                  "scope": 188,
                  "src": "3613:17:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 171,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "3613:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 174,
                  "name": "_tip",
                  "nodeType": "VariableDeclaration",
                  "scope": 188,
                  "src": "3632:9:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 173,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "3632:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3546:96:2"
            },
            "returnParameters": {
              "id": 176,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3652:0:2"
            },
            "scope": 299,
            "src": "3526:209:2",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 196,
              "nodeType": "Block",
              "src": "4027:48:2",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "argumentTypes": null,
                        "id": 191,
                        "name": "tellor",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 70,
                        "src": "4037:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TellorStorageStruct_$2375_storage",
                          "typeString": "struct TellorLibrary.TellorStorageStruct storage ref"
                        }
                      },
                      "id": 193,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "requestStakingWithdraw",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3982,
                      "src": "4037:29:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_TellorStorageStruct_$2375_storage_ptr_$returns$__$bound_to$_t_struct$_TellorStorageStruct_$2375_storage_ptr_$",
                        "typeString": "function (struct TellorLibrary.TellorStorageStruct storage pointer)"
                      }
                    },
                    "id": 194,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4037:31:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 195,
                  "nodeType": "ExpressionStatement",
                  "src": "4037:31:2"
                }
              ]
            },
            "documentation": "@dev This function allows stakers to request to withdraw their stake (no longer stake) \nonce they lock for withdraw(stakes.currentStatus = 2) they are locked for 7 days before they \ncan withdraw the stake",
            "id": 197,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "requestStakingWithdraw",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 189,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4015:2:2"
            },
            "returnParameters": {
              "id": 190,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4027:0:2"
            },
            "scope": 299,
            "src": "3984:91:2",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 208,
              "nodeType": "Block",
              "src": "4215:46:2",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 205,
                        "name": "_disputeId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 199,
                        "src": "4243:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 202,
                        "name": "tellor",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 70,
                        "src": "4225:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TellorStorageStruct_$2375_storage",
                          "typeString": "struct TellorLibrary.TellorStorageStruct storage ref"
                        }
                      },
                      "id": 204,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "tallyVotes",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4242,
                      "src": "4225:17:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_TellorStorageStruct_$2375_storage_ptr_$_t_uint256_$returns$__$bound_to$_t_struct$_TellorStorageStruct_$2375_storage_ptr_$",
                        "typeString": "function (struct TellorLibrary.TellorStorageStruct storage pointer,uint256)"
                      }
                    },
                    "id": 206,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4225:29:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 207,
                  "nodeType": "ExpressionStatement",
                  "src": "4225:29:2"
                }
              ]
            },
            "documentation": "@dev tallies the votes.\n@param _disputeId is the dispute id",
            "id": 209,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "tallyVotes",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 200,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 199,
                  "name": "_disputeId",
                  "nodeType": "VariableDeclaration",
                  "scope": 209,
                  "src": "4189:15:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 198,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "4189:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4188:17:2"
            },
            "returnParameters": {
              "id": 201,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4215:0:2"
            },
            "scope": 299,
            "src": "4169:92:2",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 226,
              "nodeType": "Block",
              "src": "4602:70:2",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 221,
                        "name": "_nonce",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 211,
                        "src": "4640:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 222,
                        "name": "_requestId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 213,
                        "src": "4647:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 223,
                        "name": "_value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 215,
                        "src": "4658:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 218,
                        "name": "tellor",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 70,
                        "src": "4612:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TellorStorageStruct_$2375_storage",
                          "typeString": "struct TellorLibrary.TellorStorageStruct storage ref"
                        }
                      },
                      "id": 220,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "submitMiningSolution",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5192,
                      "src": "4612:27:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_TellorStorageStruct_$2375_storage_ptr_$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$__$bound_to$_t_struct$_TellorStorageStruct_$2375_storage_ptr_$",
                        "typeString": "function (struct TellorLibrary.TellorStorageStruct storage pointer,string memory,uint256,uint256)"
                      }
                    },
                    "id": 224,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4612:53:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 225,
                  "nodeType": "ExpressionStatement",
                  "src": "4612:53:2"
                }
              ]
            },
            "documentation": "@dev Proof of work is called by the miner when they submit the solution (proof of work and value)\n@param _nonce uint submitted by miner\n@param _requestId the apiId being mined\n@param _value of api query",
            "id": 227,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "submitMiningSolution",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 216,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 211,
                  "name": "_nonce",
                  "nodeType": "VariableDeclaration",
                  "scope": 227,
                  "src": "4540:22:2",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_calldata_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 210,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "4540:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 213,
                  "name": "_requestId",
                  "nodeType": "VariableDeclaration",
                  "scope": 227,
                  "src": "4564:15:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 212,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "4564:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 215,
                  "name": "_value",
                  "nodeType": "VariableDeclaration",
                  "scope": 227,
                  "src": "4581:11:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 214,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "4581:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4539:54:2"
            },
            "returnParameters": {
              "id": 217,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4602:0:2"
            },
            "scope": 299,
            "src": "4510:162:2",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 242,
              "nodeType": "Block",
              "src": "4958:52:2",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 238,
                        "name": "_to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 229,
                        "src": "4991:3:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 239,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 231,
                        "src": "4995:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 236,
                        "name": "tellor",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 70,
                        "src": "4975:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TellorStorageStruct_$2375_storage",
                          "typeString": "struct TellorLibrary.TellorStorageStruct storage ref"
                        }
                      },
                      "id": 237,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3498,
                      "src": "4975:15:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_TellorStorageStruct_$2375_storage_ptr_$_t_address_$_t_uint256_$returns$_t_bool_$bound_to$_t_struct$_TellorStorageStruct_$2375_storage_ptr_$",
                        "typeString": "function (struct TellorLibrary.TellorStorageStruct storage pointer,address,uint256) returns (bool)"
                      }
                    },
                    "id": 240,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4975:28:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 235,
                  "id": 241,
                  "nodeType": "Return",
                  "src": "4968:35:2"
                }
              ]
            },
            "documentation": "@dev Allows for a transfer of tokens to _to\n@param _to The address to send tokens to\n@param _amount The amount of tokens to send\n@return true if transfer is successful",
            "id": 243,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "transfer",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 232,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 229,
                  "name": "_to",
                  "nodeType": "VariableDeclaration",
                  "scope": 243,
                  "src": "4904:11:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 228,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4904:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 231,
                  "name": "_amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 243,
                  "src": "4917:15:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 230,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4917:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4903:30:2"
            },
            "returnParameters": {
              "id": 235,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 234,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 243,
                  "src": "4952:4:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 233,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "4952:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4951:6:2"
            },
            "scope": 299,
            "src": "4886:124:2",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 261,
              "nodeType": "Block",
              "src": "5446:62:2",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 256,
                        "name": "_from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 245,
                        "src": "5483:5:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 257,
                        "name": "_to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 247,
                        "src": "5489:3:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 258,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 249,
                        "src": "5493:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 254,
                        "name": "tellor",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 70,
                        "src": "5463:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TellorStorageStruct_$2375_storage",
                          "typeString": "struct TellorLibrary.TellorStorageStruct storage ref"
                        }
                      },
                      "id": 255,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3544,
                      "src": "5463:19:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_TellorStorageStruct_$2375_storage_ptr_$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$bound_to$_t_struct$_TellorStorageStruct_$2375_storage_ptr_$",
                        "typeString": "function (struct TellorLibrary.TellorStorageStruct storage pointer,address,address,uint256) returns (bool)"
                      }
                    },
                    "id": 259,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5463:38:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 253,
                  "id": 260,
                  "nodeType": "Return",
                  "src": "5456:45:2"
                }
              ]
            },
            "documentation": "@notice Send _amount tokens to _to from _from on the condition it\nis approved by _from\n@param _from The address holding the tokens being transferred\n@param _to The address of the recipient\n@param _amount The amount of tokens to be transferred\n@return True if the transfer was successful",
            "id": 262,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "transferFrom",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 250,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 245,
                  "name": "_from",
                  "nodeType": "VariableDeclaration",
                  "scope": 262,
                  "src": "5377:13:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 244,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5377:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 247,
                  "name": "_to",
                  "nodeType": "VariableDeclaration",
                  "scope": 262,
                  "src": "5392:11:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 246,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5392:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 249,
                  "name": "_amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 262,
                  "src": "5405:15:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 248,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5405:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "5376:45:2"
            },
            "returnParameters": {
              "id": 253,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 252,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 262,
                  "src": "5440:4:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 251,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "5440:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "5439:6:2"
            },
            "scope": 299,
            "src": "5355:153:2",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 273,
              "nodeType": "Block",
              "src": "5741:52:2",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 270,
                        "name": "_newOwner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 264,
                        "src": "5776:9:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 267,
                        "name": "tellor",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 70,
                        "src": "5751:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TellorStorageStruct_$2375_storage",
                          "typeString": "struct TellorLibrary.TellorStorageStruct storage ref"
                        }
                      },
                      "id": 269,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transferOwnership",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5232,
                      "src": "5751:24:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_TellorStorageStruct_$2375_storage_ptr_$_t_address_payable_$returns$__$bound_to$_t_struct$_TellorStorageStruct_$2375_storage_ptr_$",
                        "typeString": "function (struct TellorLibrary.TellorStorageStruct storage pointer,address payable)"
                      }
                    },
                    "id": 271,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5751:35:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 272,
                  "nodeType": "ExpressionStatement",
                  "src": "5751:35:2"
                }
              ]
            },
            "documentation": "@dev Allows the current owner to transfer control of the contract to a newOwner.\n@param _newOwner The address to transfer ownership to.",
            "id": 274,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "transferOwnership",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 265,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 264,
                  "name": "_newOwner",
                  "nodeType": "VariableDeclaration",
                  "scope": 274,
                  "src": "5705:25:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "typeName": {
                    "id": 263,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5705:15:2",
                    "stateMutability": "payable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "5704:27:2"
            },
            "returnParameters": {
              "id": 266,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5741:0:2"
            },
            "scope": 299,
            "src": "5678:115:2",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 288,
              "nodeType": "Block",
              "src": "6060:57:2",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 284,
                        "name": "_disputeId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 276,
                        "src": "6082:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 285,
                        "name": "_supportsDispute",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 278,
                        "src": "6093:16:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 281,
                        "name": "tellor",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 70,
                        "src": "6070:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TellorStorageStruct_$2375_storage",
                          "typeString": "struct TellorLibrary.TellorStorageStruct storage ref"
                        }
                      },
                      "id": 283,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "vote",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5748,
                      "src": "6070:11:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_TellorStorageStruct_$2375_storage_ptr_$_t_uint256_$_t_bool_$returns$__$bound_to$_t_struct$_TellorStorageStruct_$2375_storage_ptr_$",
                        "typeString": "function (struct TellorLibrary.TellorStorageStruct storage pointer,uint256,bool)"
                      }
                    },
                    "id": 286,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6070:40:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 287,
                  "nodeType": "ExpressionStatement",
                  "src": "6070:40:2"
                }
              ]
            },
            "documentation": "@dev Allows token holders to vote\n@param _disputeId is the dispute id\n@param _supportsDispute is the vote (true=the dispute has basis false = vote against dispute)",
            "id": 289,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "vote",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 279,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 276,
                  "name": "_disputeId",
                  "nodeType": "VariableDeclaration",
                  "scope": 289,
                  "src": "6011:15:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 275,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "6011:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 278,
                  "name": "_supportsDispute",
                  "nodeType": "VariableDeclaration",
                  "scope": 289,
                  "src": "6028:21:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 277,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "6028:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "6010:40:2"
            },
            "returnParameters": {
              "id": 280,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6060:0:2"
            },
            "scope": 299,
            "src": "5997:120:2",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 297,
              "nodeType": "Block",
              "src": "6278:39:2",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "argumentTypes": null,
                        "id": 292,
                        "name": "tellor",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 70,
                        "src": "6288:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TellorStorageStruct_$2375_storage",
                          "typeString": "struct TellorLibrary.TellorStorageStruct storage ref"
                        }
                      },
                      "id": 294,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "withdrawStake",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5796,
                      "src": "6288:20:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_TellorStorageStruct_$2375_storage_ptr_$returns$__$bound_to$_t_struct$_TellorStorageStruct_$2375_storage_ptr_$",
                        "typeString": "function (struct TellorLibrary.TellorStorageStruct storage pointer)"
                      }
                    },
                    "id": 295,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6288:22:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 296,
                  "nodeType": "ExpressionStatement",
                  "src": "6288:22:2"
                }
              ]
            },
            "documentation": "@dev This function allows users to withdraw their stake after a 7 day waiting period from request ",
            "id": 298,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "withdrawStake",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 290,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6266:2:2"
            },
            "returnParameters": {
              "id": 291,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6278:0:2"
            },
            "scope": 299,
            "src": "6244:73:2",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          }
        ],
        "scope": 300,
        "src": "351:5969:2"
      }
    ],
    "src": "0:6321:2"
  },
  "legacyAST": {
    "absolutePath": "/Users/mdcoon/git/TellorCore/contracts/Tellor.sol",
    "exportedSymbols": {
      "Tellor": [
        299
      ]
    },
    "id": 300,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 59,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:2"
      },
      {
        "absolutePath": "/Users/mdcoon/git/TellorCore/contracts/libraries/SafeMath.sol",
        "file": "./libraries/SafeMath.sol",
        "id": 60,
        "nodeType": "ImportDirective",
        "scope": 300,
        "sourceUnit": 977,
        "src": "25:34:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/mdcoon/git/TellorCore/contracts/libraries/Utilities.sol",
        "file": "./libraries/Utilities.sol",
        "id": 61,
        "nodeType": "ImportDirective",
        "scope": 300,
        "sourceUnit": 5908,
        "src": "60:35:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/mdcoon/git/TellorCore/contracts/libraries/TellorLibrary.sol",
        "file": "./libraries/TellorLibrary.sol",
        "id": 62,
        "nodeType": "ImportDirective",
        "scope": 300,
        "sourceUnit": 5798,
        "src": "96:39:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": "@title Tellor Oracle System\n@dev Oracle contract where miners can submit the proof of work along with the value.\nThe logic for this contract is in TellorLibrary.sol",
        "fullyImplemented": true,
        "id": 299,
        "linearizedBaseContracts": [
          299
        ],
        "name": "Tellor",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 65,
            "libraryName": {
              "contractScope": null,
              "id": 63,
              "name": "SafeMath",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 976,
              "src": "401:8:2",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SafeMath_$976",
                "typeString": "library SafeMath"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "395:27:2",
            "typeName": {
              "id": 64,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "414:7:2",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "id": 68,
            "libraryName": {
              "contractScope": null,
              "id": 66,
              "name": "TellorLibrary",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 5797,
              "src": "434:13:2",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_TellorLibrary_$5797",
                "typeString": "library TellorLibrary"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "428:58:2",
            "typeName": {
              "contractScope": null,
              "id": 67,
              "name": "TellorLibrary.TellorStorageStruct",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2375,
              "src": "452:33:2",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_TellorStorageStruct_$2375_storage_ptr",
                "typeString": "struct TellorLibrary.TellorStorageStruct"
              }
            }
          },
          {
            "constant": false,
            "id": 70,
            "name": "tellor",
            "nodeType": "VariableDeclaration",
            "scope": 299,
            "src": "491:40:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_struct$_TellorStorageStruct_$2375_storage",
              "typeString": "struct TellorLibrary.TellorStorageStruct"
            },
            "typeName": {
              "contractScope": null,
              "id": 69,
              "name": "TellorLibrary.TellorStorageStruct",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2375,
              "src": "491:33:2",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_TellorStorageStruct_$2375_storage_ptr",
                "typeString": "struct TellorLibrary.TellorStorageStruct"
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 84,
              "nodeType": "Block",
              "src": "690:53:2",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 80,
                        "name": "_address",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 72,
                        "src": "719:8:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 81,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 74,
                        "src": "728:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 77,
                        "name": "tellor",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 70,
                        "src": "700:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TellorStorageStruct_$2375_storage",
                          "typeString": "struct TellorLibrary.TellorStorageStruct storage ref"
                        }
                      },
                      "id": 79,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "theLazyCoon",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2543,
                      "src": "700:18:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_delegatecall_nonpayable$_t_struct$_TellorStorageStruct_$2375_storage_ptr_$_t_address_$_t_uint256_$returns$__$bound_to$_t_struct$_TellorStorageStruct_$2375_storage_ptr_$",
                        "typeString": "function (struct TellorLibrary.TellorStorageStruct storage pointer,address,uint256)"
                      }
                    },
                    "id": 82,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "700:36:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 83,
                  "nodeType": "ExpressionStatement",
                  "src": "700:36:2"
                }
              ]
            },
            "documentation": null,
            "id": 85,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "theLazyCoon",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 75,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 72,
                  "name": "_address",
                  "nodeType": "VariableDeclaration",
                  "scope": 85,
                  "src": "651:16:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 71,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "651:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 74,
                  "name": "_amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 85,
                  "src": "669:12:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 73,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "669:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "650:32:2"
            },
            "returnParameters": {
              "id": 76,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "690:0:2"
            },
            "scope": 299,
            "src": "630:113:2",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 93,
              "nodeType": "Block",
              "src": "1019:47:2",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "argumentTypes": null,
                        "id": 88,
                        "name": "tellor",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 70,
                        "src": "1029:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TellorStorageStruct_$2375_storage",
                          "typeString": "struct TellorLibrary.TellorStorageStruct storage ref"
                        }
                      },
                      "id": 90,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "tellorPostConstructor",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2800,
                      "src": "1029:28:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_delegatecall_nonpayable$_t_struct$_TellorStorageStruct_$2375_storage_ptr_$returns$__$bound_to$_t_struct$_TellorStorageStruct_$2375_storage_ptr_$",
                        "typeString": "function (struct TellorLibrary.TellorStorageStruct storage pointer)"
                      }
                    },
                    "id": 91,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1029:30:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 92,
                  "nodeType": "ExpressionStatement",
                  "src": "1029:30:2"
                }
              ]
            },
            "documentation": null,
            "id": 94,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "tellorPostConstructor",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 86,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1007:2:2"
            },
            "returnParameters": {
              "id": 87,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1019:0:2"
            },
            "scope": 299,
            "src": "977:89:2",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 109,
              "nodeType": "Block",
              "src": "1379:56:2",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 105,
                        "name": "_spender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 96,
                        "src": "1411:8:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 106,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 98,
                        "src": "1420:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 103,
                        "name": "tellor",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 70,
                        "src": "1396:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TellorStorageStruct_$2375_storage",
                          "typeString": "struct TellorLibrary.TellorStorageStruct storage ref"
                        }
                      },
                      "id": 104,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "approve",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2898,
                      "src": "1396:14:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_delegatecall_nonpayable$_t_struct$_TellorStorageStruct_$2375_storage_ptr_$_t_address_$_t_uint256_$returns$_t_bool_$bound_to$_t_struct$_TellorStorageStruct_$2375_storage_ptr_$",
                        "typeString": "function (struct TellorLibrary.TellorStorageStruct storage pointer,address,uint256) returns (bool)"
                      }
                    },
                    "id": 107,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1396:32:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 102,
                  "id": 108,
                  "nodeType": "Return",
                  "src": "1389:39:2"
                }
              ]
            },
            "documentation": "@dev This function approves a _spender an _amount of tokens to use\n@param _spender address\n@param _amount amount the spender is being approved for\n@return true if spender appproved successfully",
            "id": 110,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "approve",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 99,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 96,
                  "name": "_spender",
                  "nodeType": "VariableDeclaration",
                  "scope": 110,
                  "src": "1323:16:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 95,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1323:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 98,
                  "name": "_amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 110,
                  "src": "1341:12:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 97,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1341:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1322:32:2"
            },
            "returnParameters": {
              "id": 102,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 101,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 110,
                  "src": "1373:4:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 100,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1373:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1372:6:2"
            },
            "scope": 299,
            "src": "1306:129:2",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 118,
              "nodeType": "Block",
              "src": "1552:38:2",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "argumentTypes": null,
                        "id": 113,
                        "name": "tellor",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 70,
                        "src": "1562:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TellorStorageStruct_$2375_storage",
                          "typeString": "struct TellorLibrary.TellorStorageStruct storage ref"
                        }
                      },
                      "id": 115,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "depositStake",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3214,
                      "src": "1562:19:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_delegatecall_nonpayable$_t_struct$_TellorStorageStruct_$2375_storage_ptr_$returns$__$bound_to$_t_struct$_TellorStorageStruct_$2375_storage_ptr_$",
                        "typeString": "function (struct TellorLibrary.TellorStorageStruct storage pointer)"
                      }
                    },
                    "id": 116,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1562:21:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 117,
                  "nodeType": "ExpressionStatement",
                  "src": "1562:21:2"
                }
              ]
            },
            "documentation": "@dev This function allows miners to deposit their stake.",
            "id": 119,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "depositStake",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 111,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1540:2:2"
            },
            "returnParameters": {
              "id": 112,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1552:0:2"
            },
            "scope": 299,
            "src": "1519:71:2",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 136,
              "nodeType": "Block",
              "src": "2142:71:2",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 131,
                        "name": "_requestId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 121,
                        "src": "2172:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 132,
                        "name": "_timestamp",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 123,
                        "src": "2183:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 133,
                        "name": "_minerIndex",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 125,
                        "src": "2194:11:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 128,
                        "name": "tellor",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 70,
                        "src": "2152:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TellorStorageStruct_$2375_storage",
                          "typeString": "struct TellorLibrary.TellorStorageStruct storage ref"
                        }
                      },
                      "id": 130,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "beginDispute",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3476,
                      "src": "2152:19:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_delegatecall_nonpayable$_t_struct$_TellorStorageStruct_$2375_storage_ptr_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$bound_to$_t_struct$_TellorStorageStruct_$2375_storage_ptr_$",
                        "typeString": "function (struct TellorLibrary.TellorStorageStruct storage pointer,uint256,uint256,uint256)"
                      }
                    },
                    "id": 134,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2152:54:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 135,
                  "nodeType": "ExpressionStatement",
                  "src": "2152:54:2"
                }
              ]
            },
            "documentation": "@dev Helps initialize a dispute by assigning it a disputeId \nwhen a miner returns a false on the validate array(in Tellor.ProofOfWork) it sends the \ninvalidated value information to POS voting\n@param _requestId being disputed\n@param _timestamp being disputed\n@param _minerIndex the index of the miner that submitted the value being disputed. Since each official value \nrequires 5 miners to submit a value.",
            "id": 137,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "beginDispute",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 126,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 121,
                  "name": "_requestId",
                  "nodeType": "VariableDeclaration",
                  "scope": 137,
                  "src": "2082:15:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 120,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "2082:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 123,
                  "name": "_timestamp",
                  "nodeType": "VariableDeclaration",
                  "scope": 137,
                  "src": "2099:15:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 122,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "2099:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 125,
                  "name": "_minerIndex",
                  "nodeType": "VariableDeclaration",
                  "scope": 137,
                  "src": "2115:16:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 124,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "2115:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2081:51:2"
            },
            "returnParameters": {
              "id": 127,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2142:0:2"
            },
            "scope": 299,
            "src": "2060:153:2",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 148,
              "nodeType": "Block",
              "src": "2407:58:2",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 145,
                        "name": "_propNewTellorAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 139,
                        "src": "2436:21:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 142,
                        "name": "tellor",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 70,
                        "src": "2417:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TellorStorageStruct_$2375_storage",
                          "typeString": "struct TellorLibrary.TellorStorageStruct storage ref"
                        }
                      },
                      "id": 144,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "proposeFork",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3659,
                      "src": "2417:18:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_TellorStorageStruct_$2375_storage_ptr_$_t_address_$returns$__$bound_to$_t_struct$_TellorStorageStruct_$2375_storage_ptr_$",
                        "typeString": "function (struct TellorLibrary.TellorStorageStruct storage pointer,address)"
                      }
                    },
                    "id": 146,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2417:41:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 147,
                  "nodeType": "ExpressionStatement",
                  "src": "2417:41:2"
                }
              ]
            },
            "documentation": "@dev Allows for a fork to be proposed\n@param _propNewTellorAddress address for new proposed Tellor",
            "id": 149,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "proposeFork",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 140,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 139,
                  "name": "_propNewTellorAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 149,
                  "src": "2367:29:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 138,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2367:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2366:31:2"
            },
            "returnParameters": {
              "id": 141,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2407:0:2"
            },
            "scope": 299,
            "src": "2346:119:2",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 163,
              "nodeType": "Block",
              "src": "2796:47:2",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 159,
                        "name": "_requestId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 151,
                        "src": "2820:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 160,
                        "name": "_tip",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 153,
                        "src": "2831:4:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 156,
                        "name": "tellor",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 70,
                        "src": "2806:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TellorStorageStruct_$2375_storage",
                          "typeString": "struct TellorLibrary.TellorStorageStruct storage ref"
                        }
                      },
                      "id": 158,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "addTip",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3713,
                      "src": "2806:13:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_delegatecall_nonpayable$_t_struct$_TellorStorageStruct_$2375_storage_ptr_$_t_uint256_$_t_uint256_$returns$__$bound_to$_t_struct$_TellorStorageStruct_$2375_storage_ptr_$",
                        "typeString": "function (struct TellorLibrary.TellorStorageStruct storage pointer,uint256,uint256)"
                      }
                    },
                    "id": 161,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2806:30:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 162,
                  "nodeType": "ExpressionStatement",
                  "src": "2806:30:2"
                }
              ]
            },
            "documentation": "@dev Add tip to Request value from oracle\n@param _requestId being requested to be mined\n@param _tip amount the requester is willing to pay to be get on queue. Miners\nmine the onDeckQueryHash, or the api with the highest payout pool",
            "id": 164,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "addTip",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 154,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 151,
                  "name": "_requestId",
                  "nodeType": "VariableDeclaration",
                  "scope": 164,
                  "src": "2759:15:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 150,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "2759:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 153,
                  "name": "_tip",
                  "nodeType": "VariableDeclaration",
                  "scope": 164,
                  "src": "2776:9:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 152,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "2776:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2758:28:2"
            },
            "returnParameters": {
              "id": 155,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2796:0:2"
            },
            "scope": 299,
            "src": "2743:100:2",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 187,
              "nodeType": "Block",
              "src": "3652:83:2",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 180,
                        "name": "_c_sapi",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 166,
                        "src": "3681:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 181,
                        "name": "_c_symbol",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 168,
                        "src": "3689:9:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 182,
                        "name": "_requestId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 170,
                        "src": "3699:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 183,
                        "name": "_granularity",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 172,
                        "src": "3710:12:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 184,
                        "name": "_tip",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 174,
                        "src": "3723:4:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        },
                        {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 177,
                        "name": "tellor",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 70,
                        "src": "3662:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TellorStorageStruct_$2375_storage",
                          "typeString": "struct TellorLibrary.TellorStorageStruct storage ref"
                        }
                      },
                      "id": 179,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "requestData",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3929,
                      "src": "3662:18:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_TellorStorageStruct_$2375_storage_ptr_$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$bound_to$_t_struct$_TellorStorageStruct_$2375_storage_ptr_$",
                        "typeString": "function (struct TellorLibrary.TellorStorageStruct storage pointer,string memory,string memory,uint256,uint256,uint256)"
                      }
                    },
                    "id": 185,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3662:66:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 186,
                  "nodeType": "ExpressionStatement",
                  "src": "3662:66:2"
                }
              ]
            },
            "documentation": "@dev Request to retreive value from oracle based on timestamp. The tip is not required to be \ngreater than 0 because there are no tokens in circulation for the initial(genesis) request \n@param _c_sapi string API being requested be mined\n@param _c_symbol is the short string symbol for the api request\n@param _requestId being requested be mined if it exist otherwise use zero(0)\n@param _granularity is the number of decimals miners should include on the submitted value\n@param _tip amount the requester is willing to pay to be get on queue. Miners\nmine the onDeckQueryHash, or the api with the highest payout pool",
            "id": 188,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "requestData",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 175,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 166,
                  "name": "_c_sapi",
                  "nodeType": "VariableDeclaration",
                  "scope": 188,
                  "src": "3547:23:2",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_calldata_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 165,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "3547:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 168,
                  "name": "_c_symbol",
                  "nodeType": "VariableDeclaration",
                  "scope": 188,
                  "src": "3571:25:2",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_calldata_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 167,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "3571:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 170,
                  "name": "_requestId",
                  "nodeType": "VariableDeclaration",
                  "scope": 188,
                  "src": "3597:15:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 169,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "3597:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 172,
                  "name": "_granularity",
                  "nodeType": "VariableDeclaration",
                  "scope": 188,
                  "src": "3613:17:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 171,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "3613:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 174,
                  "name": "_tip",
                  "nodeType": "VariableDeclaration",
                  "scope": 188,
                  "src": "3632:9:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 173,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "3632:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3546:96:2"
            },
            "returnParameters": {
              "id": 176,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3652:0:2"
            },
            "scope": 299,
            "src": "3526:209:2",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 196,
              "nodeType": "Block",
              "src": "4027:48:2",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "argumentTypes": null,
                        "id": 191,
                        "name": "tellor",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 70,
                        "src": "4037:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TellorStorageStruct_$2375_storage",
                          "typeString": "struct TellorLibrary.TellorStorageStruct storage ref"
                        }
                      },
                      "id": 193,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "requestStakingWithdraw",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3982,
                      "src": "4037:29:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_TellorStorageStruct_$2375_storage_ptr_$returns$__$bound_to$_t_struct$_TellorStorageStruct_$2375_storage_ptr_$",
                        "typeString": "function (struct TellorLibrary.TellorStorageStruct storage pointer)"
                      }
                    },
                    "id": 194,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4037:31:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 195,
                  "nodeType": "ExpressionStatement",
                  "src": "4037:31:2"
                }
              ]
            },
            "documentation": "@dev This function allows stakers to request to withdraw their stake (no longer stake) \nonce they lock for withdraw(stakes.currentStatus = 2) they are locked for 7 days before they \ncan withdraw the stake",
            "id": 197,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "requestStakingWithdraw",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 189,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4015:2:2"
            },
            "returnParameters": {
              "id": 190,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4027:0:2"
            },
            "scope": 299,
            "src": "3984:91:2",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 208,
              "nodeType": "Block",
              "src": "4215:46:2",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 205,
                        "name": "_disputeId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 199,
                        "src": "4243:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 202,
                        "name": "tellor",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 70,
                        "src": "4225:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TellorStorageStruct_$2375_storage",
                          "typeString": "struct TellorLibrary.TellorStorageStruct storage ref"
                        }
                      },
                      "id": 204,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "tallyVotes",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4242,
                      "src": "4225:17:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_TellorStorageStruct_$2375_storage_ptr_$_t_uint256_$returns$__$bound_to$_t_struct$_TellorStorageStruct_$2375_storage_ptr_$",
                        "typeString": "function (struct TellorLibrary.TellorStorageStruct storage pointer,uint256)"
                      }
                    },
                    "id": 206,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4225:29:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 207,
                  "nodeType": "ExpressionStatement",
                  "src": "4225:29:2"
                }
              ]
            },
            "documentation": "@dev tallies the votes.\n@param _disputeId is the dispute id",
            "id": 209,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "tallyVotes",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 200,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 199,
                  "name": "_disputeId",
                  "nodeType": "VariableDeclaration",
                  "scope": 209,
                  "src": "4189:15:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 198,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "4189:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4188:17:2"
            },
            "returnParameters": {
              "id": 201,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4215:0:2"
            },
            "scope": 299,
            "src": "4169:92:2",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 226,
              "nodeType": "Block",
              "src": "4602:70:2",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 221,
                        "name": "_nonce",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 211,
                        "src": "4640:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 222,
                        "name": "_requestId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 213,
                        "src": "4647:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 223,
                        "name": "_value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 215,
                        "src": "4658:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 218,
                        "name": "tellor",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 70,
                        "src": "4612:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TellorStorageStruct_$2375_storage",
                          "typeString": "struct TellorLibrary.TellorStorageStruct storage ref"
                        }
                      },
                      "id": 220,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "submitMiningSolution",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5192,
                      "src": "4612:27:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_TellorStorageStruct_$2375_storage_ptr_$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$__$bound_to$_t_struct$_TellorStorageStruct_$2375_storage_ptr_$",
                        "typeString": "function (struct TellorLibrary.TellorStorageStruct storage pointer,string memory,uint256,uint256)"
                      }
                    },
                    "id": 224,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4612:53:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 225,
                  "nodeType": "ExpressionStatement",
                  "src": "4612:53:2"
                }
              ]
            },
            "documentation": "@dev Proof of work is called by the miner when they submit the solution (proof of work and value)\n@param _nonce uint submitted by miner\n@param _requestId the apiId being mined\n@param _value of api query",
            "id": 227,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "submitMiningSolution",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 216,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 211,
                  "name": "_nonce",
                  "nodeType": "VariableDeclaration",
                  "scope": 227,
                  "src": "4540:22:2",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_calldata_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 210,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "4540:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 213,
                  "name": "_requestId",
                  "nodeType": "VariableDeclaration",
                  "scope": 227,
                  "src": "4564:15:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 212,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "4564:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 215,
                  "name": "_value",
                  "nodeType": "VariableDeclaration",
                  "scope": 227,
                  "src": "4581:11:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 214,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "4581:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4539:54:2"
            },
            "returnParameters": {
              "id": 217,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4602:0:2"
            },
            "scope": 299,
            "src": "4510:162:2",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 242,
              "nodeType": "Block",
              "src": "4958:52:2",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 238,
                        "name": "_to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 229,
                        "src": "4991:3:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 239,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 231,
                        "src": "4995:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 236,
                        "name": "tellor",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 70,
                        "src": "4975:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TellorStorageStruct_$2375_storage",
                          "typeString": "struct TellorLibrary.TellorStorageStruct storage ref"
                        }
                      },
                      "id": 237,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3498,
                      "src": "4975:15:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_TellorStorageStruct_$2375_storage_ptr_$_t_address_$_t_uint256_$returns$_t_bool_$bound_to$_t_struct$_TellorStorageStruct_$2375_storage_ptr_$",
                        "typeString": "function (struct TellorLibrary.TellorStorageStruct storage pointer,address,uint256) returns (bool)"
                      }
                    },
                    "id": 240,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4975:28:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 235,
                  "id": 241,
                  "nodeType": "Return",
                  "src": "4968:35:2"
                }
              ]
            },
            "documentation": "@dev Allows for a transfer of tokens to _to\n@param _to The address to send tokens to\n@param _amount The amount of tokens to send\n@return true if transfer is successful",
            "id": 243,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "transfer",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 232,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 229,
                  "name": "_to",
                  "nodeType": "VariableDeclaration",
                  "scope": 243,
                  "src": "4904:11:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 228,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4904:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 231,
                  "name": "_amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 243,
                  "src": "4917:15:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 230,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4917:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4903:30:2"
            },
            "returnParameters": {
              "id": 235,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 234,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 243,
                  "src": "4952:4:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 233,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "4952:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4951:6:2"
            },
            "scope": 299,
            "src": "4886:124:2",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 261,
              "nodeType": "Block",
              "src": "5446:62:2",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 256,
                        "name": "_from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 245,
                        "src": "5483:5:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 257,
                        "name": "_to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 247,
                        "src": "5489:3:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 258,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 249,
                        "src": "5493:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 254,
                        "name": "tellor",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 70,
                        "src": "5463:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TellorStorageStruct_$2375_storage",
                          "typeString": "struct TellorLibrary.TellorStorageStruct storage ref"
                        }
                      },
                      "id": 255,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3544,
                      "src": "5463:19:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_TellorStorageStruct_$2375_storage_ptr_$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$bound_to$_t_struct$_TellorStorageStruct_$2375_storage_ptr_$",
                        "typeString": "function (struct TellorLibrary.TellorStorageStruct storage pointer,address,address,uint256) returns (bool)"
                      }
                    },
                    "id": 259,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5463:38:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 253,
                  "id": 260,
                  "nodeType": "Return",
                  "src": "5456:45:2"
                }
              ]
            },
            "documentation": "@notice Send _amount tokens to _to from _from on the condition it\nis approved by _from\n@param _from The address holding the tokens being transferred\n@param _to The address of the recipient\n@param _amount The amount of tokens to be transferred\n@return True if the transfer was successful",
            "id": 262,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "transferFrom",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 250,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 245,
                  "name": "_from",
                  "nodeType": "VariableDeclaration",
                  "scope": 262,
                  "src": "5377:13:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 244,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5377:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 247,
                  "name": "_to",
                  "nodeType": "VariableDeclaration",
                  "scope": 262,
                  "src": "5392:11:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 246,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5392:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 249,
                  "name": "_amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 262,
                  "src": "5405:15:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 248,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5405:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "5376:45:2"
            },
            "returnParameters": {
              "id": 253,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 252,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 262,
                  "src": "5440:4:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 251,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "5440:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "5439:6:2"
            },
            "scope": 299,
            "src": "5355:153:2",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 273,
              "nodeType": "Block",
              "src": "5741:52:2",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 270,
                        "name": "_newOwner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 264,
                        "src": "5776:9:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 267,
                        "name": "tellor",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 70,
                        "src": "5751:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TellorStorageStruct_$2375_storage",
                          "typeString": "struct TellorLibrary.TellorStorageStruct storage ref"
                        }
                      },
                      "id": 269,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transferOwnership",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5232,
                      "src": "5751:24:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_TellorStorageStruct_$2375_storage_ptr_$_t_address_payable_$returns$__$bound_to$_t_struct$_TellorStorageStruct_$2375_storage_ptr_$",
                        "typeString": "function (struct TellorLibrary.TellorStorageStruct storage pointer,address payable)"
                      }
                    },
                    "id": 271,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5751:35:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 272,
                  "nodeType": "ExpressionStatement",
                  "src": "5751:35:2"
                }
              ]
            },
            "documentation": "@dev Allows the current owner to transfer control of the contract to a newOwner.\n@param _newOwner The address to transfer ownership to.",
            "id": 274,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "transferOwnership",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 265,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 264,
                  "name": "_newOwner",
                  "nodeType": "VariableDeclaration",
                  "scope": 274,
                  "src": "5705:25:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "typeName": {
                    "id": 263,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5705:15:2",
                    "stateMutability": "payable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "5704:27:2"
            },
            "returnParameters": {
              "id": 266,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5741:0:2"
            },
            "scope": 299,
            "src": "5678:115:2",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 288,
              "nodeType": "Block",
              "src": "6060:57:2",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 284,
                        "name": "_disputeId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 276,
                        "src": "6082:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 285,
                        "name": "_supportsDispute",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 278,
                        "src": "6093:16:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 281,
                        "name": "tellor",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 70,
                        "src": "6070:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TellorStorageStruct_$2375_storage",
                          "typeString": "struct TellorLibrary.TellorStorageStruct storage ref"
                        }
                      },
                      "id": 283,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "vote",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5748,
                      "src": "6070:11:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_TellorStorageStruct_$2375_storage_ptr_$_t_uint256_$_t_bool_$returns$__$bound_to$_t_struct$_TellorStorageStruct_$2375_storage_ptr_$",
                        "typeString": "function (struct TellorLibrary.TellorStorageStruct storage pointer,uint256,bool)"
                      }
                    },
                    "id": 286,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6070:40:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 287,
                  "nodeType": "ExpressionStatement",
                  "src": "6070:40:2"
                }
              ]
            },
            "documentation": "@dev Allows token holders to vote\n@param _disputeId is the dispute id\n@param _supportsDispute is the vote (true=the dispute has basis false = vote against dispute)",
            "id": 289,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "vote",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 279,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 276,
                  "name": "_disputeId",
                  "nodeType": "VariableDeclaration",
                  "scope": 289,
                  "src": "6011:15:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 275,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "6011:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 278,
                  "name": "_supportsDispute",
                  "nodeType": "VariableDeclaration",
                  "scope": 289,
                  "src": "6028:21:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 277,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "6028:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "6010:40:2"
            },
            "returnParameters": {
              "id": 280,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6060:0:2"
            },
            "scope": 299,
            "src": "5997:120:2",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 297,
              "nodeType": "Block",
              "src": "6278:39:2",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "argumentTypes": null,
                        "id": 292,
                        "name": "tellor",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 70,
                        "src": "6288:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TellorStorageStruct_$2375_storage",
                          "typeString": "struct TellorLibrary.TellorStorageStruct storage ref"
                        }
                      },
                      "id": 294,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "withdrawStake",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5796,
                      "src": "6288:20:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_TellorStorageStruct_$2375_storage_ptr_$returns$__$bound_to$_t_struct$_TellorStorageStruct_$2375_storage_ptr_$",
                        "typeString": "function (struct TellorLibrary.TellorStorageStruct storage pointer)"
                      }
                    },
                    "id": 295,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6288:22:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 296,
                  "nodeType": "ExpressionStatement",
                  "src": "6288:22:2"
                }
              ]
            },
            "documentation": "@dev This function allows users to withdraw their stake after a 7 day waiting period from request ",
            "id": 298,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "withdrawStake",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 290,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6266:2:2"
            },
            "returnParameters": {
              "id": 291,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6278:0:2"
            },
            "scope": 299,
            "src": "6244:73:2",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          }
        ],
        "scope": 300,
        "src": "351:5969:2"
      }
    ],
    "src": "0:6321:2"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.0+commit.1d4f565a.Emscripten.clang"
  },
  "networks": {
    "1556620279524": {
      "events": {
        "0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "name": "_owner",
              "type": "address"
            },
            {
              "indexed": true,
              "name": "_spender",
              "type": "address"
            },
            {
              "indexed": false,
              "name": "_value",
              "type": "uint256"
            }
          ],
          "name": "Approval",
          "type": "event",
          "signature": "0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925"
        },
        "0x6d7f869757848b19c8c2456e95cd98885bc6bed062fda4077bb07985e2f76cc9": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "name": "_sender",
              "type": "address"
            },
            {
              "indexed": false,
              "name": "_query",
              "type": "string"
            },
            {
              "indexed": false,
              "name": "_querySymbol",
              "type": "string"
            },
            {
              "indexed": false,
              "name": "_granularity",
              "type": "uint256"
            },
            {
              "indexed": true,
              "name": "_requestId",
              "type": "uint256"
            },
            {
              "indexed": false,
              "name": "_totalTips",
              "type": "uint256"
            }
          ],
          "name": "DataRequested",
          "type": "event",
          "signature": "0x6d7f869757848b19c8c2456e95cd98885bc6bed062fda4077bb07985e2f76cc9"
        },
        "0x21459c2f5447ebcf83a7f0a238c32c71076faef0d12295e771c0cb1e10434739": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "name": "_disputeID",
              "type": "uint256"
            },
            {
              "indexed": false,
              "name": "_result",
              "type": "int256"
            },
            {
              "indexed": true,
              "name": "_reportedMiner",
              "type": "address"
            },
            {
              "indexed": false,
              "name": "_reportingParty",
              "type": "address"
            },
            {
              "indexed": false,
              "name": "_active",
              "type": "bool"
            }
          ],
          "name": "DisputeVoteTallied",
          "type": "event",
          "signature": "0x21459c2f5447ebcf83a7f0a238c32c71076faef0d12295e771c0cb1e10434739"
        },
        "0x9e959738f09af22daede9ff9563f8edf3f5cec8e17ce60287c911c95fa767f42": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "name": "_currentChallenge",
              "type": "bytes32"
            },
            {
              "indexed": true,
              "name": "_currentRequestId",
              "type": "uint256"
            },
            {
              "indexed": false,
              "name": "_difficulty",
              "type": "uint256"
            },
            {
              "indexed": false,
              "name": "_multiplier",
              "type": "uint256"
            },
            {
              "indexed": false,
              "name": "_query",
              "type": "string"
            },
            {
              "indexed": false,
              "name": "_totalTips",
              "type": "uint256"
            }
          ],
          "name": "NewChallenge",
          "type": "event",
          "signature": "0x9e959738f09af22daede9ff9563f8edf3f5cec8e17ce60287c911c95fa767f42"
        },
        "0xeceec1aebf67772b2440120c4b4dc913a1fe1b865509219f9456785c23b9da64": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "name": "_disputeId",
              "type": "uint256"
            },
            {
              "indexed": true,
              "name": "_requestId",
              "type": "uint256"
            },
            {
              "indexed": false,
              "name": "_timestamp",
              "type": "uint256"
            },
            {
              "indexed": false,
              "name": "_miner",
              "type": "address"
            }
          ],
          "name": "NewDispute",
          "type": "event",
          "signature": "0xeceec1aebf67772b2440120c4b4dc913a1fe1b865509219f9456785c23b9da64"
        },
        "0x5ab383fe3e28263c839564bc7545520a7dd34b78cbd7ab21b2da5d2fd027bf6c": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "name": "_requestId",
              "type": "uint256"
            },
            {
              "indexed": false,
              "name": "_query",
              "type": "string"
            },
            {
              "indexed": false,
              "name": "_onDeckQueryHash",
              "type": "bytes32"
            },
            {
              "indexed": false,
              "name": "_onDeckTotalTips",
              "type": "uint256"
            }
          ],
          "name": "NewRequestOnDeck",
          "type": "event",
          "signature": "0x5ab383fe3e28263c839564bc7545520a7dd34b78cbd7ab21b2da5d2fd027bf6c"
        },
        "0x46d8ab1385f70e5a3673e97c23c764f7600f7ed7a09b6687deae7131d51752e2": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "name": "_sender",
              "type": "address"
            }
          ],
          "name": "NewStake",
          "type": "event",
          "signature": "0x46d8ab1385f70e5a3673e97c23c764f7600f7ed7a09b6687deae7131d51752e2"
        },
        "0xc2d1449eb0b6547aa426e09d9942a77fa4fc8cd3296305b3163e22452e0bcb8d": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "name": "_newTellor",
              "type": "address"
            }
          ],
          "name": "NewTellorAddress",
          "type": "event",
          "signature": "0xc2d1449eb0b6547aa426e09d9942a77fa4fc8cd3296305b3163e22452e0bcb8d"
        },
        "0xc509d04e0782579ee59912139246ccbdf6c36c43abd90591d912017f3467dd16": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "name": "_requestId",
              "type": "uint256"
            },
            {
              "indexed": false,
              "name": "_time",
              "type": "uint256"
            },
            {
              "indexed": false,
              "name": "_value",
              "type": "uint256"
            },
            {
              "indexed": false,
              "name": "_totalTips",
              "type": "uint256"
            },
            {
              "indexed": false,
              "name": "_currentChallenge",
              "type": "bytes32"
            }
          ],
          "name": "NewValue",
          "type": "event",
          "signature": "0xc509d04e0782579ee59912139246ccbdf6c36c43abd90591d912017f3467dd16"
        },
        "0xe6d63a2aee0aaed2ab49702313ce54114f2145af219d7db30d6624af9e6dffc4": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "name": "_miner",
              "type": "address"
            },
            {
              "indexed": false,
              "name": "_nonce",
              "type": "string"
            },
            {
              "indexed": true,
              "name": "_requestId",
              "type": "uint256"
            },
            {
              "indexed": false,
              "name": "_value",
              "type": "uint256"
            },
            {
              "indexed": false,
              "name": "_currentChallenge",
              "type": "bytes32"
            }
          ],
          "name": "NonceSubmitted",
          "type": "event",
          "signature": "0xe6d63a2aee0aaed2ab49702313ce54114f2145af219d7db30d6624af9e6dffc4"
        },
        "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "name": "_previousOwner",
              "type": "address"
            },
            {
              "indexed": true,
              "name": "_newOwner",
              "type": "address"
            }
          ],
          "name": "OwnershipTransferred",
          "type": "event",
          "signature": "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0"
        },
        "0x4a7934670bd8304e7da22378be1368f7c4fef17c5aee81804beda8638fe428ec": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "name": "_sender",
              "type": "address"
            }
          ],
          "name": "StakeWithdrawn",
          "type": "event",
          "signature": "0x4a7934670bd8304e7da22378be1368f7c4fef17c5aee81804beda8638fe428ec"
        },
        "0x453865710d0cb4b14ad25de371c860da196368895daa9662e5087711d14daecf": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "name": "_sender",
              "type": "address"
            }
          ],
          "name": "StakeWithdrawRequested",
          "type": "event",
          "signature": "0x453865710d0cb4b14ad25de371c860da196368895daa9662e5087711d14daecf"
        },
        "0xd32134405b68f6f7220f9c38ae310df1b648d16188006768d45be2f7c24e8820": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "name": "_sender",
              "type": "address"
            },
            {
              "indexed": true,
              "name": "_requestId",
              "type": "uint256"
            },
            {
              "indexed": false,
              "name": "_tip",
              "type": "uint256"
            },
            {
              "indexed": false,
              "name": "_totalTips",
              "type": "uint256"
            }
          ],
          "name": "TipAdded",
          "type": "event",
          "signature": "0xd32134405b68f6f7220f9c38ae310df1b648d16188006768d45be2f7c24e8820"
        },
        "0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "name": "_from",
              "type": "address"
            },
            {
              "indexed": true,
              "name": "_to",
              "type": "address"
            },
            {
              "indexed": false,
              "name": "_value",
              "type": "uint256"
            }
          ],
          "name": "Transfer",
          "type": "event",
          "signature": "0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef"
        },
        "0x86abfce99b7dd908bec0169288797f85049ec73cbe046ed9de818fab3a497ae0": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "name": "_disputeID",
              "type": "uint256"
            },
            {
              "indexed": false,
              "name": "_position",
              "type": "bool"
            },
            {
              "indexed": true,
              "name": "_voter",
              "type": "address"
            }
          ],
          "name": "Voted",
          "type": "event",
          "signature": "0x86abfce99b7dd908bec0169288797f85049ec73cbe046ed9de818fab3a497ae0"
        }
      },
      "links": {
        "TellorLibrary": "0xaAdE6084F8148ef50c2b1961A2fC0558C697dCE0"
      },
      "address": "0xd9Ad0E4E18F2430719E73b2f824C54CFA5D703b6",
      "transactionHash": "0xa084bfd3167b8e8066ca4b3a5057f00b3f2985bb9475dad633c4f18b713299e2"
    }
  },
  "schemaVersion": "3.0.6",
  "updatedAt": "2019-04-30T10:31:54.645Z",
  "devdoc": {
    "details": "Oracle contract where miners can submit the proof of work along with the value. The logic for this contract is in TellorLibrary.sol",
    "methods": {
      "addTip(uint256,uint256)": {
        "details": "Add tip to Request value from oracle",
        "params": {
          "_requestId": "being requested to be mined",
          "_tip": "amount the requester is willing to pay to be get on queue. Miners mine the onDeckQueryHash, or the api with the highest payout pool"
        }
      },
      "approve(address,uint256)": {
        "details": "This function approves a _spender an _amount of tokens to use",
        "params": {
          "_amount": "amount the spender is being approved for",
          "_spender": "address"
        },
        "return": "true if spender appproved successfully"
      },
      "beginDispute(uint256,uint256,uint256)": {
        "details": "Helps initialize a dispute by assigning it a disputeId  when a miner returns a false on the validate array(in Tellor.ProofOfWork) it sends the  invalidated value information to POS voting",
        "params": {
          "_minerIndex": "the index of the miner that submitted the value being disputed. Since each official value  requires 5 miners to submit a value.",
          "_requestId": "being disputed",
          "_timestamp": "being disputed"
        }
      },
      "depositStake()": {
        "details": "This function allows miners to deposit their stake."
      },
      "proposeFork(address)": {
        "details": "Allows for a fork to be proposed",
        "params": {
          "_propNewTellorAddress": "address for new proposed Tellor"
        }
      },
      "requestData(string,string,uint256,uint256,uint256)": {
        "details": "Request to retreive value from oracle based on timestamp. The tip is not required to be  greater than 0 because there are no tokens in circulation for the initial(genesis) request ",
        "params": {
          "_c_sapi": "string API being requested be mined",
          "_c_symbol": "is the short string symbol for the api request",
          "_granularity": "is the number of decimals miners should include on the submitted value",
          "_requestId": "being requested be mined if it exist otherwise use zero(0)",
          "_tip": "amount the requester is willing to pay to be get on queue. Miners mine the onDeckQueryHash, or the api with the highest payout pool"
        }
      },
      "requestStakingWithdraw()": {
        "details": "This function allows stakers to request to withdraw their stake (no longer stake)  once they lock for withdraw(stakes.currentStatus = 2) they are locked for 7 days before they  can withdraw the stake"
      },
      "submitMiningSolution(string,uint256,uint256)": {
        "details": "Proof of work is called by the miner when they submit the solution (proof of work and value)",
        "params": {
          "_nonce": "uint submitted by miner",
          "_requestId": "the apiId being mined",
          "_value": "of api query"
        }
      },
      "tallyVotes(uint256)": {
        "details": "tallies the votes.",
        "params": {
          "_disputeId": "is the dispute id"
        }
      },
      "transfer(address,uint256)": {
        "details": "Allows for a transfer of tokens to _to",
        "params": {
          "_amount": "The amount of tokens to send",
          "_to": "The address to send tokens to"
        },
        "return": "true if transfer is successful"
      },
      "transferFrom(address,address,uint256)": {
        "params": {
          "_amount": "The amount of tokens to be transferred",
          "_from": "The address holding the tokens being transferred",
          "_to": "The address of the recipient"
        },
        "return": "True if the transfer was successful"
      },
      "transferOwnership(address)": {
        "details": "Allows the current owner to transfer control of the contract to a newOwner.",
        "params": {
          "_newOwner": "The address to transfer ownership to."
        }
      },
      "vote(uint256,bool)": {
        "details": "Allows token holders to vote",
        "params": {
          "_disputeId": "is the dispute id",
          "_supportsDispute": "is the vote (true=the dispute has basis false = vote against dispute)"
        }
      },
      "withdrawStake()": {
        "details": "This function allows users to withdraw their stake after a 7 day waiting period from request "
      }
    },
    "title": "Tellor Oracle System"
  },
  "userdoc": {
    "methods": {
      "transferFrom(address,address,uint256)": {
        "notice": "Send _amount tokens to _to from _from on the condition it is approved by _from"
      }
    }
  }
}