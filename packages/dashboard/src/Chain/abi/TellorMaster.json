{
  "contractName": "TellorMaster",
  "abi": [
    {
      "constant": true,
      "inputs": [
        {
          "name": "_timestamp",
          "type": "uint256"
        }
      ],
      "name": "getRequestIdByTimestamp",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function",
      "signature": "0x0f0b424d"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_requestId",
          "type": "uint256"
        },
        {
          "name": "_timestamp",
          "type": "uint256"
        }
      ],
      "name": "getSubmissionsByTimestamp",
      "outputs": [
        {
          "name": "",
          "type": "uint256[5]"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function",
      "signature": "0x11c98512"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_data",
          "type": "bytes32"
        }
      ],
      "name": "getAddressVars",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function",
      "signature": "0x133bee5e"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function",
      "signature": "0x18160ddd"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getVariablesOnDeck",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        },
        {
          "name": "",
          "type": "uint256"
        },
        {
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function",
      "signature": "0x19e8e03b"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_request",
          "type": "bytes32"
        }
      ],
      "name": "getRequestIdByQueryHash",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function",
      "signature": "0x1db842f0"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_requestId",
          "type": "uint256"
        },
        {
          "name": "_timestamp",
          "type": "uint256"
        }
      ],
      "name": "isInDispute",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function",
      "signature": "0x3df0777b"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_requestId",
          "type": "uint256"
        }
      ],
      "name": "getNewValueCountbyRequestId",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function",
      "signature": "0x46eee1c4"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_user",
          "type": "address"
        },
        {
          "name": "_blockNumber",
          "type": "uint256"
        }
      ],
      "name": "balanceOfAt",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function",
      "signature": "0x4ee2cd7e"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_data",
          "type": "bytes32"
        }
      ],
      "name": "getUintVar",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function",
      "signature": "0x612c8f7f"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_index",
          "type": "uint256"
        }
      ],
      "name": "getRequestIdByRequestQIndex",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function",
      "signature": "0x6173c0b8"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_challenge",
          "type": "bytes32"
        },
        {
          "name": "_miner",
          "type": "address"
        }
      ],
      "name": "didMine",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function",
      "signature": "0x63bb82ad"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_requestId",
          "type": "uint256"
        },
        {
          "name": "_timestamp",
          "type": "uint256"
        }
      ],
      "name": "getMinersByRequestIdAndTimestamp",
      "outputs": [
        {
          "name": "",
          "type": "address[5]"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function",
      "signature": "0x69026d63"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_user",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function",
      "signature": "0x70a08231"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_staker",
          "type": "address"
        }
      ],
      "name": "getStakerInfo",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        },
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function",
      "signature": "0x733bdef0"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_requestID",
          "type": "uint256"
        },
        {
          "name": "_index",
          "type": "uint256"
        }
      ],
      "name": "getTimestampbyRequestIDandIndex",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function",
      "signature": "0x77fbb663"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_requestId",
          "type": "uint256"
        },
        {
          "name": "_timestamp",
          "type": "uint256"
        }
      ],
      "name": "retrieveData",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function",
      "signature": "0x93fa4915"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_user",
          "type": "address"
        },
        {
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "allowedToTrade",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function",
      "signature": "0x999cf26c"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getCurrentVariables",
      "outputs": [
        {
          "name": "",
          "type": "bytes32"
        },
        {
          "name": "",
          "type": "uint256"
        },
        {
          "name": "",
          "type": "uint256"
        },
        {
          "name": "",
          "type": "string"
        },
        {
          "name": "",
          "type": "uint256"
        },
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function",
      "signature": "0xa22e407a"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_disputeId",
          "type": "uint256"
        },
        {
          "name": "_address",
          "type": "address"
        }
      ],
      "name": "didVote",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function",
      "signature": "0xa7c438bc"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_disputeId",
          "type": "uint256"
        }
      ],
      "name": "getAllDisputeVars",
      "outputs": [
        {
          "name": "",
          "type": "bytes32"
        },
        {
          "name": "",
          "type": "bool"
        },
        {
          "name": "",
          "type": "bool"
        },
        {
          "name": "",
          "type": "bool"
        },
        {
          "name": "",
          "type": "address"
        },
        {
          "name": "",
          "type": "address"
        },
        {
          "name": "",
          "type": "address"
        },
        {
          "name": "",
          "type": "uint256[8]"
        },
        {
          "name": "",
          "type": "int256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function",
      "signature": "0xaf0b1327"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getRequestQ",
      "outputs": [
        {
          "name": "",
          "type": "uint256[51]"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function",
      "signature": "0xb5413029"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_requestId",
          "type": "uint256"
        },
        {
          "name": "_timestamp",
          "type": "uint256"
        }
      ],
      "name": "getMinedBlockNum",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function",
      "signature": "0xc775b542"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_hash",
          "type": "bytes32"
        }
      ],
      "name": "getDisputeIdByDisputeHash",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function",
      "signature": "0xda379941"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_user",
          "type": "address"
        },
        {
          "name": "_spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function",
      "signature": "0xdd62ed3e"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_requestId",
          "type": "uint256"
        }
      ],
      "name": "getRequestVars",
      "outputs": [
        {
          "name": "",
          "type": "string"
        },
        {
          "name": "",
          "type": "string"
        },
        {
          "name": "",
          "type": "bytes32"
        },
        {
          "name": "",
          "type": "uint256"
        },
        {
          "name": "",
          "type": "uint256"
        },
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function",
      "signature": "0xe1eee6d6"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getLastNewValue",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        },
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function",
      "signature": "0xfc7cf0a0"
    },
    {
      "inputs": [
        {
          "name": "_tellorContract",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor",
      "signature": "constructor"
    },
    {
      "payable": true,
      "stateMutability": "payable",
      "type": "fallback"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.5.0+commit.1d4f565a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":true,\"inputs\":[{\"name\":\"_timestamp\",\"type\":\"uint256\"}],\"name\":\"getRequestIdByTimestamp\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_requestId\",\"type\":\"uint256\"},{\"name\":\"_timestamp\",\"type\":\"uint256\"}],\"name\":\"getSubmissionsByTimestamp\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256[5]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_data\",\"type\":\"bytes32\"}],\"name\":\"getAddressVars\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getVariablesOnDeck\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"},{\"name\":\"\",\"type\":\"uint256\"},{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_request\",\"type\":\"bytes32\"}],\"name\":\"getRequestIdByQueryHash\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_requestId\",\"type\":\"uint256\"},{\"name\":\"_timestamp\",\"type\":\"uint256\"}],\"name\":\"isInDispute\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_requestId\",\"type\":\"uint256\"}],\"name\":\"getNewValueCountbyRequestId\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_user\",\"type\":\"address\"},{\"name\":\"_blockNumber\",\"type\":\"uint256\"}],\"name\":\"balanceOfAt\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_data\",\"type\":\"bytes32\"}],\"name\":\"getUintVar\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_index\",\"type\":\"uint256\"}],\"name\":\"getRequestIdByRequestQIndex\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_challenge\",\"type\":\"bytes32\"},{\"name\":\"_miner\",\"type\":\"address\"}],\"name\":\"didMine\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_requestId\",\"type\":\"uint256\"},{\"name\":\"_timestamp\",\"type\":\"uint256\"}],\"name\":\"getMinersByRequestIdAndTimestamp\",\"outputs\":[{\"name\":\"\",\"type\":\"address[5]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_staker\",\"type\":\"address\"}],\"name\":\"getStakerInfo\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"},{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_requestID\",\"type\":\"uint256\"},{\"name\":\"_index\",\"type\":\"uint256\"}],\"name\":\"getTimestampbyRequestIDandIndex\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_requestId\",\"type\":\"uint256\"},{\"name\":\"_timestamp\",\"type\":\"uint256\"}],\"name\":\"retrieveData\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_user\",\"type\":\"address\"},{\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"allowedToTrade\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getCurrentVariables\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes32\"},{\"name\":\"\",\"type\":\"uint256\"},{\"name\":\"\",\"type\":\"uint256\"},{\"name\":\"\",\"type\":\"string\"},{\"name\":\"\",\"type\":\"uint256\"},{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_disputeId\",\"type\":\"uint256\"},{\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"didVote\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_disputeId\",\"type\":\"uint256\"}],\"name\":\"getAllDisputeVars\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes32\"},{\"name\":\"\",\"type\":\"bool\"},{\"name\":\"\",\"type\":\"bool\"},{\"name\":\"\",\"type\":\"bool\"},{\"name\":\"\",\"type\":\"address\"},{\"name\":\"\",\"type\":\"address\"},{\"name\":\"\",\"type\":\"address\"},{\"name\":\"\",\"type\":\"uint256[8]\"},{\"name\":\"\",\"type\":\"int256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getRequestQ\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256[51]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_requestId\",\"type\":\"uint256\"},{\"name\":\"_timestamp\",\"type\":\"uint256\"}],\"name\":\"getMinedBlockNum\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_hash\",\"type\":\"bytes32\"}],\"name\":\"getDisputeIdByDisputeHash\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_user\",\"type\":\"address\"},{\"name\":\"_spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_requestId\",\"type\":\"uint256\"}],\"name\":\"getRequestVars\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"},{\"name\":\"\",\"type\":\"string\"},{\"name\":\"\",\"type\":\"bytes32\"},{\"name\":\"\",\"type\":\"uint256\"},{\"name\":\"\",\"type\":\"uint256\"},{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getLastNewValue\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"},{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"_tellorContract\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"}],\"devdoc\":{\"methods\":{\"allowance(address,address)\":{\"params\":{\"_spender\":\"address\",\"_user\":\"address\"},\"return\":\"Returns the remaining allowance of tokens granted to the _spender from the _user\"},\"balanceOf(address)\":{\"details\":\"Gets balance of owner specified\",\"params\":{\"_user\":\"is the owner address used to look up the balance\"},\"return\":\"Returns the balance associated with the passed in _user\"},\"balanceOfAt(address,uint256)\":{\"details\":\"Queries the balance of _user at a specific _blockNumber\",\"params\":{\"_blockNumber\":\"The block number when the balance is queried\",\"_user\":\"The address from which the balance will be retrieved\"},\"return\":\"The balance at _blockNumber\"},\"constructor\":{\"details\":\"The constructor sets the original `tellorStorageOwner` of the contract to the sender account.\"},\"didMine(bytes32,address)\":{\"details\":\"This function tells you if a given challenge has been completed by a given miner\",\"params\":{\"_challenge\":\"the challenge to search for\",\"_miner\":\"address that you want to know if they solved the challenge\"},\"return\":\"true if the _miner address provided solved the \"},\"didVote(uint256,address)\":{\"details\":\"Checks if an address voted in a dispute\",\"params\":{\"_address\":\"to look up\",\"_disputeId\":\"to look up\"},\"return\":\"bool of whether or not party voted\"},\"getAllDisputeVars(uint256)\":{\"details\":\"Gets all dispute variables\",\"params\":{\"_disputeId\":\"to look up\"},\"return\":\"address of reported mineraddress of reporting partydisputed apiIddisputed minimum execution dateuint number of votesuint blockNumber of voteuint index in disputeId arrayint count of the current tallybool of whether vote has been tallied\"},\"getCurrentVariables()\":{\"details\":\"Getter function for currentChallenge difficulty_level\",\"return\":\"current challenge, MiningApiID, level of difficulty_level\"},\"getDisputeIdByDisputeHash(bytes32)\":{\"details\":\"Checks if a given hash of miner,apiId has been disputed\",\"params\":{\"_hash\":\"of sha256(abi.encodePacked(_miners[2],_requestId));\"},\"return\":\"uint disputeId\"},\"getLastNewValue()\":{\"details\":\"Gets the a value for the latest timestamp available\",\"return\":\"value for timestamp of last proof of work submited\"},\"getMinedBlockNum(uint256,uint256)\":{\"details\":\"Gets blocknumber for mined timestamp \",\"params\":{\"_requestId\":\"to look up\",\"_timestamp\":\"is the timestamp to look up blocknumber\"},\"return\":\"uint of the blocknumber which the dispute was mined\"},\"getMinersByRequestIdAndTimestamp(uint256,uint256)\":{\"details\":\"Gets the 5 miners who mined the value for the specified apiId/_timestamp \",\"params\":{\"_requestId\":\"to look up\",\"_timestamp\":\"is the timestampt to look up miners for\"}},\"getRequestIdByQueryHash(bytes32)\":{\"details\":\"Getter function for apiId based on api hash\",\"params\":{\"_request\":\"string to check if it already has an apiId\"},\"return\":\"uint apiId\"},\"getRequestIdByRequestQIndex(uint256)\":{\"details\":\"Getter function for the apiId for the specified payoutPool index\",\"params\":{\"_index\":\"to look up the apiId\"},\"return\":\"apiId\"},\"getRequestIdByTimestamp(uint256)\":{\"details\":\"Getter function for apiId based on timestamp. Only one value is mined per timestamp and each timestamp can correspond to a different API. \",\"params\":{\"_timestamp\":\"to check APIId\"},\"return\":\"apiId\"},\"getRequestVars(uint256)\":{\"details\":\"Gets the API struct variables that are not mappings\",\"params\":{\"_requestId\":\"to look up\"},\"return\":\"string of api to querybytes32 hash of stringuint of index in PayoutPool arrayuint of current payout for this api\"},\"getSubmissionsByTimestamp(uint256,uint256)\":{\"details\":\"Gets the 5 miners who mined the value for the specified apiId/_timestamp \",\"params\":{\"_requestId\":\"to look up\",\"_timestamp\":\"is the timestampt to look up miners for\"}},\"getVariablesOnDeck()\":{\"details\":\"Getter function for api on queue\",\"return\":\"apionQ hash, id, payout, and api string\"},\"isInDispute(uint256,uint256)\":{\"details\":\"Gets the 5 miners who mined the value for the specified apiId/_timestamp \",\"params\":{\"_requestId\":\"to look up\",\"_timestamp\":\"is the timestampt to look up miners for\"}},\"retrieveData(uint256,uint256)\":{\"details\":\"Retreive value from oracle based on timestamp\",\"params\":{\"_requestId\":\"being requested\",\"_timestamp\":\"to retreive data/value from\"},\"return\":\"value for timestamp submitted\"},\"totalSupply()\":{\"details\":\"Getter for the total_supply of oracle tokens\",\"return\":\"total supply\"}}},\"userdoc\":{\"methods\":{\"allowedToTrade(address,uint256)\":{\"notice\":\"dev This function returns whether or not a given user is allowed to trade a given amount   param address of user param address of amount\"},\"getStakerInfo(address)\":{\"notice\":\"dev This function allows users to retireve all information about a staker param address of staker enquiring about return uint current state of staker return uint startDate of staking\"}}}},\"settings\":{\"compilationTarget\":{\"/Users/mdcoon/git/TellorCore/contracts/TellorMaster.sol\":\"TellorMaster\"},\"evmVersion\":\"byzantium\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/Users/mdcoon/git/TellorCore/contracts/TellorGetters.sol\":{\"keccak256\":\"0x0dd7c43a6457d61da059621075ad829be41e2305eb541fc2966e0a64f71e70d0\",\"urls\":[\"bzzr://a4208bd21dd0b545e07b998d9361eed651a042fc026e53efb695d9f9d4888783\"]},\"/Users/mdcoon/git/TellorCore/contracts/TellorMaster.sol\":{\"keccak256\":\"0x8739810d1f59a70f9606bdcc1d3c666f49a6baa0ad5d795470c19639a0c01229\",\"urls\":[\"bzzr://13f9a006056d95fd26135916e879508533869ee58a1442a640476af9c5589ed3\"]},\"/Users/mdcoon/git/TellorCore/contracts/libraries/SafeMath.sol\":{\"keccak256\":\"0x64bb591a8002f82f9af3e8c97f70e406d5750c6ddd2afb4fe4570c6f22a81b35\",\"urls\":[\"bzzr://b8a1b883348f79a20cb5e568af0857a5032c6ccfba56efb088460c3352f39f3b\"]},\"/Users/mdcoon/git/TellorCore/contracts/libraries/TellorGettersLibrary.sol\":{\"keccak256\":\"0x3292f36c19191854ba39f011911600aafe57921437df5efa9359bd150b516b90\",\"urls\":[\"bzzr://d483afdd7440a4ab07b307b51b8422218c05922152b1484437a45e4c439eb009\"]},\"/Users/mdcoon/git/TellorCore/contracts/libraries/TellorLibrary.sol\":{\"keccak256\":\"0x9d60724083f52c6b0b70155eb4710aa1f490a1598e9008a0a5f441d13cc853c8\",\"urls\":[\"bzzr://ad62b90f51991bf7011573f4ed117dd3cbb8e9ff65a0ae46606ff59c2d70b068\"]},\"/Users/mdcoon/git/TellorCore/contracts/libraries/Utilities.sol\":{\"keccak256\":\"0xfde2134936e4e2f0a1090efabf773bf311ed03a62d9a5bada406bd756a82686a\",\"urls\":[\"bzzr://4de3e5dda475359778df2982d3095c02b70e8437078fe8c45399bcacc8749cad\"]}},\"version\":1}",
  "bytecode": "0x60806040523480156200001157600080fd5b5060405160208062002be6833981018060405260208110156200003357600080fd5b8101908080519060200190929190505050620000688160006200006f6401000000000262002849179091906401000000009004565b50620001e8565b3382604701600060405180807f5f6f776e6572000000000000000000000000000000000000000000000000000081525060060190506040518091039020815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508082604701600060405180807f74656c6c6f72436f6e7472616374000000000000000000000000000000000000815250600e0190506040518091039020815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507fc2d1449eb0b6547aa426e09d9942a77fa4fc8cd3296305b3163e22452e0bcb8d81604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390a15050565b6129ee80620001f86000396000f3fe60806040526004361061015f576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff1680630f0b424d146101f357806311c9851214610242578063133bee5e146102c357806318160ddd1461033e57806319e8e03b146103695780631db842f0146104075780633df0777b1461045657806346eee1c4146104b35780634ee2cd7e14610502578063612c8f7f146105715780636173c0b8146105c057806363bb82ad1461060f57806369026d631461068257806370a0823114610703578063733bdef01461076857806377fbb663146107d457806393fa49151461082d578063999cf26c14610886578063a22e407a146108f9578063a7c438bc146109ac578063af0b132714610a1f578063b541302914610b5e578063c775b54214610bb1578063da37994114610c0a578063dd62ed3e14610c59578063e1eee6d614610cde578063fc7cf0a014610e1a575b600080604701600060405180807f74656c6c6f72436f6e7472616374000000000000000000000000000000000000815250600e0190506040518091039020815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506040513660008237602081368385600019f480600081146101ee57602083f35b602083fd5b3480156101ff57600080fd5b5061022c6004803603602081101561021657600080fd5b8101908080359060200190929190505050610e50565b6040518082815260200191505060405180910390f35b34801561024e57600080fd5b506102856004803603604081101561026557600080fd5b810190808035906020019092919080359060200190929190505050610e6d565b6040518082600560200280838360005b838110156102b0578082015181840152602081019050610295565b5050505090500191505060405180910390f35b3480156102cf57600080fd5b506102fc600480360360208110156102e657600080fd5b8101908080359060200190929190505050610e93565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561034a57600080fd5b50610353610eb0565b6040518082815260200191505060405180910390f35b34801561037557600080fd5b5061037e610ec1565b6040518084815260200183815260200180602001828103825283818151815260200191508051906020019080838360005b838110156103ca5780820151818401526020810190506103af565b50505050905090810190601f1680156103f75780820380516001836020036101000a031916815260200191505b5094505050505060405180910390f35b34801561041357600080fd5b506104406004803603602081101561042a57600080fd5b8101908080359060200190929190505050610edb565b6040518082815260200191505060405180910390f35b34801561046257600080fd5b506104996004803603604081101561047957600080fd5b810190808035906020019092919080359060200190929190505050610ef8565b604051808215151515815260200191505060405180910390f35b3480156104bf57600080fd5b506104ec600480360360208110156104d657600080fd5b8101908080359060200190929190505050610f18565b6040518082815260200191505060405180910390f35b34801561050e57600080fd5b5061055b6004803603604081101561052557600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610f35565b6040518082815260200191505060405180910390f35b34801561057d57600080fd5b506105aa6004803603602081101561059457600080fd5b8101908080359060200190929190505050610f55565b6040518082815260200191505060405180910390f35b3480156105cc57600080fd5b506105f9600480360360208110156105e357600080fd5b8101908080359060200190929190505050610f72565b6040518082815260200191505060405180910390f35b34801561061b57600080fd5b506106686004803603604081101561063257600080fd5b8101908080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610f8f565b604051808215151515815260200191505060405180910390f35b34801561068e57600080fd5b506106c5600480360360408110156106a557600080fd5b810190808035906020019092919080359060200190929190505050610faf565b6040518082600560200280838360005b838110156106f05780820151818401526020810190506106d5565b5050505090500191505060405180910390f35b34801561070f57600080fd5b506107526004803603602081101561072657600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610fd5565b6040518082815260200191505060405180910390f35b34801561077457600080fd5b506107b76004803603602081101561078b57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610ff2565b604051808381526020018281526020019250505060405180910390f35b3480156107e057600080fd5b50610817600480360360408110156107f757600080fd5b810190808035906020019092919080359060200190929190505050611012565b6040518082815260200191505060405180910390f35b34801561083957600080fd5b506108706004803603604081101561085057600080fd5b810190808035906020019092919080359060200190929190505050611032565b6040518082815260200191505060405180910390f35b34801561089257600080fd5b506108df600480360360408110156108a957600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050611052565b604051808215151515815260200191505060405180910390f35b34801561090557600080fd5b5061090e611072565b6040518087815260200186815260200185815260200180602001848152602001838152602001828103825285818151815260200191508051906020019080838360005b8381101561096c578082015181840152602081019050610951565b50505050905090810190601f1680156109995780820380516001836020036101000a031916815260200191505b5097505050505050505060405180910390f35b3480156109b857600080fd5b50610a05600480360360408110156109cf57600080fd5b8101908080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061109a565b604051808215151515815260200191505060405180910390f35b348015610a2b57600080fd5b50610a5860048036036020811015610a4257600080fd5b81019080803590602001909291905050506110ba565b604051808a81526020018915151515815260200188151515158152602001871515151581526020018673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200183600860200280838360005b83811015610b3d578082015181840152602081019050610b22565b50505050905001828152602001995050505050505050505060405180910390f35b348015610b6a57600080fd5b50610b73611102565b6040518082603360200280838360005b83811015610b9e578082015181840152602081019050610b83565b5050505090500191505060405180910390f35b348015610bbd57600080fd5b50610bf460048036036040811015610bd457600080fd5b810190808035906020019092919080359060200190929190505050611119565b6040518082815260200191505060405180910390f35b348015610c1657600080fd5b50610c4360048036036020811015610c2d57600080fd5b8101908080359060200190929190505050611139565b6040518082815260200191505060405180910390f35b348015610c6557600080fd5b50610cc860048036036040811015610c7c57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611156565b6040518082815260200191505060405180910390f35b348015610cea57600080fd5b50610d1760048036036020811015610d0157600080fd5b8101908080359060200190929190505050611270565b604051808060200180602001878152602001868152602001858152602001848152602001838103835289818151815260200191508051906020019080838360005b83811015610d73578082015181840152602081019050610d58565b50505050905090810190601f168015610da05780820380516001836020036101000a031916815260200191505b50838103825288818151815260200191508051906020019080838360005b83811015610dd9578082015181840152602081019050610dbe565b50505050905090810190601f168015610e065780820380516001836020036101000a031916815260200191505b509850505050505050505060405180910390f35b348015610e2657600080fd5b50610e2f6112a2565b60405180838152602001821515151581526020019250505060405180910390f35b6000610e668260006112b790919063ffffffff16565b9050919050565b610e756127bb565b610e8b838360006112d79092919063ffffffff16565b905092915050565b6000610ea982600061134d90919063ffffffff16565b9050919050565b6000610ebc600061138d565b905090565b6000806060610ed060006113e1565b925092509250909192565b6000610ef182600061158790919063ffffffff16565b9050919050565b6000610f10838360006115a79092919063ffffffff16565b905092915050565b6000610f2e8260006115e990919063ffffffff16565b9050919050565b6000610f4d8383600061160f9092919063ffffffff16565b905092915050565b6000610f6b82600061195290919063ffffffff16565b9050919050565b6000610f8882600061197290919063ffffffff16565b9050919050565b6000610fa7838360006119929092919063ffffffff16565b905092915050565b610fb76127de565b610fcd838360006119fd9092919063ffffffff16565b905092915050565b6000610feb826000611aa990919063ffffffff16565b9050919050565b600080611009836000611abe90919063ffffffff16565b91509150915091565b600061102a83836000611b569092919063ffffffff16565b905092915050565b600061104a83836000611b919092919063ffffffff16565b905092915050565b600061106a83836000611bc69092919063ffffffff16565b905092915050565b600080600060606000806110866000611cde565b955095509550955095509550909192939495565b60006110b283836000611fe89092919063ffffffff16565b905092915050565b60008060008060008060006110cd612801565b60006110e38a600061205690919063ffffffff16565b9850985098509850985098509850985098509193959799909294969850565b61110a612825565b61111460006123dd565b905090565b60006111318383600061242c9092919063ffffffff16565b905092915050565b600061114f82600061246190919063ffffffff16565b9050919050565b60008073__TellorGettersLibrary__________________63912c0e65909185856040518463ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808481526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001935050505060206040518083038186803b15801561122d57600080fd5b505af4158015611241573d6000803e3d6000fd5b505050506040513d602081101561125757600080fd5b8101908080519060200190929190505050905092915050565b60608060008060008061128d87600061248190919063ffffffff16565b95509550955095509550955091939550919395565b6000806112af60006126e0565b915091509091565b600082604a01600083815260200190815260200160002054905092915050565b6112df6127bb565b836050016000848152602001908152602001600020600901600083815260200190815260200160002060058060200260405190810160405280929190826005801561133f576020028201915b81548152602001906001019080831161132b575b505050505090509392505050565b600082604701600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905092915050565b600081604801600060405180807f746f74616c5f737570706c790000000000000000000000000000000000000000815250600c01905060405180910390208152602001908152602001600020549050919050565b600080606083604801600060405180807f6f6e4465636b5265717565737449640000000000000000000000000000000000815250600f019050604051809103902081526020019081526020016000205484604801600060405180807f6f6e4465636b546f74616c546970730000000000000000000000000000000000815250600f019050604051809103902081526020019081526020016000205485605001600087604801600060405180807f6f6e4465636b5265717565737449640000000000000000000000000000000000815250600f01905060405180910390208152602001908152602001600020548152602001908152602001600020600001808054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156115735780601f1061154857610100808354040283529160200191611573565b820191906000526020600020905b81548152906001019060200180831161155657829003601f168201915b505050505090509250925092509193909250565b600082605101600083815260200190815260200160002054905092915050565b6000836050016000848152602001908152602001600020600701600083815260200190815260200160002060009054906101000a900460ff1690509392505050565b600082605001600083815260200190815260200160002060030180549050905092915050565b60008084604d0160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208054905014806116ec57508184604d0160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008154811015156116ae57fe5b9060005260206000200160000160009054906101000a90046fffffffffffffffffffffffffffffffff166fffffffffffffffffffffffffffffffff16115b156116fa576000905061194b565b600084604d0160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020905060008180549050141561175657600091505061194b565b80600182805490500381548110151561176b57fe5b9060005260206000200160000160009054906101000a90046fffffffffffffffffffffffffffffffff166fffffffffffffffffffffffffffffffff1683101515611808578060018280549050038154811015156117c457fe5b9060005260206000200160000160109054906101000a90046fffffffffffffffffffffffffffffffff166fffffffffffffffffffffffffffffffff1691505061194b565b80600081548110151561181757fe5b9060005260206000200160000160009054906101000a90046fffffffffffffffffffffffffffffffff166fffffffffffffffffffffffffffffffff1683101561186457600091505061194b565b60008090506000600183805490500390505b818111156118fb576000600260018484010181151561189157fe5b0490508584828154811015156118a357fe5b9060005260206000200160000160009054906101000a90046fffffffffffffffffffffffffffffffff166fffffffffffffffffffffffffffffffff161115156118ee578092506118f5565b6001810391505b50611876565b828281548110151561190957fe5b9060005260206000200160000160109054906101000a90046fffffffffffffffffffffffffffffffff166fffffffffffffffffffffffffffffffff1693505050505b9392505050565b600082604801600083815260200190815260200160002054905092915050565b600082604b01600083815260200190815260200160002054905092915050565b600083604901600084815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1690509392505050565b611a056127de565b8360500160008481526020019081526020016000206008016000838152602001908152602001600020600580602002604051908101604052809291908260058015611a9b576020028201915b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311611a51575b505050505090509392505050565b6000611ab683834361160f565b905092915050565b60008083604f0160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000015484604f0160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010154915091509250929050565b600083605001600084815260200190815260200160002060030182815481101515611b7d57fe5b906000526020600020015490509392505050565b600083605001600084815260200190815260200160002060060160008381526020019081526020016000205490509392505050565b60008084604f0160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600001541115611ca3576000611c8e83611c8087604801600060405180807f7374616b65416d6f756e74000000000000000000000000000000000000000000815250600b0190506040518091039020815260200190815260200160002054611c728989611aa9565b6127a290919063ffffffff16565b6127a290919063ffffffff16565b101515611c9e5760019050611cd7565b611cd2565b6000611cc183611cb38787611aa9565b6127a290919063ffffffff16565b101515611cd15760019050611cd7565b5b600090505b9392505050565b60008060006060600080866000015487604801600060405180807f63757272656e74526571756573744964000000000000000000000000000000008152506010019050604051809103902081526020019081526020016000205488604801600060405180807f646966666963756c747900000000000000000000000000000000000000000000815250600a01905060405180910390208152602001908152602001600020548960500160008b604801600060405180807f63757272656e74526571756573744964000000000000000000000000000000008152506010019050604051809103902081526020019081526020016000205481526020019081526020016000206000018a60500160008c604801600060405180807f63757272656e7452657175657374496400000000000000000000000000000000815250601001905060405180910390208152602001908152602001600020548152602001908152602001600020600401600060405180807f6772616e756c6172697479000000000000000000000000000000000000000000815250600b01905060405180910390208152602001908152602001600020548b60500160008d604801600060405180807f63757272656e7452657175657374496400000000000000000000000000000000815250601001905060405180910390208152602001908152602001600020548152602001908152602001600020600401600060405180807f746f74616c54697000000000000000000000000000000000000000000000000081525060080190506040518091039020815260200190815260200160002054828054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015611fcc5780601f10611fa157610100808354040283529160200191611fcc565b820191906000526020600020905b815481529060010190602001808311611faf57829003601f168201915b5050505050925095509550955095509550955091939550919395565b600083604c01600084815260200190815260200160002060060160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1690509392505050565b6000806000806000806000612069612801565b6000808b604c0160008c8152602001908152602001600020905080600001548160020160009054906101000a900460ff168260020160019054906101000a900460ff168360020160029054906101000a900460ff168460020160039054906101000a900473ffffffffffffffffffffffffffffffffffffffff168560030160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff168660040160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166101006040519081016040528089600501600060405180807f726571756573744964000000000000000000000000000000000000000000000081525060090190506040518091039020815260200190815260200160002054815260200189600501600060405180807f74696d657374616d70000000000000000000000000000000000000000000000081525060090190506040518091039020815260200190815260200160002054815260200189600501600060405180807f76616c756500000000000000000000000000000000000000000000000000000081525060050190506040518091039020815260200190815260200160002054815260200189600501600060405180807f6d696e457865637574696f6e446174650000000000000000000000000000000081525060100190506040518091039020815260200190815260200160002054815260200189600501600060405180807f6e756d6265724f66566f74657300000000000000000000000000000000000000815250600d0190506040518091039020815260200190815260200160002054815260200189600501600060405180807f626c6f636b4e756d626572000000000000000000000000000000000000000000815250600b0190506040518091039020815260200190815260200160002054815260200189600501600060405180807f6d696e6572536c6f74000000000000000000000000000000000000000000000081525060090190506040518091039020815260200190815260200160002054815260200189600501600060405180807f71756f72756d0000000000000000000000000000000000000000000000000000815250600601905060405180910390208152602001908152602001600020548152508860010154995099509950995099509950995099509950509295985092959850929598565b6123e5612825565b81600901603380602002604051908101604052809291908260338015612420576020028201915b81548152602001906001019080831161240c575b50505050509050919050565b600083605001600084815260200190815260200160002060050160008381526020019081526020016000205490509392505050565b600082605201600083815260200190815260200160002054905092915050565b606080600080600080600088605001600089815260200190815260200160002090508060000181600101826002015483600401600060405180807f6772616e756c6172697479000000000000000000000000000000000000000000815250600b019050604051809103902081526020019081526020016000205484600401600060405180807f7265717565737451506f736974696f6e000000000000000000000000000000008152506010019050604051809103902081526020019081526020016000205485600401600060405180807f746f74616c54697000000000000000000000000000000000000000000000000081525060080190506040518091039020815260200190815260200160002054858054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156126265780601f106125fb57610100808354040283529160200191612626565b820191906000526020600020905b81548152906001019060200180831161260957829003601f168201915b50505050509550848054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156126c25780601f10612697576101008083540402835291602001916126c2565b820191906000526020600020905b8154815290600101906020018083116126a557829003601f168201915b50505050509450965096509650965096509650509295509295509295565b6000806127978384604a01600086604801600060405180807f74696d654f664c6173744e657756616c756500000000000000000000000000008152506012019050604051809103902081526020019081526020016000205481526020019081526020016000205485604801600060405180807f74696d654f664c6173744e657756616c7565000000000000000000000000000081525060120190506040518091039020815260200190815260200160002054611b91565b600191509150915091565b60008282111515156127b057fe5b818303905092915050565b60a060405190810160405280600590602082028038833980820191505090505090565b60a060405190810160405280600590602082028038833980820191505090505090565b61010060405190810160405280600890602082028038833980820191505090505090565b61066060405190810160405280603390602082028038833980820191505090505090565b3382604701600060405180807f5f6f776e6572000000000000000000000000000000000000000000000000000081525060060190506040518091039020815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508082604701600060405180807f74656c6c6f72436f6e7472616374000000000000000000000000000000000000815250600e0190506040518091039020815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507fc2d1449eb0b6547aa426e09d9942a77fa4fc8cd3296305b3163e22452e0bcb8d81604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390a1505056fea165627a7a72305820b20be1536f85549e7978e5185b0bd7fb530abefaf6493776fa85c2b666c0ac940029",
  "deployedBytecode": "0x60806040526004361061015f576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff1680630f0b424d146101f357806311c9851214610242578063133bee5e146102c357806318160ddd1461033e57806319e8e03b146103695780631db842f0146104075780633df0777b1461045657806346eee1c4146104b35780634ee2cd7e14610502578063612c8f7f146105715780636173c0b8146105c057806363bb82ad1461060f57806369026d631461068257806370a0823114610703578063733bdef01461076857806377fbb663146107d457806393fa49151461082d578063999cf26c14610886578063a22e407a146108f9578063a7c438bc146109ac578063af0b132714610a1f578063b541302914610b5e578063c775b54214610bb1578063da37994114610c0a578063dd62ed3e14610c59578063e1eee6d614610cde578063fc7cf0a014610e1a575b600080604701600060405180807f74656c6c6f72436f6e7472616374000000000000000000000000000000000000815250600e0190506040518091039020815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506040513660008237602081368385600019f480600081146101ee57602083f35b602083fd5b3480156101ff57600080fd5b5061022c6004803603602081101561021657600080fd5b8101908080359060200190929190505050610e50565b6040518082815260200191505060405180910390f35b34801561024e57600080fd5b506102856004803603604081101561026557600080fd5b810190808035906020019092919080359060200190929190505050610e6d565b6040518082600560200280838360005b838110156102b0578082015181840152602081019050610295565b5050505090500191505060405180910390f35b3480156102cf57600080fd5b506102fc600480360360208110156102e657600080fd5b8101908080359060200190929190505050610e93565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561034a57600080fd5b50610353610eb0565b6040518082815260200191505060405180910390f35b34801561037557600080fd5b5061037e610ec1565b6040518084815260200183815260200180602001828103825283818151815260200191508051906020019080838360005b838110156103ca5780820151818401526020810190506103af565b50505050905090810190601f1680156103f75780820380516001836020036101000a031916815260200191505b5094505050505060405180910390f35b34801561041357600080fd5b506104406004803603602081101561042a57600080fd5b8101908080359060200190929190505050610edb565b6040518082815260200191505060405180910390f35b34801561046257600080fd5b506104996004803603604081101561047957600080fd5b810190808035906020019092919080359060200190929190505050610ef8565b604051808215151515815260200191505060405180910390f35b3480156104bf57600080fd5b506104ec600480360360208110156104d657600080fd5b8101908080359060200190929190505050610f18565b6040518082815260200191505060405180910390f35b34801561050e57600080fd5b5061055b6004803603604081101561052557600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610f35565b6040518082815260200191505060405180910390f35b34801561057d57600080fd5b506105aa6004803603602081101561059457600080fd5b8101908080359060200190929190505050610f55565b6040518082815260200191505060405180910390f35b3480156105cc57600080fd5b506105f9600480360360208110156105e357600080fd5b8101908080359060200190929190505050610f72565b6040518082815260200191505060405180910390f35b34801561061b57600080fd5b506106686004803603604081101561063257600080fd5b8101908080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610f8f565b604051808215151515815260200191505060405180910390f35b34801561068e57600080fd5b506106c5600480360360408110156106a557600080fd5b810190808035906020019092919080359060200190929190505050610faf565b6040518082600560200280838360005b838110156106f05780820151818401526020810190506106d5565b5050505090500191505060405180910390f35b34801561070f57600080fd5b506107526004803603602081101561072657600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610fd5565b6040518082815260200191505060405180910390f35b34801561077457600080fd5b506107b76004803603602081101561078b57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610ff2565b604051808381526020018281526020019250505060405180910390f35b3480156107e057600080fd5b50610817600480360360408110156107f757600080fd5b810190808035906020019092919080359060200190929190505050611012565b6040518082815260200191505060405180910390f35b34801561083957600080fd5b506108706004803603604081101561085057600080fd5b810190808035906020019092919080359060200190929190505050611032565b6040518082815260200191505060405180910390f35b34801561089257600080fd5b506108df600480360360408110156108a957600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050611052565b604051808215151515815260200191505060405180910390f35b34801561090557600080fd5b5061090e611072565b6040518087815260200186815260200185815260200180602001848152602001838152602001828103825285818151815260200191508051906020019080838360005b8381101561096c578082015181840152602081019050610951565b50505050905090810190601f1680156109995780820380516001836020036101000a031916815260200191505b5097505050505050505060405180910390f35b3480156109b857600080fd5b50610a05600480360360408110156109cf57600080fd5b8101908080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061109a565b604051808215151515815260200191505060405180910390f35b348015610a2b57600080fd5b50610a5860048036036020811015610a4257600080fd5b81019080803590602001909291905050506110ba565b604051808a81526020018915151515815260200188151515158152602001871515151581526020018673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200183600860200280838360005b83811015610b3d578082015181840152602081019050610b22565b50505050905001828152602001995050505050505050505060405180910390f35b348015610b6a57600080fd5b50610b73611102565b6040518082603360200280838360005b83811015610b9e578082015181840152602081019050610b83565b5050505090500191505060405180910390f35b348015610bbd57600080fd5b50610bf460048036036040811015610bd457600080fd5b810190808035906020019092919080359060200190929190505050611119565b6040518082815260200191505060405180910390f35b348015610c1657600080fd5b50610c4360048036036020811015610c2d57600080fd5b8101908080359060200190929190505050611139565b6040518082815260200191505060405180910390f35b348015610c6557600080fd5b50610cc860048036036040811015610c7c57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611156565b6040518082815260200191505060405180910390f35b348015610cea57600080fd5b50610d1760048036036020811015610d0157600080fd5b8101908080359060200190929190505050611270565b604051808060200180602001878152602001868152602001858152602001848152602001838103835289818151815260200191508051906020019080838360005b83811015610d73578082015181840152602081019050610d58565b50505050905090810190601f168015610da05780820380516001836020036101000a031916815260200191505b50838103825288818151815260200191508051906020019080838360005b83811015610dd9578082015181840152602081019050610dbe565b50505050905090810190601f168015610e065780820380516001836020036101000a031916815260200191505b509850505050505050505060405180910390f35b348015610e2657600080fd5b50610e2f6112a2565b60405180838152602001821515151581526020019250505060405180910390f35b6000610e668260006112b790919063ffffffff16565b9050919050565b610e756127bb565b610e8b838360006112d79092919063ffffffff16565b905092915050565b6000610ea982600061134d90919063ffffffff16565b9050919050565b6000610ebc600061138d565b905090565b6000806060610ed060006113e1565b925092509250909192565b6000610ef182600061158790919063ffffffff16565b9050919050565b6000610f10838360006115a79092919063ffffffff16565b905092915050565b6000610f2e8260006115e990919063ffffffff16565b9050919050565b6000610f4d8383600061160f9092919063ffffffff16565b905092915050565b6000610f6b82600061195290919063ffffffff16565b9050919050565b6000610f8882600061197290919063ffffffff16565b9050919050565b6000610fa7838360006119929092919063ffffffff16565b905092915050565b610fb76127de565b610fcd838360006119fd9092919063ffffffff16565b905092915050565b6000610feb826000611aa990919063ffffffff16565b9050919050565b600080611009836000611abe90919063ffffffff16565b91509150915091565b600061102a83836000611b569092919063ffffffff16565b905092915050565b600061104a83836000611b919092919063ffffffff16565b905092915050565b600061106a83836000611bc69092919063ffffffff16565b905092915050565b600080600060606000806110866000611cde565b955095509550955095509550909192939495565b60006110b283836000611fe89092919063ffffffff16565b905092915050565b60008060008060008060006110cd612801565b60006110e38a600061205690919063ffffffff16565b9850985098509850985098509850985098509193959799909294969850565b61110a612825565b61111460006123dd565b905090565b60006111318383600061242c9092919063ffffffff16565b905092915050565b600061114f82600061246190919063ffffffff16565b9050919050565b60008073__TellorGettersLibrary__________________63912c0e65909185856040518463ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808481526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001935050505060206040518083038186803b15801561122d57600080fd5b505af4158015611241573d6000803e3d6000fd5b505050506040513d602081101561125757600080fd5b8101908080519060200190929190505050905092915050565b60608060008060008061128d87600061248190919063ffffffff16565b95509550955095509550955091939550919395565b6000806112af60006126e0565b915091509091565b600082604a01600083815260200190815260200160002054905092915050565b6112df6127bb565b836050016000848152602001908152602001600020600901600083815260200190815260200160002060058060200260405190810160405280929190826005801561133f576020028201915b81548152602001906001019080831161132b575b505050505090509392505050565b600082604701600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905092915050565b600081604801600060405180807f746f74616c5f737570706c790000000000000000000000000000000000000000815250600c01905060405180910390208152602001908152602001600020549050919050565b600080606083604801600060405180807f6f6e4465636b5265717565737449640000000000000000000000000000000000815250600f019050604051809103902081526020019081526020016000205484604801600060405180807f6f6e4465636b546f74616c546970730000000000000000000000000000000000815250600f019050604051809103902081526020019081526020016000205485605001600087604801600060405180807f6f6e4465636b5265717565737449640000000000000000000000000000000000815250600f01905060405180910390208152602001908152602001600020548152602001908152602001600020600001808054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156115735780601f1061154857610100808354040283529160200191611573565b820191906000526020600020905b81548152906001019060200180831161155657829003601f168201915b505050505090509250925092509193909250565b600082605101600083815260200190815260200160002054905092915050565b6000836050016000848152602001908152602001600020600701600083815260200190815260200160002060009054906101000a900460ff1690509392505050565b600082605001600083815260200190815260200160002060030180549050905092915050565b60008084604d0160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208054905014806116ec57508184604d0160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008154811015156116ae57fe5b9060005260206000200160000160009054906101000a90046fffffffffffffffffffffffffffffffff166fffffffffffffffffffffffffffffffff16115b156116fa576000905061194b565b600084604d0160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020905060008180549050141561175657600091505061194b565b80600182805490500381548110151561176b57fe5b9060005260206000200160000160009054906101000a90046fffffffffffffffffffffffffffffffff166fffffffffffffffffffffffffffffffff1683101515611808578060018280549050038154811015156117c457fe5b9060005260206000200160000160109054906101000a90046fffffffffffffffffffffffffffffffff166fffffffffffffffffffffffffffffffff1691505061194b565b80600081548110151561181757fe5b9060005260206000200160000160009054906101000a90046fffffffffffffffffffffffffffffffff166fffffffffffffffffffffffffffffffff1683101561186457600091505061194b565b60008090506000600183805490500390505b818111156118fb576000600260018484010181151561189157fe5b0490508584828154811015156118a357fe5b9060005260206000200160000160009054906101000a90046fffffffffffffffffffffffffffffffff166fffffffffffffffffffffffffffffffff161115156118ee578092506118f5565b6001810391505b50611876565b828281548110151561190957fe5b9060005260206000200160000160109054906101000a90046fffffffffffffffffffffffffffffffff166fffffffffffffffffffffffffffffffff1693505050505b9392505050565b600082604801600083815260200190815260200160002054905092915050565b600082604b01600083815260200190815260200160002054905092915050565b600083604901600084815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1690509392505050565b611a056127de565b8360500160008481526020019081526020016000206008016000838152602001908152602001600020600580602002604051908101604052809291908260058015611a9b576020028201915b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311611a51575b505050505090509392505050565b6000611ab683834361160f565b905092915050565b60008083604f0160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000015484604f0160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010154915091509250929050565b600083605001600084815260200190815260200160002060030182815481101515611b7d57fe5b906000526020600020015490509392505050565b600083605001600084815260200190815260200160002060060160008381526020019081526020016000205490509392505050565b60008084604f0160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600001541115611ca3576000611c8e83611c8087604801600060405180807f7374616b65416d6f756e74000000000000000000000000000000000000000000815250600b0190506040518091039020815260200190815260200160002054611c728989611aa9565b6127a290919063ffffffff16565b6127a290919063ffffffff16565b101515611c9e5760019050611cd7565b611cd2565b6000611cc183611cb38787611aa9565b6127a290919063ffffffff16565b101515611cd15760019050611cd7565b5b600090505b9392505050565b60008060006060600080866000015487604801600060405180807f63757272656e74526571756573744964000000000000000000000000000000008152506010019050604051809103902081526020019081526020016000205488604801600060405180807f646966666963756c747900000000000000000000000000000000000000000000815250600a01905060405180910390208152602001908152602001600020548960500160008b604801600060405180807f63757272656e74526571756573744964000000000000000000000000000000008152506010019050604051809103902081526020019081526020016000205481526020019081526020016000206000018a60500160008c604801600060405180807f63757272656e7452657175657374496400000000000000000000000000000000815250601001905060405180910390208152602001908152602001600020548152602001908152602001600020600401600060405180807f6772616e756c6172697479000000000000000000000000000000000000000000815250600b01905060405180910390208152602001908152602001600020548b60500160008d604801600060405180807f63757272656e7452657175657374496400000000000000000000000000000000815250601001905060405180910390208152602001908152602001600020548152602001908152602001600020600401600060405180807f746f74616c54697000000000000000000000000000000000000000000000000081525060080190506040518091039020815260200190815260200160002054828054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015611fcc5780601f10611fa157610100808354040283529160200191611fcc565b820191906000526020600020905b815481529060010190602001808311611faf57829003601f168201915b5050505050925095509550955095509550955091939550919395565b600083604c01600084815260200190815260200160002060060160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1690509392505050565b6000806000806000806000612069612801565b6000808b604c0160008c8152602001908152602001600020905080600001548160020160009054906101000a900460ff168260020160019054906101000a900460ff168360020160029054906101000a900460ff168460020160039054906101000a900473ffffffffffffffffffffffffffffffffffffffff168560030160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff168660040160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166101006040519081016040528089600501600060405180807f726571756573744964000000000000000000000000000000000000000000000081525060090190506040518091039020815260200190815260200160002054815260200189600501600060405180807f74696d657374616d70000000000000000000000000000000000000000000000081525060090190506040518091039020815260200190815260200160002054815260200189600501600060405180807f76616c756500000000000000000000000000000000000000000000000000000081525060050190506040518091039020815260200190815260200160002054815260200189600501600060405180807f6d696e457865637574696f6e446174650000000000000000000000000000000081525060100190506040518091039020815260200190815260200160002054815260200189600501600060405180807f6e756d6265724f66566f74657300000000000000000000000000000000000000815250600d0190506040518091039020815260200190815260200160002054815260200189600501600060405180807f626c6f636b4e756d626572000000000000000000000000000000000000000000815250600b0190506040518091039020815260200190815260200160002054815260200189600501600060405180807f6d696e6572536c6f74000000000000000000000000000000000000000000000081525060090190506040518091039020815260200190815260200160002054815260200189600501600060405180807f71756f72756d0000000000000000000000000000000000000000000000000000815250600601905060405180910390208152602001908152602001600020548152508860010154995099509950995099509950995099509950509295985092959850929598565b6123e5612825565b81600901603380602002604051908101604052809291908260338015612420576020028201915b81548152602001906001019080831161240c575b50505050509050919050565b600083605001600084815260200190815260200160002060050160008381526020019081526020016000205490509392505050565b600082605201600083815260200190815260200160002054905092915050565b606080600080600080600088605001600089815260200190815260200160002090508060000181600101826002015483600401600060405180807f6772616e756c6172697479000000000000000000000000000000000000000000815250600b019050604051809103902081526020019081526020016000205484600401600060405180807f7265717565737451506f736974696f6e000000000000000000000000000000008152506010019050604051809103902081526020019081526020016000205485600401600060405180807f746f74616c54697000000000000000000000000000000000000000000000000081525060080190506040518091039020815260200190815260200160002054858054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156126265780601f106125fb57610100808354040283529160200191612626565b820191906000526020600020905b81548152906001019060200180831161260957829003601f168201915b50505050509550848054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156126c25780601f10612697576101008083540402835291602001916126c2565b820191906000526020600020905b8154815290600101906020018083116126a557829003601f168201915b50505050509450965096509650965096509650509295509295509295565b6000806127978384604a01600086604801600060405180807f74696d654f664c6173744e657756616c756500000000000000000000000000008152506012019050604051809103902081526020019081526020016000205481526020019081526020016000205485604801600060405180807f74696d654f664c6173744e657756616c7565000000000000000000000000000081525060120190506040518091039020815260200190815260200160002054611b91565b600191509150915091565b60008282111515156127b057fe5b818303905092915050565b60a060405190810160405280600590602082028038833980820191505090505090565b60a060405190810160405280600590602082028038833980820191505090505090565b61010060405190810160405280600890602082028038833980820191505090505090565b61066060405190810160405280603390602082028038833980820191505090505090565b3382604701600060405180807f5f6f776e6572000000000000000000000000000000000000000000000000000081525060060190506040518091039020815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508082604701600060405180807f74656c6c6f72436f6e7472616374000000000000000000000000000000000000815250600e0190506040518091039020815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507fc2d1449eb0b6547aa426e09d9942a77fa4fc8cd3296305b3163e22452e0bcb8d81604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390a1505056fea165627a7a72305820b20be1536f85549e7978e5185b0bd7fb530abefaf6493776fa85c2b666c0ac940029",
  "sourceMap": "143:755:4:-;;;315:109;8:9:-1;5:2;;;30:1;27;20:12;5:2;315:109:4;;;;;;;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;315:109:4;;;;;;;;;;;;;;;;370:47;401:15;370:6;:30;;;;;;:47;;;;;:::i;:::-;315:109;143:755;;22159:286:8;22308:10;22268:4;:16;;:37;22285:19;;;;;;;;;;;;;;;;;;;22268:37;;;;;;;;;;;;:50;;;;;;;;;;;;;;;;;;22375:15;22328:4;:16;;:45;22345:27;;;;;;;;;;;;;;;;;;;22328:45;;;;;;;;;;;;:62;;;;;;;;;;;;;;;;;;22405:33;22422:15;22405:33;;;;;;;;;;;;;;;;;;;;;;22159:286;;:::o;143:755:4:-;;;;;;;",
  "deployedSourceMap": "143:755:4:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;469:12;484:6;:18;;:47;503:27;;;;;;;;;;;;;;;;;;;484:47;;;;;;;;;;;;;;;;;;;;;469:62;;590:4;584:11;638:14;635:1;621:12;608:45;752:2;738:12;722:14;708:12;702:4;698:1;694:6;681:74;775:7;800:1;795:35;;;;874:2;860:12;853:24;795:35;825:2;811:12;804:24;5941:147:3;;8:9:-1;5:2;;;30:1;27;20:12;5:2;5941:147:3;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;5941:147:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7705:185;;8:9:-1;5:2;;;30:1;27;20:12;5:2;7705:185:3;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;7705:185:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;7705:185:3;;;;;;;;;;;;;;;;2596:121;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2596:121:3;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2596:121:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9453:95;;8:9:-1;5:2;;;30:1;27;20:12;5:2;9453:95:3;;;;;;;;;;;;;;;;;;;;;;;8312:132;;8:9:-1;5:2;;;30:1;27;20:12;5:2;8312:132:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;8312:132:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6252:146;;8:9:-1;5:2;;;30:1;27;20:12;5:2;6252:146:3;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;6252:146:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8653:147;;8:9:-1;5:2;;;30:1;27;20:12;5:2;8653:147:3;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;8653:147:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5247:151;;8:9:-1;5:2;;;30:1;27;20:12;5:2;5247:151:3;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;5247:151:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1584:146;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1584:146:3;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1584:146:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8083:108;;8:9:-1;5:2;;;30:1;27;20:12;5:2;8083:108:3;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;8083:108:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5559:143;;8:9:-1;5:2;;;30:1;27;20:12;5:2;5559:143:3;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;5559:143:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2036:136;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2036:136:3;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2036:136:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5038:202;;8:9:-1;5:2;;;30:1;27;20:12;5:2;5038:202:3;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;5038:202:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;5038:202:3;;;;;;;;;;;;;;;;1205:111;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1205:111:3;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1205:111:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7368:125;;8:9:-1;5:2;;;30:1;27;20:12;5:2;7368:125:3;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;7368:125:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7897:179;;8:9:-1;5:2;;;30:1;27;20:12;5:2;7897:179:3;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;7897:179:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9103:151;;8:9:-1;5:2;;;30:1;27;20:12;5:2;9103:151:3;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;9103:151:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;864:139;;8:9:-1;5:2;;;30:1;27;20:12;5:2;864:139:3;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;864:139:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3542:153;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3542:153:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;3542:153:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2360:138;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2360:138:3;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2360:138:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3182:197;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3182:197:3;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;3182:197:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;3182:197:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7033:103;;8:9:-1;5:2;;;30:1;27;20:12;5:2;7033:103:3;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;7033:103:3;;;;;;;;;;;;;;;;4677:157;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4677:157:3;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;4677:157:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3883:141;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3883:141:3;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;3883:141:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;554:136;;8:9:-1;5:2;;;30:1;27;20:12;5:2;554:136:3;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;554:136:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6850:175;;8:9:-1;5:2;;;30:1;27;20:12;5:2;6850:175:3;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;6850:175:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;6850:175:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;6850:175:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4335:107;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4335:107:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5941:147;6013:4;6039:42;6070:10;6039:6;:30;;:42;;;;:::i;:::-;6032:49;;5941:147;;;:::o;7705:185::-;7796:14;;:::i;:::-;7828:55;7861:10;7872;7828:6;:32;;:55;;;;;:::i;:::-;7821:62;;7705:185;;;;:::o;2596:121::-;2657:7;2682:28;2704:5;2682:6;:21;;:28;;;;:::i;:::-;2675:35;;2596:121;;;:::o;9453:95::-;9499:4;9521:20;:6;:18;:20::i;:::-;9514:27;;9453:95;:::o;8312:132::-;8364:4;8370;8375:13;8410:27;:6;:25;:27::i;:::-;8403:34;;;;;;8312:132;;;:::o;6252:146::-;6325:4;6351:40;6382:8;6351:6;:30;;:40;;;;:::i;:::-;6344:47;;6252:146;;;:::o;8653:147::-;8730:4;8752:41;8771:10;8782;8752:6;:18;;:41;;;;;:::i;:::-;8745:48;;8653:147;;;;:::o;5247:151::-;5323:4;5345:46;5380:10;5345:6;:34;;:46;;;;:::i;:::-;5338:53;;5247:151;;;:::o;1584:146::-;1662:4;1685:38;1704:5;1710:12;1685:6;:18;;:38;;;;;:::i;:::-;1678:45;;1584:146;;;;:::o;8083:108::-;8138:4;8160:24;8178:5;8160:6;:17;;:24;;;;:::i;:::-;8153:31;;8083:108;;;:::o;5559:143::-;5631:4;5653:42;5688:6;5653;:34;;:42;;;;:::i;:::-;5646:49;;5559:143;;;:::o;2036:136::-;2110:4;2132:33;2147:10;2158:6;2132;:14;;:33;;;;;:::i;:::-;2125:40;;2036:136;;;;:::o;5038:202::-;5136:17;;:::i;:::-;5171:62;5211:10;5222;5171:6;:39;;:62;;;;;:::i;:::-;5164:69;;5038:202;;;;:::o;1205:111::-;1262:4;1286:23;1303:5;1286:6;:16;;:23;;;;:::i;:::-;1279:30;;1205:111;;;:::o;7368:125::-;7430:4;7435;7457:29;7478:7;7457:6;:20;;:29;;;;:::i;:::-;7450:36;;;;7368:125;;;:::o;7897:179::-;7990:4;8012:57;8051:10;8062:6;8012;:38;;:57;;;;;:::i;:::-;8005:64;;7897:179;;;;:::o;9103:151::-;9182:4;9205:42;9225:10;9236;9205:6;:19;;:42;;;;;:::i;:::-;9198:49;;9103:151;;;;:::o;864:139::-;938:4;960:36;982:5;988:7;960:6;:21;;:36;;;;;:::i;:::-;953:43;;864:139;;;;:::o;3542:153::-;3595:7;3604:4;3610;3615:13;3629:4;3634;3660:28;:6;:26;:28::i;:::-;3653:35;;;;;;;;;;;;3542:153;;;;;;:::o;2360:138::-;2434:4;2456:35;2471:10;2482:8;2456:6;:14;;:35;;;;;:::i;:::-;2449:42;;2360:138;;;;:::o;3182:197::-;3246:7;3255:4;3261;3267;3273:7;3282;3291;3299:14;;:::i;:::-;3315:3;3336:36;3361:10;3336:6;:24;;:36;;;;:::i;:::-;3329:43;;;;;;;;;;;;;;;;;;3182:197;;;;;;;;;;;:::o;7033:103::-;7076:15;;:::i;:::-;7109:20;:6;:18;:20::i;:::-;7102:27;;7033:103;:::o;4677:157::-;4759:4;4781:46;4805:10;4816;4781:6;:23;;:46;;;;;:::i;:::-;4774:53;;4677:157;;;;:::o;3883:141::-;3955:4;3978:39;4011:5;3978:6;:32;;:39;;;;:::i;:::-;3970:47;;3883:141;;;:::o;554:136::-;629:4;651:6;:16;;;;668:5;674:8;651:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;651:32:3;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;651:32:3;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;651:32:3;;;;;;;;;;;;;;;;644:39;;554:136;;;;:::o;6850:175::-;6913:13;6928;6942:7;6950:4;6956;6962;6985:33;7007:10;6985:6;:21;;:33;;;;:::i;:::-;6978:40;;;;;;;;;;;;6850:175;;;;;;;:::o;4335:107::-;4384:4;4389;4411:24;:6;:22;:24::i;:::-;4404:31;;;;4335:107;;:::o;17646:176:8:-;17752:4;17778;:25;;:37;17804:10;17778:37;;;;;;;;;;;;17771:44;;17646:176;;;;:::o;19948:225::-;20073:14;;:::i;:::-;20105:4;:19;;:31;20125:10;20105:31;;;;;;;;;;;:49;;:61;20155:10;20105:61;;;;;;;;;;;20098:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;19948:225;;;;;:::o;12938:150::-;13033:7;13058:4;:16;;:23;13075:5;13058:23;;;;;;;;;;;;;;;;;;;;;13051:30;;12938:150;;;;:::o;22548:147::-;22626:4;22648;:13;;:40;22662:25;;;;;;;;;;;;;;;;;;;22648:40;;;;;;;;;;;;22641:47;;22548:147;;;:::o;20703:303::-;20787:4;20793;20798:13;20834:4;:13;;:43;20848:28;;;;;;;;;;;;;;;;;;;20834:43;;;;;;;;;;;;20878:4;:13;;:43;20892:28;;;;;;;;;;;;;;;;;;;20878:43;;;;;;;;;;;;20922:4;:19;;:64;20942:4;:13;;:43;20956:28;;;;;;;;;;;;;;;;;;;20942:43;;;;;;;;;;;;20922:64;;;;;;;;;;;:76;;20826:173;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;20703:303;;;;;:::o;17989:179::-;18098:4;18124;:25;;:37;18150:10;18124:37;;;;;;;;;;;;18117:44;;17989:179;;;;:::o;21210:193::-;21321:4;21343;:19;;:31;21363:10;21343:31;;;;;;;;;;;:41;;:53;21385:10;21343:53;;;;;;;;;;;;;;;;;;;;;21336:60;;21210:193;;;;;:::o;16883:195::-;16993:4;17015;:19;;:31;17035:10;17015:31;;;;;;;;;;;:49;;:56;;;;17008:63;;16883:195;;;;:::o;11006:976::-;11117:4;11169:1;11138:4;:13;;:20;11152:5;11138:20;;;;;;;;;;;;;;;:27;;;;:32;11137:88;;;;11212:12;11176:4;:13;;:20;11190:5;11176:20;;;;;;;;;;;;;;;11197:1;11176:23;;;;;;;;;;;;;;;;;:33;;;;;;;;;;;;:48;;;11137:88;11133:843;;;11252:1;11245:8;;;;11133:843;11285:32;11320:4;:13;;:20;11334:5;11320:20;;;;;;;;;;;;;;;11285:55;;11376:1;11354:11;:18;;;;:23;11350:37;;;11386:1;11379:8;;;;;11350:37;11417:11;11448:1;11429:11;:18;;;;:20;11417:33;;;;;;;;;;;;;;;;;:43;;;;;;;;;;;;11401:59;;:12;:59;;11397:123;;;11481:11;11512:1;11493:11;:18;;;;:20;11481:33;;;;;;;;;;;;;;;;;:39;;;;;;;;;;;;11474:46;;;;;;;11397:123;11549:11;11561:1;11549:14;;;;;;;;;;;;;;;;;:24;;;;;;;;;;;;11534:39;;:12;:39;11530:53;;;11582:1;11575:8;;;;;11530:53;11644:8;11655:1;11644:12;;11666:8;11696:1;11677:11;:18;;;;:20;11666:31;;11707:223;11720:3;11714;:9;11707:223;;;11739:8;11767:1;11763;11757:3;11751;:9;:13;11750:18;;;;;;;;11739:29;;11814:12;11786:11;11798:3;11786:16;;;;;;;;;;;;;;;;;:26;;;;;;;;;;;;:40;;;;11782:138;;;11852:3;11846:9;;11782:138;;;11904:1;11900:3;:5;11894:11;;11782:138;11707:223;;;;11946:11;11958:3;11946:16;;;;;;;;;;;;;;;;;:22;;;;;;;;;;;;11939:29;;;;;;;11006:976;;;;;;:::o;20445:139::-;20535:4;20557;:13;;:20;20571:5;20557:20;;;;;;;;;;;;20550:27;;20445:139;;;;:::o;17238:172::-;17344:4;17366;:29;;:37;17396:6;17366:37;;;;;;;;;;;;17359:44;;17238:172;;;;:::o;12287:179::-;12395:4;12417;:22;;:34;12440:10;12417:34;;;;;;;;;;;:42;12452:6;12417:42;;;;;;;;;;;;;;;;;;;;;;;;;12410:49;;12287:179;;;;;:::o;16643:231::-;16775:17;;:::i;:::-;16810:4;:19;;:31;16830:10;16810:31;;;;;;;;;;;:45;;:57;16856:10;16810:57;;;;;;;;;;;16803:64;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;16643:231;;;;;:::o;10572:159::-;10662:4;10686:37;10698:4;10703:5;10710:12;10686:11;:37::i;:::-;10679:44;;10572:159;;;;:::o;19528:210::-;19623:4;19628;19651;:18;;:27;19670:7;19651:27;;;;;;;;;;;;;;;:41;;;19693:4;:18;;:27;19712:7;19693:27;;;;;;;;;;;;;;;:37;;;19643:88;;;;19528:210;;;;;:::o;20180:212::-;20306:4;20328;:19;;:31;20348:10;20328:31;;;;;;;;;;;:49;;20378:6;20328:57;;;;;;;;;;;;;;;;;;20321:64;;20180:212;;;;;:::o;21797:198::-;21910:4;21933;:19;;:31;21953:10;21933:31;;;;;;;;;;;:43;;:55;21977:10;21933:55;;;;;;;;;;;;21926:62;;21797:198;;;;;:::o;9910:449::-;10017:4;10076:1;10035:4;:18;;:25;10054:5;10035:25;;;;;;;;;;;;;;;:39;;;:42;10032:299;;;10178:1;10095:79;10166:7;10095:66;10121:4;:13;;:39;10135:24;;;;;;;;;;;;;;;;;;;10121:39;;;;;;;;;;;;10095:21;10105:4;10110:5;10095:9;:21::i;:::-;:25;;:66;;;;:::i;:::-;:70;;:79;;;;:::i;:::-;:84;;10092:132;;;10205:4;10198:11;;;;10092:132;10032:299;;;10289:1;10251:34;10277:7;10251:21;10261:4;10266:5;10251:9;:21::i;:::-;:25;;:34;;;;:::i;:::-;:39;;10248:83;;;10316:4;10309:11;;;;10248:83;10032:299;10347:5;10340:12;;9910:449;;;;;;:::o;14477:547::-;14562:7;14571:4;14577;14582:13;14596:4;14601;14628;:21;;;14650:4;:13;;:44;14664:29;;;;;;;;;;;;;;;;;;;14650:44;;;;;;;;;;;;14695:4;:13;;:38;14709:23;;;;;;;;;;;;;;;;;;;14695:38;;;;;;;;;;;;14734:4;:19;;:65;14754:4;:13;;:44;14768:29;;;;;;;;;;;;;;;;;;;14754:44;;;;;;;;;;;;14734:65;;;;;;;;;;;:77;;14812:4;:19;;:65;14832:4;:13;;:44;14846:29;;;;;;;;;;;;;;;;;;;14832:44;;;;;;;;;;;;14812:65;;;;;;;;;;;:77;;:103;14890:24;;;;;;;;;;;;;;;;;;;14812:103;;;;;;;;;;;;14916:4;:19;;:65;14936:4;:13;;:44;14950:29;;;;;;;;;;;;;;;;;;;14936:44;;;;;;;;;;;;14916:65;;;;;;;;;;;:77;;:100;14994:21;;;;;;;;;;;;;;;;;;;14916:100;;;;;;;;;;;;14620:397;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;14477:547;;;;;;;:::o;12659:181::-;12766:4;12788;:17;;:29;12806:10;12788:29;;;;;;;;;;;:35;;:45;12824:8;12788:45;;;;;;;;;;;;;;;;;;;;;;;;;12781:52;;12659:181;;;;;:::o;13557:775::-;13656:7;13665:4;13671;13677;13683:7;13692;13701;13709:14;;:::i;:::-;13725:3;13739:20;13762:4;:17;;:29;13780:10;13762:29;;;;;;;;;;;13739:52;;13808:4;:9;;;13818:4;:13;;;;;;;;;;;;13833:4;:22;;;;;;;;;;;;13857:4;:15;;;;;;;;;;;;13874:4;:18;;;;;;;;;;;;13894:4;:19;;;;;;;;;;;;13914:4;:24;;;;;;;;;;;;13801:524;;;;;;;;;13940:4;:20;;:44;13961:22;;;;;;;;;;;;;;;;;;;13940:44;;;;;;;;;;;;13801:524;;;;13986:4;:20;;:44;14007:22;;;;;;;;;;;;;;;;;;;13986:44;;;;;;;;;;;;13801:524;;;;14032:4;:20;;:40;14053:18;;;;;;;;;;;;;;;;;;;14032:40;;;;;;;;;;;;13801:524;;;;14074:4;:20;;:51;14095:29;;;;;;;;;;;;;;;;;;;14074:51;;;;;;;;;;;;13801:524;;;;14127:4;:20;;:48;14148:26;;;;;;;;;;;;;;;;;;;14127:48;;;;;;;;;;;;13801:524;;;;14177:4;:20;;:46;14198:24;;;;;;;;;;;;;;;;;;;14177:46;;;;;;;;;;;;13801:524;;;;14225:4;:20;;:44;14246:22;;;;;;;;;;;;;;;;;;;14225:44;;;;;;;;;;;;13801:524;;;;14271:4;:20;;:41;14292:19;;;;;;;;;;;;;;;;;;;14271:41;;;;;;;;;;;;13801:524;;;14314:4;:10;;;13801:524;;;;;;;;;;;;;;;;;;;13557:775;;;;;;;;;;;:::o;18176:130::-;18253:15;;:::i;:::-;18286:4;:13;;18279:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;18176:130;;;:::o;16237:201::-;16352:4;16374;:19;;:31;16394:10;16374:31;;;;;;;;;;;:45;;:57;16420:10;16374:57;;;;;;;;;;;;16367:64;;16237:201;;;;;:::o;15212:169::-;15317:4;15340;:27;;:34;15368:5;15340:34;;;;;;;;;;;;15332:42;;15212:169;;;;:::o;18846:449::-;18942:13;18956;18971:7;18979:4;18985;18991;19007:24;19034:4;:19;;:31;19054:10;19034:31;;;;;;;;;;;19007:58;;19084:8;:20;;19105:8;:19;;19125:8;:18;;;19145:8;:20;;:46;19166:24;;;;;;;;;;;;;;;;;;;19145:46;;;;;;;;;;;;19192:8;:20;;:51;19213:29;;;;;;;;;;;;;;;;;;;19192:51;;;;;;;;;;;;19244:8;:20;;:43;19265:21;;;;;;;;;;;;;;;;;;;19244:43;;;;;;;;;;;;19076:212;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;18846:449;;;;;;;;:::o;15733:262::-;15814:4;15819;15842:140;15855:4;15860;:25;;:73;15886:4;:13;;:46;15900:31;;;;;;;;;;;;;;;;;;;15886:46;;;;;;;;;;;;15860:73;;;;;;;;;;;;15935:4;:13;;:46;15949:31;;;;;;;;;;;;;;;;;;;15935:46;;;;;;;;;;;;15842:12;:140::i;:::-;15983:4;15834:154;;;;15733:262;;;:::o;511:110:7:-;569:7;596:1;591;:6;;584:14;;;;;;615:1;611;:5;604:12;;511:110;;;;:::o;143:755:4:-;;;;;;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;148:4;140:6;136:17;126:27;;0:157;143:755:4;;;;:::o;:::-;;;;;;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;148:4;140:6;136:17;126:27;;0:157;143:755:4;;;;:::o;:::-;;;;;;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;148:4;140:6;136:17;126:27;;0:157;143:755:4;;;;:::o;:::-;;;;;;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;148:4;140:6;136:17;126:27;;0:157;143:755:4;;;;:::o;22159:286:8:-;22308:10;22268:4;:16;;:37;22285:19;;;;;;;;;;;;;;;;;;;22268:37;;;;;;;;;;;;:50;;;;;;;;;;;;;;;;;;22375:15;22328:4;:16;;:45;22345:27;;;;;;;;;;;;;;;;;;;22328:45;;;;;;;;;;;;:62;;;;;;;;;;;;;;;;;;22405:33;22422:15;22405:33;;;;;;;;;;;;;;;;;;;;;;22159:286;;:::o",
  "source": "pragma solidity ^0.5.0;\n\nimport \"./TellorGetters.sol\";\nimport \"./libraries/TellorLibrary.sol\";\nimport \"./libraries/TellorGettersLibrary.sol\";\n\ncontract TellorMaster is TellorGetters{\n    /**\n     * @dev The constructor sets the original `tellorStorageOwner` of the contract to the sender\n     * account.\n    */\n    constructor (address _tellorContract)  public{\n        tellor.tellorMasterConstructor(_tellorContract);\n    }\n\n    function () external payable {\n        address addr = tellor.addressVars[keccak256(\"tellorContract\")];\n        assembly {\n            let freememstart := mload(0x40)\n            calldatacopy(freememstart, 0, calldatasize())\n            let success := delegatecall(not(0), addr, freememstart, calldatasize(), freememstart, 32)\n            switch success\n            case 0 { revert(freememstart, 32) }\n            default { return(freememstart, 32) }\n        }\n    }\n\n}\n\n        //Test this one:\n            // let result := delegatecall(not(0), addr, add(_calldata, 0x20), mload(_calldata), 0, 0)\n            // let size := returndatasize\n            // let ptr := mload(0x40)\n            // returndatacopy(ptr, 0, size)\n\n            // // revert instead of invalid() bc if the underlying call failed with invalid() it already wasted gas.\n            // // if the call returned error data, forward it\n            // switch result case 0 { revert(ptr, size) }\n            // default { return(ptr, size) }",
  "sourcePath": "/Users/mdcoon/git/TellorCore/contracts/TellorMaster.sol",
  "ast": {
    "absolutePath": "/Users/mdcoon/git/TellorCore/contracts/TellorMaster.sol",
    "exportedSymbols": {
      "TellorMaster": [
        819
      ]
    },
    "id": 820,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 787,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:4"
      },
      {
        "absolutePath": "/Users/mdcoon/git/TellorCore/contracts/TellorGetters.sol",
        "file": "./TellorGetters.sol",
        "id": 788,
        "nodeType": "ImportDirective",
        "scope": 820,
        "sourceUnit": 786,
        "src": "25:29:4",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/mdcoon/git/TellorCore/contracts/libraries/TellorLibrary.sol",
        "file": "./libraries/TellorLibrary.sol",
        "id": 789,
        "nodeType": "ImportDirective",
        "scope": 820,
        "sourceUnit": 5779,
        "src": "55:39:4",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/mdcoon/git/TellorCore/contracts/libraries/TellorGettersLibrary.sol",
        "file": "./libraries/TellorGettersLibrary.sol",
        "id": 790,
        "nodeType": "ImportDirective",
        "scope": 820,
        "sourceUnit": 2207,
        "src": "95:46:4",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 791,
              "name": "TellorGetters",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 785,
              "src": "168:13:4",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_TellorGetters_$785",
                "typeString": "contract TellorGetters"
              }
            },
            "id": 792,
            "nodeType": "InheritanceSpecifier",
            "src": "168:13:4"
          }
        ],
        "contractDependencies": [
          785
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 819,
        "linearizedBaseContracts": [
          819,
          785
        ],
        "name": "TellorMaster",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 803,
              "nodeType": "Block",
              "src": "360:64:4",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 800,
                        "name": "_tellorContract",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 794,
                        "src": "401:15:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 797,
                        "name": "tellor",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 311,
                        "src": "370:6:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TellorStorageStruct_$1133_storage",
                          "typeString": "struct TellorGettersLibrary.TellorStorageStruct storage ref"
                        }
                      },
                      "id": 799,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "tellorMasterConstructor",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2190,
                      "src": "370:30:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_TellorStorageStruct_$1133_storage_ptr_$_t_address_$returns$__$bound_to$_t_struct$_TellorStorageStruct_$1133_storage_ptr_$",
                        "typeString": "function (struct TellorGettersLibrary.TellorStorageStruct storage pointer,address)"
                      }
                    },
                    "id": 801,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "370:47:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 802,
                  "nodeType": "ExpressionStatement",
                  "src": "370:47:4"
                }
              ]
            },
            "documentation": "@dev The constructor sets the original `tellorStorageOwner` of the contract to the sender\naccount.",
            "id": 804,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 795,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 794,
                  "name": "_tellorContract",
                  "nodeType": "VariableDeclaration",
                  "scope": 804,
                  "src": "328:23:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 793,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "328:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "327:25:4"
            },
            "returnParameters": {
              "id": 796,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "360:0:4"
            },
            "scope": 819,
            "src": "315:109:4",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 817,
              "nodeType": "Block",
              "src": "459:436:4",
              "statements": [
                {
                  "assignments": [
                    808
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 808,
                      "name": "addr",
                      "nodeType": "VariableDeclaration",
                      "scope": 817,
                      "src": "469:12:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 807,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "469:7:4",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 815,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 809,
                        "name": "tellor",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 311,
                        "src": "484:6:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TellorStorageStruct_$1133_storage",
                          "typeString": "struct TellorGettersLibrary.TellorStorageStruct storage ref"
                        }
                      },
                      "id": 810,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "addressVars",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1083,
                      "src": "484:18:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_bytes32_$_t_address_$",
                        "typeString": "mapping(bytes32 => address)"
                      }
                    },
                    "id": 814,
                    "indexExpression": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "hexValue": "74656c6c6f72436f6e7472616374",
                          "id": 812,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "513:16:4",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_d48fd09afdab521f4f69bd2af8177f60fb0709ce0f1b3d5b8a2e233a20453848",
                            "typeString": "literal_string \"tellorContract\""
                          },
                          "value": "tellorContract"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_stringliteral_d48fd09afdab521f4f69bd2af8177f60fb0709ce0f1b3d5b8a2e233a20453848",
                            "typeString": "literal_string \"tellorContract\""
                          }
                        ],
                        "id": 811,
                        "name": "keccak256",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5897,
                        "src": "503:9:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                          "typeString": "function (bytes memory) pure returns (bytes32)"
                        }
                      },
                      "id": 813,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "503:27:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "484:47:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "469:62:4"
                },
                {
                  "externalReferences": [
                    {
                      "addr": {
                        "declaration": 808,
                        "isOffset": false,
                        "isSlot": false,
                        "src": "702:4:4",
                        "valueSize": 1
                      }
                    }
                  ],
                  "id": 816,
                  "nodeType": "InlineAssembly",
                  "operations": "{\n    let freememstart := mload(0x40)\n    calldatacopy(freememstart, 0, calldatasize())\n    let success := delegatecall(not(0), addr, freememstart, calldatasize(), freememstart, 32)\n    switch success\n    case 0 {\n        revert(freememstart, 32)\n    }\n    default {\n        return(freememstart, 32)\n    }\n}",
                  "src": "541:354:4"
                }
              ]
            },
            "documentation": null,
            "id": 818,
            "implemented": true,
            "kind": "fallback",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 805,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "439:2:4"
            },
            "returnParameters": {
              "id": 806,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "459:0:4"
            },
            "scope": 819,
            "src": "430:465:4",
            "stateMutability": "payable",
            "superFunction": null,
            "visibility": "external"
          }
        ],
        "scope": 820,
        "src": "143:755:4"
      }
    ],
    "src": "0:1433:4"
  },
  "legacyAST": {
    "absolutePath": "/Users/mdcoon/git/TellorCore/contracts/TellorMaster.sol",
    "exportedSymbols": {
      "TellorMaster": [
        819
      ]
    },
    "id": 820,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 787,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:4"
      },
      {
        "absolutePath": "/Users/mdcoon/git/TellorCore/contracts/TellorGetters.sol",
        "file": "./TellorGetters.sol",
        "id": 788,
        "nodeType": "ImportDirective",
        "scope": 820,
        "sourceUnit": 786,
        "src": "25:29:4",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/mdcoon/git/TellorCore/contracts/libraries/TellorLibrary.sol",
        "file": "./libraries/TellorLibrary.sol",
        "id": 789,
        "nodeType": "ImportDirective",
        "scope": 820,
        "sourceUnit": 5779,
        "src": "55:39:4",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/mdcoon/git/TellorCore/contracts/libraries/TellorGettersLibrary.sol",
        "file": "./libraries/TellorGettersLibrary.sol",
        "id": 790,
        "nodeType": "ImportDirective",
        "scope": 820,
        "sourceUnit": 2207,
        "src": "95:46:4",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 791,
              "name": "TellorGetters",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 785,
              "src": "168:13:4",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_TellorGetters_$785",
                "typeString": "contract TellorGetters"
              }
            },
            "id": 792,
            "nodeType": "InheritanceSpecifier",
            "src": "168:13:4"
          }
        ],
        "contractDependencies": [
          785
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 819,
        "linearizedBaseContracts": [
          819,
          785
        ],
        "name": "TellorMaster",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 803,
              "nodeType": "Block",
              "src": "360:64:4",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 800,
                        "name": "_tellorContract",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 794,
                        "src": "401:15:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 797,
                        "name": "tellor",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 311,
                        "src": "370:6:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TellorStorageStruct_$1133_storage",
                          "typeString": "struct TellorGettersLibrary.TellorStorageStruct storage ref"
                        }
                      },
                      "id": 799,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "tellorMasterConstructor",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2190,
                      "src": "370:30:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_TellorStorageStruct_$1133_storage_ptr_$_t_address_$returns$__$bound_to$_t_struct$_TellorStorageStruct_$1133_storage_ptr_$",
                        "typeString": "function (struct TellorGettersLibrary.TellorStorageStruct storage pointer,address)"
                      }
                    },
                    "id": 801,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "370:47:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 802,
                  "nodeType": "ExpressionStatement",
                  "src": "370:47:4"
                }
              ]
            },
            "documentation": "@dev The constructor sets the original `tellorStorageOwner` of the contract to the sender\naccount.",
            "id": 804,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 795,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 794,
                  "name": "_tellorContract",
                  "nodeType": "VariableDeclaration",
                  "scope": 804,
                  "src": "328:23:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 793,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "328:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "327:25:4"
            },
            "returnParameters": {
              "id": 796,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "360:0:4"
            },
            "scope": 819,
            "src": "315:109:4",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 817,
              "nodeType": "Block",
              "src": "459:436:4",
              "statements": [
                {
                  "assignments": [
                    808
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 808,
                      "name": "addr",
                      "nodeType": "VariableDeclaration",
                      "scope": 817,
                      "src": "469:12:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 807,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "469:7:4",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 815,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 809,
                        "name": "tellor",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 311,
                        "src": "484:6:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TellorStorageStruct_$1133_storage",
                          "typeString": "struct TellorGettersLibrary.TellorStorageStruct storage ref"
                        }
                      },
                      "id": 810,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "addressVars",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1083,
                      "src": "484:18:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_bytes32_$_t_address_$",
                        "typeString": "mapping(bytes32 => address)"
                      }
                    },
                    "id": 814,
                    "indexExpression": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "hexValue": "74656c6c6f72436f6e7472616374",
                          "id": 812,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "513:16:4",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_d48fd09afdab521f4f69bd2af8177f60fb0709ce0f1b3d5b8a2e233a20453848",
                            "typeString": "literal_string \"tellorContract\""
                          },
                          "value": "tellorContract"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_stringliteral_d48fd09afdab521f4f69bd2af8177f60fb0709ce0f1b3d5b8a2e233a20453848",
                            "typeString": "literal_string \"tellorContract\""
                          }
                        ],
                        "id": 811,
                        "name": "keccak256",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5897,
                        "src": "503:9:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                          "typeString": "function (bytes memory) pure returns (bytes32)"
                        }
                      },
                      "id": 813,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "503:27:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "484:47:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "469:62:4"
                },
                {
                  "externalReferences": [
                    {
                      "addr": {
                        "declaration": 808,
                        "isOffset": false,
                        "isSlot": false,
                        "src": "702:4:4",
                        "valueSize": 1
                      }
                    }
                  ],
                  "id": 816,
                  "nodeType": "InlineAssembly",
                  "operations": "{\n    let freememstart := mload(0x40)\n    calldatacopy(freememstart, 0, calldatasize())\n    let success := delegatecall(not(0), addr, freememstart, calldatasize(), freememstart, 32)\n    switch success\n    case 0 {\n        revert(freememstart, 32)\n    }\n    default {\n        return(freememstart, 32)\n    }\n}",
                  "src": "541:354:4"
                }
              ]
            },
            "documentation": null,
            "id": 818,
            "implemented": true,
            "kind": "fallback",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 805,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "439:2:4"
            },
            "returnParameters": {
              "id": 806,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "459:0:4"
            },
            "scope": 819,
            "src": "430:465:4",
            "stateMutability": "payable",
            "superFunction": null,
            "visibility": "external"
          }
        ],
        "scope": 820,
        "src": "143:755:4"
      }
    ],
    "src": "0:1433:4"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.0+commit.1d4f565a.Emscripten.clang"
  },
  "networks": {
    "1555522887372": {
      "events": {
        "0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "name": "_owner",
              "type": "address"
            },
            {
              "indexed": true,
              "name": "_spender",
              "type": "address"
            },
            {
              "indexed": false,
              "name": "_value",
              "type": "uint256"
            }
          ],
          "name": "Approval",
          "type": "event",
          "signature": "0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925"
        },
        "0x6d7f869757848b19c8c2456e95cd98885bc6bed062fda4077bb07985e2f76cc9": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "name": "_sender",
              "type": "address"
            },
            {
              "indexed": false,
              "name": "_query",
              "type": "string"
            },
            {
              "indexed": false,
              "name": "_querySymbol",
              "type": "string"
            },
            {
              "indexed": false,
              "name": "_granularity",
              "type": "uint256"
            },
            {
              "indexed": true,
              "name": "_requestId",
              "type": "uint256"
            },
            {
              "indexed": false,
              "name": "_totalTips",
              "type": "uint256"
            }
          ],
          "name": "DataRequested",
          "type": "event",
          "signature": "0x6d7f869757848b19c8c2456e95cd98885bc6bed062fda4077bb07985e2f76cc9"
        },
        "0x21459c2f5447ebcf83a7f0a238c32c71076faef0d12295e771c0cb1e10434739": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "name": "_disputeID",
              "type": "uint256"
            },
            {
              "indexed": false,
              "name": "_result",
              "type": "int256"
            },
            {
              "indexed": true,
              "name": "_reportedMiner",
              "type": "address"
            },
            {
              "indexed": false,
              "name": "_reportingParty",
              "type": "address"
            },
            {
              "indexed": false,
              "name": "_active",
              "type": "bool"
            }
          ],
          "name": "DisputeVoteTallied",
          "type": "event",
          "signature": "0x21459c2f5447ebcf83a7f0a238c32c71076faef0d12295e771c0cb1e10434739"
        },
        "0x9e959738f09af22daede9ff9563f8edf3f5cec8e17ce60287c911c95fa767f42": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "name": "_currentChallenge",
              "type": "bytes32"
            },
            {
              "indexed": true,
              "name": "_currentRequestId",
              "type": "uint256"
            },
            {
              "indexed": false,
              "name": "_difficulty",
              "type": "uint256"
            },
            {
              "indexed": false,
              "name": "_multiplier",
              "type": "uint256"
            },
            {
              "indexed": false,
              "name": "_query",
              "type": "string"
            },
            {
              "indexed": false,
              "name": "_totalTips",
              "type": "uint256"
            }
          ],
          "name": "NewChallenge",
          "type": "event",
          "signature": "0x9e959738f09af22daede9ff9563f8edf3f5cec8e17ce60287c911c95fa767f42"
        },
        "0xd739c8b7fe870f381c5442416ff79d9f44c3e1d54a16ce39fc0fbe8206c4a6e8": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "name": "_disputeId",
              "type": "uint256"
            },
            {
              "indexed": true,
              "name": "_requestId",
              "type": "uint256"
            },
            {
              "indexed": false,
              "name": "_timestamp",
              "type": "uint256"
            }
          ],
          "name": "NewDispute",
          "type": "event",
          "signature": "0xd739c8b7fe870f381c5442416ff79d9f44c3e1d54a16ce39fc0fbe8206c4a6e8"
        },
        "0x5ab383fe3e28263c839564bc7545520a7dd34b78cbd7ab21b2da5d2fd027bf6c": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "name": "_requestId",
              "type": "uint256"
            },
            {
              "indexed": false,
              "name": "_query",
              "type": "string"
            },
            {
              "indexed": false,
              "name": "_onDeckQueryHash",
              "type": "bytes32"
            },
            {
              "indexed": false,
              "name": "_onDeckTotalTips",
              "type": "uint256"
            }
          ],
          "name": "NewRequestOnDeck",
          "type": "event",
          "signature": "0x5ab383fe3e28263c839564bc7545520a7dd34b78cbd7ab21b2da5d2fd027bf6c"
        },
        "0x46d8ab1385f70e5a3673e97c23c764f7600f7ed7a09b6687deae7131d51752e2": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "name": "_sender",
              "type": "address"
            }
          ],
          "name": "NewStake",
          "type": "event",
          "signature": "0x46d8ab1385f70e5a3673e97c23c764f7600f7ed7a09b6687deae7131d51752e2"
        },
        "0xc2d1449eb0b6547aa426e09d9942a77fa4fc8cd3296305b3163e22452e0bcb8d": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "name": "_newTellor",
              "type": "address"
            }
          ],
          "name": "NewTellorAddress",
          "type": "event",
          "signature": "0xc2d1449eb0b6547aa426e09d9942a77fa4fc8cd3296305b3163e22452e0bcb8d"
        },
        "0xc509d04e0782579ee59912139246ccbdf6c36c43abd90591d912017f3467dd16": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "name": "_requestId",
              "type": "uint256"
            },
            {
              "indexed": false,
              "name": "_time",
              "type": "uint256"
            },
            {
              "indexed": false,
              "name": "_value",
              "type": "uint256"
            },
            {
              "indexed": false,
              "name": "_totalTips",
              "type": "uint256"
            },
            {
              "indexed": false,
              "name": "_currentChallenge",
              "type": "bytes32"
            }
          ],
          "name": "NewValue",
          "type": "event",
          "signature": "0xc509d04e0782579ee59912139246ccbdf6c36c43abd90591d912017f3467dd16"
        },
        "0xe6d63a2aee0aaed2ab49702313ce54114f2145af219d7db30d6624af9e6dffc4": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "name": "_miner",
              "type": "address"
            },
            {
              "indexed": false,
              "name": "_nonce",
              "type": "string"
            },
            {
              "indexed": true,
              "name": "_requestId",
              "type": "uint256"
            },
            {
              "indexed": false,
              "name": "_value",
              "type": "uint256"
            },
            {
              "indexed": false,
              "name": "_currentChallenge",
              "type": "bytes32"
            }
          ],
          "name": "NonceSubmitted",
          "type": "event",
          "signature": "0xe6d63a2aee0aaed2ab49702313ce54114f2145af219d7db30d6624af9e6dffc4"
        },
        "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "name": "_previousOwner",
              "type": "address"
            },
            {
              "indexed": true,
              "name": "_newOwner",
              "type": "address"
            }
          ],
          "name": "OwnershipTransferred",
          "type": "event",
          "signature": "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0"
        },
        "0x4a7934670bd8304e7da22378be1368f7c4fef17c5aee81804beda8638fe428ec": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "name": "_sender",
              "type": "address"
            }
          ],
          "name": "StakeWithdrawn",
          "type": "event",
          "signature": "0x4a7934670bd8304e7da22378be1368f7c4fef17c5aee81804beda8638fe428ec"
        },
        "0x453865710d0cb4b14ad25de371c860da196368895daa9662e5087711d14daecf": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "name": "_sender",
              "type": "address"
            }
          ],
          "name": "StakeWithdrawRequested",
          "type": "event",
          "signature": "0x453865710d0cb4b14ad25de371c860da196368895daa9662e5087711d14daecf"
        },
        "0xd32134405b68f6f7220f9c38ae310df1b648d16188006768d45be2f7c24e8820": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "name": "_sender",
              "type": "address"
            },
            {
              "indexed": true,
              "name": "_requestId",
              "type": "uint256"
            },
            {
              "indexed": false,
              "name": "_tip",
              "type": "uint256"
            },
            {
              "indexed": false,
              "name": "_totalTips",
              "type": "uint256"
            }
          ],
          "name": "TipAdded",
          "type": "event",
          "signature": "0xd32134405b68f6f7220f9c38ae310df1b648d16188006768d45be2f7c24e8820"
        },
        "0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "name": "_from",
              "type": "address"
            },
            {
              "indexed": true,
              "name": "_to",
              "type": "address"
            },
            {
              "indexed": false,
              "name": "_value",
              "type": "uint256"
            }
          ],
          "name": "Transfer",
          "type": "event",
          "signature": "0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef"
        },
        "0x86abfce99b7dd908bec0169288797f85049ec73cbe046ed9de818fab3a497ae0": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "name": "_disputeID",
              "type": "uint256"
            },
            {
              "indexed": false,
              "name": "_position",
              "type": "bool"
            },
            {
              "indexed": true,
              "name": "_voter",
              "type": "address"
            }
          ],
          "name": "Voted",
          "type": "event",
          "signature": "0x86abfce99b7dd908bec0169288797f85049ec73cbe046ed9de818fab3a497ae0"
        }
      },
      "links": {
        "TellorGettersLibrary": "0x731A4E84fd77618A758883DDa92323EdD291b313"
      },
      "address": "0x2B63d6e98E66C7e9fe11225Ba349B0B33234D9A2",
      "transactionHash": "0xcd086b10ac21a15387946ec02b67e79d31052fed823cb91a91243954e346281a"
    }
  },
  "schemaVersion": "3.0.6",
  "updatedAt": "2019-04-17T17:43:00.775Z",
  "devdoc": {
    "methods": {
      "allowance(address,address)": {
        "params": {
          "_spender": "address",
          "_user": "address"
        },
        "return": "Returns the remaining allowance of tokens granted to the _spender from the _user"
      },
      "balanceOf(address)": {
        "details": "Gets balance of owner specified",
        "params": {
          "_user": "is the owner address used to look up the balance"
        },
        "return": "Returns the balance associated with the passed in _user"
      },
      "balanceOfAt(address,uint256)": {
        "details": "Queries the balance of _user at a specific _blockNumber",
        "params": {
          "_blockNumber": "The block number when the balance is queried",
          "_user": "The address from which the balance will be retrieved"
        },
        "return": "The balance at _blockNumber"
      },
      "constructor": {
        "details": "The constructor sets the original `tellorStorageOwner` of the contract to the sender account."
      },
      "didMine(bytes32,address)": {
        "details": "This function tells you if a given challenge has been completed by a given miner",
        "params": {
          "_challenge": "the challenge to search for",
          "_miner": "address that you want to know if they solved the challenge"
        },
        "return": "true if the _miner address provided solved the "
      },
      "didVote(uint256,address)": {
        "details": "Checks if an address voted in a dispute",
        "params": {
          "_address": "to look up",
          "_disputeId": "to look up"
        },
        "return": "bool of whether or not party voted"
      },
      "getAllDisputeVars(uint256)": {
        "details": "Gets all dispute variables",
        "params": {
          "_disputeId": "to look up"
        },
        "return": "address of reported mineraddress of reporting partydisputed apiIddisputed minimum execution dateuint number of votesuint blockNumber of voteuint index in disputeId arrayint count of the current tallybool of whether vote has been tallied"
      },
      "getCurrentVariables()": {
        "details": "Getter function for currentChallenge difficulty_level",
        "return": "current challenge, MiningApiID, level of difficulty_level"
      },
      "getDisputeIdByDisputeHash(bytes32)": {
        "details": "Checks if a given hash of miner,apiId has been disputed",
        "params": {
          "_hash": "of sha256(abi.encodePacked(_miners[2],_requestId));"
        },
        "return": "uint disputeId"
      },
      "getLastNewValue()": {
        "details": "Gets the a value for the latest timestamp available",
        "return": "value for timestamp of last proof of work submited"
      },
      "getMinedBlockNum(uint256,uint256)": {
        "details": "Gets blocknumber for mined timestamp ",
        "params": {
          "_requestId": "to look up",
          "_timestamp": "is the timestamp to look up blocknumber"
        },
        "return": "uint of the blocknumber which the dispute was mined"
      },
      "getMinersByRequestIdAndTimestamp(uint256,uint256)": {
        "details": "Gets the 5 miners who mined the value for the specified apiId/_timestamp ",
        "params": {
          "_requestId": "to look up",
          "_timestamp": "is the timestampt to look up miners for"
        }
      },
      "getRequestIdByQueryHash(bytes32)": {
        "details": "Getter function for apiId based on api hash",
        "params": {
          "_request": "string to check if it already has an apiId"
        },
        "return": "uint apiId"
      },
      "getRequestIdByRequestQIndex(uint256)": {
        "details": "Getter function for the apiId for the specified payoutPool index",
        "params": {
          "_index": "to look up the apiId"
        },
        "return": "apiId"
      },
      "getRequestIdByTimestamp(uint256)": {
        "details": "Getter function for apiId based on timestamp. Only one value is mined per timestamp and each timestamp can correspond to a different API. ",
        "params": {
          "_timestamp": "to check APIId"
        },
        "return": "apiId"
      },
      "getRequestVars(uint256)": {
        "details": "Gets the API struct variables that are not mappings",
        "params": {
          "_requestId": "to look up"
        },
        "return": "string of api to querybytes32 hash of stringuint of index in PayoutPool arrayuint of current payout for this api"
      },
      "getSubmissionsByTimestamp(uint256,uint256)": {
        "details": "Gets the 5 miners who mined the value for the specified apiId/_timestamp ",
        "params": {
          "_requestId": "to look up",
          "_timestamp": "is the timestampt to look up miners for"
        }
      },
      "getVariablesOnDeck()": {
        "details": "Getter function for api on queue",
        "return": "apionQ hash, id, payout, and api string"
      },
      "isInDispute(uint256,uint256)": {
        "details": "Gets the 5 miners who mined the value for the specified apiId/_timestamp ",
        "params": {
          "_requestId": "to look up",
          "_timestamp": "is the timestampt to look up miners for"
        }
      },
      "retrieveData(uint256,uint256)": {
        "details": "Retreive value from oracle based on timestamp",
        "params": {
          "_requestId": "being requested",
          "_timestamp": "to retreive data/value from"
        },
        "return": "value for timestamp submitted"
      },
      "totalSupply()": {
        "details": "Getter for the total_supply of oracle tokens",
        "return": "total supply"
      }
    }
  },
  "userdoc": {
    "methods": {
      "allowedToTrade(address,uint256)": {
        "notice": "dev This function returns whether or not a given user is allowed to trade a given amount   param address of user param address of amount"
      },
      "getStakerInfo(address)": {
        "notice": "dev This function allows users to retireve all information about a staker param address of staker enquiring about return uint current state of staker return uint startDate of staking"
      }
    }
  }
}