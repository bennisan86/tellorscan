{
  "contractName": "TellorMaster",
  "abi": [
    {
      "constant": true,
      "inputs": [],
      "name": "getPayoutPool",
      "outputs": [
        {
          "name": "",
          "type": "uint256[51]"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function",
      "signature": "0x10c55725"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_apiId",
          "type": "uint256"
        },
        {
          "name": "_timestamp",
          "type": "uint256"
        }
      ],
      "name": "getSubmissionsByTimestamp",
      "outputs": [
        {
          "name": "",
          "type": "uint256[5]"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function",
      "signature": "0x11c98512"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_data",
          "type": "bytes32"
        }
      ],
      "name": "getAddressVars",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function",
      "signature": "0x133bee5e"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function",
      "signature": "0x18160ddd"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_apiId",
          "type": "uint256"
        },
        {
          "name": "_timestamp",
          "type": "uint256"
        }
      ],
      "name": "getMinersByValue",
      "outputs": [
        {
          "name": "",
          "type": "address[5]"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function",
      "signature": "0x36b040e1"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_apiId",
          "type": "uint256"
        },
        {
          "name": "_timestamp",
          "type": "uint256"
        }
      ],
      "name": "isInDispute",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function",
      "signature": "0x3df0777b"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_user",
          "type": "address"
        },
        {
          "name": "_blockNumber",
          "type": "uint256"
        }
      ],
      "name": "balanceOfAt",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function",
      "signature": "0x4ee2cd7e"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getVariablesOnQ",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        },
        {
          "name": "",
          "type": "uint256"
        },
        {
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function",
      "signature": "0x60ab8154"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_data",
          "type": "bytes32"
        }
      ],
      "name": "getUintVar",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function",
      "signature": "0x612c8f7f"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_challenge",
          "type": "bytes32"
        },
        {
          "name": "_miner",
          "type": "address"
        }
      ],
      "name": "didMine",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function",
      "signature": "0x63bb82ad"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_apiId",
          "type": "uint256"
        }
      ],
      "name": "getApiVars",
      "outputs": [
        {
          "name": "",
          "type": "string"
        },
        {
          "name": "",
          "type": "string"
        },
        {
          "name": "",
          "type": "bytes32"
        },
        {
          "name": "",
          "type": "uint256"
        },
        {
          "name": "",
          "type": "uint256"
        },
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function",
      "signature": "0x6e9fb31d"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_user",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "name": "bal",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function",
      "signature": "0x70a08231"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_staker",
          "type": "address"
        }
      ],
      "name": "getStakerInfo",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        },
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function",
      "signature": "0x733bdef0"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_timestamp",
          "type": "uint256"
        }
      ],
      "name": "getApiForTime",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function",
      "signature": "0x73645f37"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_hash",
          "type": "bytes32"
        }
      ],
      "name": "getDisputeHashToId",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function",
      "signature": "0x798782d7"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_payoutPoolIndexToApiId",
          "type": "uint256"
        }
      ],
      "name": "getpayoutPoolIndexToApiId",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function",
      "signature": "0x9110a51d"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_apiId",
          "type": "uint256"
        },
        {
          "name": "_timestamp",
          "type": "uint256"
        }
      ],
      "name": "retrieveData",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function",
      "signature": "0x93fa4915"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getVariables",
      "outputs": [
        {
          "name": "",
          "type": "bytes32"
        },
        {
          "name": "",
          "type": "uint256"
        },
        {
          "name": "",
          "type": "uint256"
        },
        {
          "name": "",
          "type": "string"
        },
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function",
      "signature": "0x94aef022"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_user",
          "type": "address"
        },
        {
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "allowedToTrade",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function",
      "signature": "0x999cf26c"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_api",
          "type": "bytes32"
        }
      ],
      "name": "getApiId",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function",
      "signature": "0xa0590fe1"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_disputeId",
          "type": "uint256"
        },
        {
          "name": "_address",
          "type": "address"
        }
      ],
      "name": "didVote",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function",
      "signature": "0xa7c438bc"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_disputeId",
          "type": "uint256"
        }
      ],
      "name": "getAllDisputeVars",
      "outputs": [
        {
          "name": "",
          "type": "bytes32"
        },
        {
          "name": "",
          "type": "bool"
        },
        {
          "name": "",
          "type": "bool"
        },
        {
          "name": "",
          "type": "bool"
        },
        {
          "name": "",
          "type": "address"
        },
        {
          "name": "",
          "type": "address"
        },
        {
          "name": "",
          "type": "address"
        },
        {
          "name": "",
          "type": "uint256[8]"
        },
        {
          "name": "",
          "type": "int256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function",
      "signature": "0xaf0b1327"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_apiId",
          "type": "uint256"
        },
        {
          "name": "_timestamp",
          "type": "uint256"
        }
      ],
      "name": "getMinedBlockNum",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function",
      "signature": "0xc775b542"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_user",
          "type": "address"
        },
        {
          "name": "_spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function",
      "signature": "0xdd62ed3e"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getLastQuery",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        },
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function",
      "signature": "0xdfba5095"
    },
    {
      "inputs": [
        {
          "name": "_tellorContract",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor",
      "signature": "constructor"
    },
    {
      "payable": true,
      "stateMutability": "payable",
      "type": "fallback"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.5.0+commit.1d4f565a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":true,\"inputs\":[],\"name\":\"getPayoutPool\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256[51]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_apiId\",\"type\":\"uint256\"},{\"name\":\"_timestamp\",\"type\":\"uint256\"}],\"name\":\"getSubmissionsByTimestamp\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256[5]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_data\",\"type\":\"bytes32\"}],\"name\":\"getAddressVars\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_apiId\",\"type\":\"uint256\"},{\"name\":\"_timestamp\",\"type\":\"uint256\"}],\"name\":\"getMinersByValue\",\"outputs\":[{\"name\":\"\",\"type\":\"address[5]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_apiId\",\"type\":\"uint256\"},{\"name\":\"_timestamp\",\"type\":\"uint256\"}],\"name\":\"isInDispute\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_user\",\"type\":\"address\"},{\"name\":\"_blockNumber\",\"type\":\"uint256\"}],\"name\":\"balanceOfAt\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getVariablesOnQ\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"},{\"name\":\"\",\"type\":\"uint256\"},{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_data\",\"type\":\"bytes32\"}],\"name\":\"getUintVar\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_challenge\",\"type\":\"bytes32\"},{\"name\":\"_miner\",\"type\":\"address\"}],\"name\":\"didMine\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_apiId\",\"type\":\"uint256\"}],\"name\":\"getApiVars\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"},{\"name\":\"\",\"type\":\"string\"},{\"name\":\"\",\"type\":\"bytes32\"},{\"name\":\"\",\"type\":\"uint256\"},{\"name\":\"\",\"type\":\"uint256\"},{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"bal\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_staker\",\"type\":\"address\"}],\"name\":\"getStakerInfo\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"},{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_timestamp\",\"type\":\"uint256\"}],\"name\":\"getApiForTime\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_hash\",\"type\":\"bytes32\"}],\"name\":\"getDisputeHashToId\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_payoutPoolIndexToApiId\",\"type\":\"uint256\"}],\"name\":\"getpayoutPoolIndexToApiId\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_apiId\",\"type\":\"uint256\"},{\"name\":\"_timestamp\",\"type\":\"uint256\"}],\"name\":\"retrieveData\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getVariables\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes32\"},{\"name\":\"\",\"type\":\"uint256\"},{\"name\":\"\",\"type\":\"uint256\"},{\"name\":\"\",\"type\":\"string\"},{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_user\",\"type\":\"address\"},{\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"allowedToTrade\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_api\",\"type\":\"bytes32\"}],\"name\":\"getApiId\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_disputeId\",\"type\":\"uint256\"},{\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"didVote\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_disputeId\",\"type\":\"uint256\"}],\"name\":\"getAllDisputeVars\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes32\"},{\"name\":\"\",\"type\":\"bool\"},{\"name\":\"\",\"type\":\"bool\"},{\"name\":\"\",\"type\":\"bool\"},{\"name\":\"\",\"type\":\"address\"},{\"name\":\"\",\"type\":\"address\"},{\"name\":\"\",\"type\":\"address\"},{\"name\":\"\",\"type\":\"uint256[8]\"},{\"name\":\"\",\"type\":\"int256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_apiId\",\"type\":\"uint256\"},{\"name\":\"_timestamp\",\"type\":\"uint256\"}],\"name\":\"getMinedBlockNum\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_user\",\"type\":\"address\"},{\"name\":\"_spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getLastQuery\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"},{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"_tellorContract\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"}],\"devdoc\":{\"methods\":{\"allowance(address,address)\":{\"params\":{\"_spender\":\"address\",\"_user\":\"address\"},\"return\":\"Returns the remaining allowance of tokens granted to the _spender from the _user\"},\"balanceOf(address)\":{\"details\":\"Gets balance of owner specified\",\"params\":{\"_user\":\"is the owner address used to look up the balance\"},\"return\":\"Returns the balance associated with the passed in _user\"},\"balanceOfAt(address,uint256)\":{\"details\":\"Queries the balance of _user at a specific _blockNumber\",\"params\":{\"_blockNumber\":\"The block number when the balance is queried\",\"_user\":\"The address from which the balance will be retrieved\"},\"return\":\"The balance at _blockNumber\"},\"constructor\":{\"details\":\"The constructor sets the original `tellorStorageOwner` of the contract to the sender account.\"},\"didMine(bytes32,address)\":{\"details\":\"This function tells you if a given challenge has been completed by a given miner\",\"params\":{\"_challenge\":\"the challenge to search for\",\"_miner\":\"address that you want to know if they solved the challenge\"},\"return\":\"true if the _miner address provided solved the \"},\"didVote(uint256,address)\":{\"details\":\"Checks if an address voted in a dispute\",\"params\":{\"_address\":\"to look up\",\"_disputeId\":\"to look up\"},\"return\":\"bool of whether or not party voted\"},\"getAllDisputeVars(uint256)\":{\"details\":\"Gets all dispute variables\",\"params\":{\"_disputeId\":\"to look up\"},\"return\":\"address of reported mineraddress of reporting partydisputed apiIddisputed minimum execution dateuint number of votesuint blockNumber of voteuint index in disputeId arrayint count of the current tallybool of whether vote has been tallied\"},\"getApiForTime(uint256)\":{\"details\":\"Getter function for apiId based on timestamp. Only one value is mined per timestamp and each timestamp can correspond to a different API. \",\"params\":{\"_timestamp\":\"to check APIId\"},\"return\":\"apiId\"},\"getApiId(bytes32)\":{\"details\":\"Getter function for apiId based on api hash\",\"params\":{\"_api\":\"string to check if it already has an apiId\"},\"return\":\"uint apiId\"},\"getApiVars(uint256)\":{\"details\":\"Gets the API struct variables that are not mappings\",\"params\":{\"_apiId\":\"to look up\"},\"return\":\"string of api to querybytes32 hash of stringuint of index in PayoutPool arrayuint of current payout for this api\"},\"getDisputeHashToId(bytes32)\":{\"details\":\"Checks if a given hash of miner,apiId has been disputed\",\"params\":{\"_hash\":\"of sha256(abi.encodePacked(_miners[2],_apiId));\"},\"return\":\"uint disputeId\"},\"getLastQuery()\":{\"details\":\"Gets the a value for the latest timestamp available\",\"return\":\"value for timestamp of last proof of work submited\"},\"getMinedBlockNum(uint256,uint256)\":{\"details\":\"Gets blocknumber for mined timestamp \",\"params\":{\"_apiId\":\"to look up\",\"_timestamp\":\"is the timestamp to look up blocknumber\"},\"return\":\"uint of the blocknumber which the dispute was mined\"},\"getMinersByValue(uint256,uint256)\":{\"details\":\"Gets the 5 miners who mined the value for the specified apiId/_timestamp \",\"params\":{\"_apiId\":\"to look up\",\"_timestamp\":\"is the timestampt to look up miners for\"}},\"getSubmissionsByTimestamp(uint256,uint256)\":{\"details\":\"Gets the 5 miners who mined the value for the specified apiId/_timestamp \",\"params\":{\"_apiId\":\"to look up\",\"_timestamp\":\"is the timestampt to look up miners for\"}},\"getVariables()\":{\"details\":\"Getter function for currentChallenge difficulty_level\",\"return\":\"current challenge, MiningApiID, level of difficulty_level\"},\"getVariablesOnQ()\":{\"details\":\"Getter function for api on queue\",\"return\":\"apionQ hash, id, payout, and api string\"},\"getpayoutPoolIndexToApiId(uint256)\":{\"details\":\"Getter function for the apiId for the specified payoutPool index\",\"params\":{\"_payoutPoolIndexToApiId\":\"to look up the apiId\"},\"return\":\"apiId\"},\"isInDispute(uint256,uint256)\":{\"details\":\"Gets the 5 miners who mined the value for the specified apiId/_timestamp \",\"params\":{\"_apiId\":\"to look up\",\"_timestamp\":\"is the timestampt to look up miners for\"}},\"retrieveData(uint256,uint256)\":{\"details\":\"Retreive value from oracle based on timestamp\",\"params\":{\"_apiId\":\"being requested\",\"_timestamp\":\"to retreive data/value from\"},\"return\":\"value for timestamp submitted\"},\"totalSupply()\":{\"details\":\"Getter for the total_supply of oracle tokens\",\"return\":\"total supply\"}}},\"userdoc\":{\"methods\":{\"allowedToTrade(address,uint256)\":{\"notice\":\"dev This function returns whether or not a given user is allowed to trade a given amount   param address of user param address of amount\"},\"getStakerInfo(address)\":{\"notice\":\"dev This function allows users to retireve all information about a staker param address of staker enquiring about return uint current state of staker return uint startDate of staking\"}}}},\"settings\":{\"compilationTarget\":{\"/Users/mdcoon/git/TellorCore/contracts/TellorMaster.sol\":\"TellorMaster\"},\"evmVersion\":\"byzantium\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/Users/mdcoon/git/TellorCore/contracts/TellorGetters.sol\":{\"keccak256\":\"0x56abbfc1d4d4006938f2e6d29849483fbbefaca2dd671c2f039a261128009733\",\"urls\":[\"bzzr://d3e36f234618ccfaddd86b3dd1b96c9111bbb6ea4e2344e95c38c946611ad59a\"]},\"/Users/mdcoon/git/TellorCore/contracts/TellorMaster.sol\":{\"keccak256\":\"0x8739810d1f59a70f9606bdcc1d3c666f49a6baa0ad5d795470c19639a0c01229\",\"urls\":[\"bzzr://13f9a006056d95fd26135916e879508533869ee58a1442a640476af9c5589ed3\"]},\"/Users/mdcoon/git/TellorCore/contracts/libraries/SafeMath.sol\":{\"keccak256\":\"0x64bb591a8002f82f9af3e8c97f70e406d5750c6ddd2afb4fe4570c6f22a81b35\",\"urls\":[\"bzzr://b8a1b883348f79a20cb5e568af0857a5032c6ccfba56efb088460c3352f39f3b\"]},\"/Users/mdcoon/git/TellorCore/contracts/libraries/TellorGettersLibrary.sol\":{\"keccak256\":\"0xff70cb98b97a61007fb5cac3e2f5d71987854740dc9c8072de92fb45aa0e8398\",\"urls\":[\"bzzr://aa8364742a0d34958fae75c2acdc3407b82f4e99a0a95227031b8a788f2de5d4\"]},\"/Users/mdcoon/git/TellorCore/contracts/libraries/TellorLibrary.sol\":{\"keccak256\":\"0xede8c9ba650eae537e53ab27eba99d0d75e6b26eb20981fa63e1eca8115850de\",\"urls\":[\"bzzr://4e8738e3eb755caf3c48636be5d0bcd951697411132159b79cdb57958f7c81ec\"]},\"/Users/mdcoon/git/TellorCore/contracts/libraries/Utilities.sol\":{\"keccak256\":\"0xfde2134936e4e2f0a1090efabf773bf311ed03a62d9a5bada406bd756a82686a\",\"urls\":[\"bzzr://4de3e5dda475359778df2982d3095c02b70e8437078fe8c45399bcacc8749cad\"]}},\"version\":1}",
  "bytecode": "0x60806040523480156200001157600080fd5b50604051602080620029d3833981018060405260208110156200003357600080fd5b8101908080519060200190929190505050620000688160006200006f6401000000000262002636179091906401000000009004565b50620001e8565b3382600001600060405180807f5f6f776e6572000000000000000000000000000000000000000000000000000081525060060190506040518091039020815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508082600001600060405180807f74656c6c6f72436f6e7472616374000000000000000000000000000000000000815250600e0190506040518091039020815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507fc2d1449eb0b6547aa426e09d9942a77fa4fc8cd3296305b3163e22452e0bcb8d81604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390a15050565b6127db80620001f86000396000f3fe608060405260043610610149576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806310c55725146101dd57806311c9851214610230578063133bee5e146102b157806318160ddd1461032c57806336b040e1146103575780633df0777b146103d85780634ee2cd7e1461043557806360ab8154146104a4578063612c8f7f1461054257806363bb82ad146105915780636e9fb31d1461060457806370a0823114610740578063733bdef0146107a557806373645f3714610811578063798782d7146108605780639110a51d146108af57806393fa4915146108fe57806394aef02214610957578063999cf26c14610a03578063a0590fe114610a76578063a7c438bc14610ac5578063af0b132714610b38578063c775b54214610c77578063dd62ed3e14610cd0578063dfba509514610d55575b600080600001600060405180807f74656c6c6f72436f6e7472616374000000000000000000000000000000000000815250600e0190506040518091039020815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506040513660008237602081368385600019f480600081146101d857602083f35b602083fd5b3480156101e957600080fd5b506101f2610d8b565b6040518082603360200280838360005b8381101561021d578082015181840152602081019050610202565b5050505090500191505060405180910390f35b34801561023c57600080fd5b506102736004803603604081101561025357600080fd5b810190808035906020019092919080359060200190929190505050610da2565b6040518082600560200280838360005b8381101561029e578082015181840152602081019050610283565b5050505090500191505060405180910390f35b3480156102bd57600080fd5b506102ea600480360360208110156102d457600080fd5b8101908080359060200190929190505050610dc8565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561033857600080fd5b50610341610de5565b6040518082815260200191505060405180910390f35b34801561036357600080fd5b5061039a6004803603604081101561037a57600080fd5b810190808035906020019092919080359060200190929190505050610df6565b6040518082600560200280838360005b838110156103c55780820151818401526020810190506103aa565b5050505090500191505060405180910390f35b3480156103e457600080fd5b5061041b600480360360408110156103fb57600080fd5b810190808035906020019092919080359060200190929190505050610e1c565b604051808215151515815260200191505060405180910390f35b34801561044157600080fd5b5061048e6004803603604081101561045857600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610e3c565b6040518082815260200191505060405180910390f35b3480156104b057600080fd5b506104b9610e5c565b6040518084815260200183815260200180602001828103825283818151815260200191508051906020019080838360005b838110156105055780820151818401526020810190506104ea565b50505050905090810190601f1680156105325780820380516001836020036101000a031916815260200191505b5094505050505060405180910390f35b34801561054e57600080fd5b5061057b6004803603602081101561056557600080fd5b8101908080359060200190929190505050610e76565b6040518082815260200191505060405180910390f35b34801561059d57600080fd5b506105ea600480360360408110156105b457600080fd5b8101908080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610e93565b604051808215151515815260200191505060405180910390f35b34801561061057600080fd5b5061063d6004803603602081101561062757600080fd5b8101908080359060200190929190505050610eb3565b604051808060200180602001878152602001868152602001858152602001848152602001838103835289818151815260200191508051906020019080838360005b8381101561069957808201518184015260208101905061067e565b50505050905090810190601f1680156106c65780820380516001836020036101000a031916815260200191505b50838103825288818151815260200191508051906020019080838360005b838110156106ff5780820151818401526020810190506106e4565b50505050905090810190601f16801561072c5780820380516001836020036101000a031916815260200191505b509850505050505050505060405180910390f35b34801561074c57600080fd5b5061078f6004803603602081101561076357600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610ee5565b6040518082815260200191505060405180910390f35b3480156107b157600080fd5b506107f4600480360360208110156107c857600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610f02565b604051808381526020018281526020019250505060405180910390f35b34801561081d57600080fd5b5061084a6004803603602081101561083457600080fd5b8101908080359060200190929190505050610f22565b6040518082815260200191505060405180910390f35b34801561086c57600080fd5b506108996004803603602081101561088357600080fd5b8101908080359060200190929190505050610f3f565b6040518082815260200191505060405180910390f35b3480156108bb57600080fd5b506108e8600480360360208110156108d257600080fd5b8101908080359060200190929190505050610f5c565b6040518082815260200191505060405180910390f35b34801561090a57600080fd5b506109416004803603604081101561092157600080fd5b810190808035906020019092919080359060200190929190505050610f79565b6040518082815260200191505060405180910390f35b34801561096357600080fd5b5061096c610f99565b6040518086815260200185815260200184815260200180602001838152602001828103825284818151815260200191508051906020019080838360005b838110156109c45780820151818401526020810190506109a9565b50505050905090810190601f1680156109f15780820380516001836020036101000a031916815260200191505b50965050505050505060405180910390f35b348015610a0f57600080fd5b50610a5c60048036036040811015610a2657600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610fbd565b604051808215151515815260200191505060405180910390f35b348015610a8257600080fd5b50610aaf60048036036020811015610a9957600080fd5b8101908080359060200190929190505050610fdd565b6040518082815260200191505060405180910390f35b348015610ad157600080fd5b50610b1e60048036036040811015610ae857600080fd5b8101908080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610ffa565b604051808215151515815260200191505060405180910390f35b348015610b4457600080fd5b50610b7160048036036020811015610b5b57600080fd5b810190808035906020019092919050505061101a565b604051808a81526020018915151515815260200188151515158152602001871515151581526020018673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200183600860200280838360005b83811015610c56578082015181840152602081019050610c3b565b50505050905001828152602001995050505050505050505060405180910390f35b348015610c8357600080fd5b50610cba60048036036040811015610c9a57600080fd5b810190808035906020019092919080359060200190929190505050611062565b6040518082815260200191505060405180910390f35b348015610cdc57600080fd5b50610d3f60048036036040811015610cf357600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611082565b6040518082815260200191505060405180910390f35b348015610d6157600080fd5b50610d6a61119c565b60405180838152602001821515151581526020019250505060405180910390f35b610d936125a8565b610d9d60006111b1565b905090565b610daa6125cc565b610dc0838360006112009092919063ffffffff16565b905092915050565b6000610dde82600061127690919063ffffffff16565b9050919050565b6000610df160006112b6565b905090565b610dfe6125ef565b610e148383600061130a9092919063ffffffff16565b905092915050565b6000610e34838360006113b69092919063ffffffff16565b905092915050565b6000610e54838360006113f89092919063ffffffff16565b905092915050565b6000806060610e6b600061173b565b925092509250909192565b6000610e8c8260006118e190919063ffffffff16565b9050919050565b6000610eab838360006119019092919063ffffffff16565b905092915050565b606080600080600080610ed087600061196c90919063ffffffff16565b95509550955095509550955091939550919395565b6000610efb826000611bcb90919063ffffffff16565b9050919050565b600080610f19836000611be090919063ffffffff16565b91509150915091565b6000610f38826000611c7890919063ffffffff16565b9050919050565b6000610f55826000611c9890919063ffffffff16565b9050919050565b6000610f72826000611cb890919063ffffffff16565b9050919050565b6000610f9183836000611cd89092919063ffffffff16565b905092915050565b600080600060606000610fac6000611d0d565b945094509450945094509091929394565b6000610fd583836000611f6b9092919063ffffffff16565b905092915050565b6000610ff382600061208390919063ffffffff16565b9050919050565b6000611012838360006120a39092919063ffffffff16565b905092915050565b600080600080600080600061102d612612565b60006110438a600061211190919063ffffffff16565b9850985098509850985098509850985098509193959799909294969850565b600061107a838360006124989092919063ffffffff16565b905092915050565b60008073__TellorGettersLibrary__________________63912c0e65909185856040518463ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808481526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001935050505060206040518083038186803b15801561115957600080fd5b505af415801561116d573d6000803e3d6000fd5b505050506040513d602081101561118357600080fd5b8101908080519060200190929190505050905092915050565b6000806111a960006124cd565b915091509091565b6111b96125a8565b816009016033806020026040519081016040528092919082603380156111f4576020028201915b8154815260200190600101908083116111e0575b50505050509050919050565b6112086125cc565b8360440160008481526020019081526020016000206008016000838152602001908152602001600020600580602002604051908101604052809291908260058015611268576020028201915b815481526020019060010190808311611254575b505050505090509392505050565b600082600001600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905092915050565b600081600301600060405180807f746f74616c5f737570706c790000000000000000000000000000000000000000815250600c01905060405180910390208152602001908152602001600020549050919050565b6113126125ef565b83604401600084815260200190815260200160002060070160008381526020019081526020016000206005806020026040519081016040528092919082600580156113a8576020028201915b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001906001019080831161135e575b505050505090509392505050565b6000836044016000848152602001908152602001600020600601600083815260200190815260200160002060009054906101000a900460ff1690509392505050565b6000808460410160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208054905014806114d55750818460410160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600081548110151561149757fe5b9060005260206000200160000160009054906101000a90046fffffffffffffffffffffffffffffffff166fffffffffffffffffffffffffffffffff16115b156114e35760009050611734565b60008460410160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020905060008180549050141561153f576000915050611734565b80600182805490500381548110151561155457fe5b9060005260206000200160000160009054906101000a90046fffffffffffffffffffffffffffffffff166fffffffffffffffffffffffffffffffff16831015156115f1578060018280549050038154811015156115ad57fe5b9060005260206000200160000160109054906101000a90046fffffffffffffffffffffffffffffffff166fffffffffffffffffffffffffffffffff16915050611734565b80600081548110151561160057fe5b9060005260206000200160000160009054906101000a90046fffffffffffffffffffffffffffffffff166fffffffffffffffffffffffffffffffff1683101561164d576000915050611734565b60008090506000600183805490500390505b818111156116e4576000600260018484010181151561167a57fe5b04905085848281548110151561168c57fe5b9060005260206000200160000160009054906101000a90046fffffffffffffffffffffffffffffffff166fffffffffffffffffffffffffffffffff161115156116d7578092506116de565b6001810391505b5061165f565b82828154811015156116f257fe5b9060005260206000200160000160109054906101000a90046fffffffffffffffffffffffffffffffff166fffffffffffffffffffffffffffffffff1693505050505b9392505050565b600080606083600301600060405180807f61706949644f6e510000000000000000000000000000000000000000000000008152506008019050604051809103902081526020019081526020016000205484600301600060405180807f6170694f6e515061796f75740000000000000000000000000000000000000000815250600c019050604051809103902081526020019081526020016000205485604401600087600301600060405180807f61706949644f6e51000000000000000000000000000000000000000000000000815250600801905060405180910390208152602001908152602001600020548152602001908152602001600020600001808054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156118cd5780601f106118a2576101008083540402835291602001916118cd565b820191906000526020600020905b8154815290600101906020018083116118b057829003601f168201915b505050505090509250925092509193909250565b600082600301600083815260200190815260200160002054905092915050565b600083603d01600084815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1690509392505050565b606080600080600080600088604401600089815260200190815260200160002090508060000181600101826002015483600301600060405180807f6772616e756c6172697479000000000000000000000000000000000000000000815250600b019050604051809103902081526020019081526020016000205484600301600060405180807f696e6465780000000000000000000000000000000000000000000000000000008152506005019050604051809103902081526020019081526020016000205485600301600060405180807f7061796f7574000000000000000000000000000000000000000000000000000081525060060190506040518091039020815260200190815260200160002054858054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015611b115780601f10611ae657610100808354040283529160200191611b11565b820191906000526020600020905b815481529060010190602001808311611af457829003601f168201915b50505050509550848054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015611bad5780601f10611b8257610100808354040283529160200191611bad565b820191906000526020600020905b815481529060010190602001808311611b9057829003601f168201915b50505050509450965096509650965096509650509295509295509295565b6000611bd88383436113f8565b905092915050565b6000808360430160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600001548460430160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010154915091509250929050565b600082603e01600083815260200190815260200160002054905092915050565b600082604601600083815260200190815260200160002054905092915050565b600082603f01600083815260200190815260200160002054905092915050565b600083604401600084815260200190815260200160002060050160008381526020019081526020016000205490509392505050565b600080600060606000856001015486600301600060405180807f6d696e696e674170694964000000000000000000000000000000000000000000815250600b019050604051809103902081526020019081526020016000205487600301600060405180807f646966666963756c74795f6c6576656c00000000000000000000000000000000815250601001905060405180910390208152602001908152602001600020548860440160008a600301600060405180807f6d696e696e674170694964000000000000000000000000000000000000000000815250600b019050604051809103902081526020019081526020016000205481526020019081526020016000206000018960440160008b600301600060405180807f6d696e696e674170694964000000000000000000000000000000000000000000815250600b01905060405180910390208152602001908152602001600020548152602001908152602001600020600301600060405180807f6772616e756c6172697479000000000000000000000000000000000000000000815250600b0190506040518091039020815260200190815260200160002054818054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015611f515780601f10611f2657610100808354040283529160200191611f51565b820191906000526020600020905b815481529060010190602001808311611f3457829003601f168201915b505050505091509450945094509450945091939590929450565b6000808460430160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000015411156120485760006120338361202587600301600060405180807f7374616b65416d74000000000000000000000000000000000000000000000000815250600801905060405180910390208152602001908152602001600020546120178989611bcb565b61258f90919063ffffffff16565b61258f90919063ffffffff16565b101515612043576001905061207c565b612077565b6000612066836120588787611bcb565b61258f90919063ffffffff16565b101515612076576001905061207c565b5b600090505b9392505050565b600082604501600083815260200190815260200160002054905092915050565b600083604001600084815260200190815260200160002060060160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1690509392505050565b6000806000806000806000612124612612565b6000808b60400160008c8152602001908152602001600020905080600001548160010160009054906101000a900460ff168260010160019054906101000a900460ff168360010160029054906101000a900460ff168460010160039054906101000a900473ffffffffffffffffffffffffffffffffffffffff168560020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff168660030160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166101006040519081016040528089600401600060405180807f617069496400000000000000000000000000000000000000000000000000000081525060050190506040518091039020815260200190815260200160002054815260200189600401600060405180807f74696d657374616d70000000000000000000000000000000000000000000000081525060090190506040518091039020815260200190815260200160002054815260200189600401600060405180807f76616c756500000000000000000000000000000000000000000000000000000081525060050190506040518091039020815260200190815260200160002054815260200189600401600060405180807f6d696e457865637574696f6e446174650000000000000000000000000000000081525060100190506040518091039020815260200190815260200160002054815260200189600401600060405180807f6e756d6265724f66566f74657300000000000000000000000000000000000000815250600d0190506040518091039020815260200190815260200160002054815260200189600401600060405180807f626c6f636b4e756d626572000000000000000000000000000000000000000000815250600b0190506040518091039020815260200190815260200160002054815260200189600401600060405180807f696e64657800000000000000000000000000000000000000000000000000000081525060050190506040518091039020815260200190815260200160002054815260200189600401600060405180807f71756f72756d0000000000000000000000000000000000000000000000000000815250600601905060405180910390208152602001908152602001600020548152508860050154995099509950995099509950995099509950509295985092959850929598565b600083604401600084815260200190815260200160002060040160008381526020019081526020016000205490509392505050565b6000806125848384603e01600086600301600060405180807f74696d654f664c61737450726f6f660000000000000000000000000000000000815250600f019050604051809103902081526020019081526020016000205481526020019081526020016000205485600301600060405180807f74696d654f664c61737450726f6f660000000000000000000000000000000000815250600f0190506040518091039020815260200190815260200160002054611cd8565b600191509150915091565b600082821115151561259d57fe5b818303905092915050565b61066060405190810160405280603390602082028038833980820191505090505090565b60a060405190810160405280600590602082028038833980820191505090505090565b60a060405190810160405280600590602082028038833980820191505090505090565b61010060405190810160405280600890602082028038833980820191505090505090565b3382600001600060405180807f5f6f776e6572000000000000000000000000000000000000000000000000000081525060060190506040518091039020815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508082600001600060405180807f74656c6c6f72436f6e7472616374000000000000000000000000000000000000815250600e0190506040518091039020815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507fc2d1449eb0b6547aa426e09d9942a77fa4fc8cd3296305b3163e22452e0bcb8d81604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390a1505056fea165627a7a72305820fb605d7c50318319eeaba02734687fdc2381be276f1a2cef7580b37eec291b600029",
  "deployedBytecode": "0x608060405260043610610149576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806310c55725146101dd57806311c9851214610230578063133bee5e146102b157806318160ddd1461032c57806336b040e1146103575780633df0777b146103d85780634ee2cd7e1461043557806360ab8154146104a4578063612c8f7f1461054257806363bb82ad146105915780636e9fb31d1461060457806370a0823114610740578063733bdef0146107a557806373645f3714610811578063798782d7146108605780639110a51d146108af57806393fa4915146108fe57806394aef02214610957578063999cf26c14610a03578063a0590fe114610a76578063a7c438bc14610ac5578063af0b132714610b38578063c775b54214610c77578063dd62ed3e14610cd0578063dfba509514610d55575b600080600001600060405180807f74656c6c6f72436f6e7472616374000000000000000000000000000000000000815250600e0190506040518091039020815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506040513660008237602081368385600019f480600081146101d857602083f35b602083fd5b3480156101e957600080fd5b506101f2610d8b565b6040518082603360200280838360005b8381101561021d578082015181840152602081019050610202565b5050505090500191505060405180910390f35b34801561023c57600080fd5b506102736004803603604081101561025357600080fd5b810190808035906020019092919080359060200190929190505050610da2565b6040518082600560200280838360005b8381101561029e578082015181840152602081019050610283565b5050505090500191505060405180910390f35b3480156102bd57600080fd5b506102ea600480360360208110156102d457600080fd5b8101908080359060200190929190505050610dc8565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561033857600080fd5b50610341610de5565b6040518082815260200191505060405180910390f35b34801561036357600080fd5b5061039a6004803603604081101561037a57600080fd5b810190808035906020019092919080359060200190929190505050610df6565b6040518082600560200280838360005b838110156103c55780820151818401526020810190506103aa565b5050505090500191505060405180910390f35b3480156103e457600080fd5b5061041b600480360360408110156103fb57600080fd5b810190808035906020019092919080359060200190929190505050610e1c565b604051808215151515815260200191505060405180910390f35b34801561044157600080fd5b5061048e6004803603604081101561045857600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610e3c565b6040518082815260200191505060405180910390f35b3480156104b057600080fd5b506104b9610e5c565b6040518084815260200183815260200180602001828103825283818151815260200191508051906020019080838360005b838110156105055780820151818401526020810190506104ea565b50505050905090810190601f1680156105325780820380516001836020036101000a031916815260200191505b5094505050505060405180910390f35b34801561054e57600080fd5b5061057b6004803603602081101561056557600080fd5b8101908080359060200190929190505050610e76565b6040518082815260200191505060405180910390f35b34801561059d57600080fd5b506105ea600480360360408110156105b457600080fd5b8101908080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610e93565b604051808215151515815260200191505060405180910390f35b34801561061057600080fd5b5061063d6004803603602081101561062757600080fd5b8101908080359060200190929190505050610eb3565b604051808060200180602001878152602001868152602001858152602001848152602001838103835289818151815260200191508051906020019080838360005b8381101561069957808201518184015260208101905061067e565b50505050905090810190601f1680156106c65780820380516001836020036101000a031916815260200191505b50838103825288818151815260200191508051906020019080838360005b838110156106ff5780820151818401526020810190506106e4565b50505050905090810190601f16801561072c5780820380516001836020036101000a031916815260200191505b509850505050505050505060405180910390f35b34801561074c57600080fd5b5061078f6004803603602081101561076357600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610ee5565b6040518082815260200191505060405180910390f35b3480156107b157600080fd5b506107f4600480360360208110156107c857600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610f02565b604051808381526020018281526020019250505060405180910390f35b34801561081d57600080fd5b5061084a6004803603602081101561083457600080fd5b8101908080359060200190929190505050610f22565b6040518082815260200191505060405180910390f35b34801561086c57600080fd5b506108996004803603602081101561088357600080fd5b8101908080359060200190929190505050610f3f565b6040518082815260200191505060405180910390f35b3480156108bb57600080fd5b506108e8600480360360208110156108d257600080fd5b8101908080359060200190929190505050610f5c565b6040518082815260200191505060405180910390f35b34801561090a57600080fd5b506109416004803603604081101561092157600080fd5b810190808035906020019092919080359060200190929190505050610f79565b6040518082815260200191505060405180910390f35b34801561096357600080fd5b5061096c610f99565b6040518086815260200185815260200184815260200180602001838152602001828103825284818151815260200191508051906020019080838360005b838110156109c45780820151818401526020810190506109a9565b50505050905090810190601f1680156109f15780820380516001836020036101000a031916815260200191505b50965050505050505060405180910390f35b348015610a0f57600080fd5b50610a5c60048036036040811015610a2657600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610fbd565b604051808215151515815260200191505060405180910390f35b348015610a8257600080fd5b50610aaf60048036036020811015610a9957600080fd5b8101908080359060200190929190505050610fdd565b6040518082815260200191505060405180910390f35b348015610ad157600080fd5b50610b1e60048036036040811015610ae857600080fd5b8101908080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610ffa565b604051808215151515815260200191505060405180910390f35b348015610b4457600080fd5b50610b7160048036036020811015610b5b57600080fd5b810190808035906020019092919050505061101a565b604051808a81526020018915151515815260200188151515158152602001871515151581526020018673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200183600860200280838360005b83811015610c56578082015181840152602081019050610c3b565b50505050905001828152602001995050505050505050505060405180910390f35b348015610c8357600080fd5b50610cba60048036036040811015610c9a57600080fd5b810190808035906020019092919080359060200190929190505050611062565b6040518082815260200191505060405180910390f35b348015610cdc57600080fd5b50610d3f60048036036040811015610cf357600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611082565b6040518082815260200191505060405180910390f35b348015610d6157600080fd5b50610d6a61119c565b60405180838152602001821515151581526020019250505060405180910390f35b610d936125a8565b610d9d60006111b1565b905090565b610daa6125cc565b610dc0838360006112009092919063ffffffff16565b905092915050565b6000610dde82600061127690919063ffffffff16565b9050919050565b6000610df160006112b6565b905090565b610dfe6125ef565b610e148383600061130a9092919063ffffffff16565b905092915050565b6000610e34838360006113b69092919063ffffffff16565b905092915050565b6000610e54838360006113f89092919063ffffffff16565b905092915050565b6000806060610e6b600061173b565b925092509250909192565b6000610e8c8260006118e190919063ffffffff16565b9050919050565b6000610eab838360006119019092919063ffffffff16565b905092915050565b606080600080600080610ed087600061196c90919063ffffffff16565b95509550955095509550955091939550919395565b6000610efb826000611bcb90919063ffffffff16565b9050919050565b600080610f19836000611be090919063ffffffff16565b91509150915091565b6000610f38826000611c7890919063ffffffff16565b9050919050565b6000610f55826000611c9890919063ffffffff16565b9050919050565b6000610f72826000611cb890919063ffffffff16565b9050919050565b6000610f9183836000611cd89092919063ffffffff16565b905092915050565b600080600060606000610fac6000611d0d565b945094509450945094509091929394565b6000610fd583836000611f6b9092919063ffffffff16565b905092915050565b6000610ff382600061208390919063ffffffff16565b9050919050565b6000611012838360006120a39092919063ffffffff16565b905092915050565b600080600080600080600061102d612612565b60006110438a600061211190919063ffffffff16565b9850985098509850985098509850985098509193959799909294969850565b600061107a838360006124989092919063ffffffff16565b905092915050565b60008073__TellorGettersLibrary__________________63912c0e65909185856040518463ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808481526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001935050505060206040518083038186803b15801561115957600080fd5b505af415801561116d573d6000803e3d6000fd5b505050506040513d602081101561118357600080fd5b8101908080519060200190929190505050905092915050565b6000806111a960006124cd565b915091509091565b6111b96125a8565b816009016033806020026040519081016040528092919082603380156111f4576020028201915b8154815260200190600101908083116111e0575b50505050509050919050565b6112086125cc565b8360440160008481526020019081526020016000206008016000838152602001908152602001600020600580602002604051908101604052809291908260058015611268576020028201915b815481526020019060010190808311611254575b505050505090509392505050565b600082600001600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905092915050565b600081600301600060405180807f746f74616c5f737570706c790000000000000000000000000000000000000000815250600c01905060405180910390208152602001908152602001600020549050919050565b6113126125ef565b83604401600084815260200190815260200160002060070160008381526020019081526020016000206005806020026040519081016040528092919082600580156113a8576020028201915b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001906001019080831161135e575b505050505090509392505050565b6000836044016000848152602001908152602001600020600601600083815260200190815260200160002060009054906101000a900460ff1690509392505050565b6000808460410160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208054905014806114d55750818460410160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600081548110151561149757fe5b9060005260206000200160000160009054906101000a90046fffffffffffffffffffffffffffffffff166fffffffffffffffffffffffffffffffff16115b156114e35760009050611734565b60008460410160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020905060008180549050141561153f576000915050611734565b80600182805490500381548110151561155457fe5b9060005260206000200160000160009054906101000a90046fffffffffffffffffffffffffffffffff166fffffffffffffffffffffffffffffffff16831015156115f1578060018280549050038154811015156115ad57fe5b9060005260206000200160000160109054906101000a90046fffffffffffffffffffffffffffffffff166fffffffffffffffffffffffffffffffff16915050611734565b80600081548110151561160057fe5b9060005260206000200160000160009054906101000a90046fffffffffffffffffffffffffffffffff166fffffffffffffffffffffffffffffffff1683101561164d576000915050611734565b60008090506000600183805490500390505b818111156116e4576000600260018484010181151561167a57fe5b04905085848281548110151561168c57fe5b9060005260206000200160000160009054906101000a90046fffffffffffffffffffffffffffffffff166fffffffffffffffffffffffffffffffff161115156116d7578092506116de565b6001810391505b5061165f565b82828154811015156116f257fe5b9060005260206000200160000160109054906101000a90046fffffffffffffffffffffffffffffffff166fffffffffffffffffffffffffffffffff1693505050505b9392505050565b600080606083600301600060405180807f61706949644f6e510000000000000000000000000000000000000000000000008152506008019050604051809103902081526020019081526020016000205484600301600060405180807f6170694f6e515061796f75740000000000000000000000000000000000000000815250600c019050604051809103902081526020019081526020016000205485604401600087600301600060405180807f61706949644f6e51000000000000000000000000000000000000000000000000815250600801905060405180910390208152602001908152602001600020548152602001908152602001600020600001808054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156118cd5780601f106118a2576101008083540402835291602001916118cd565b820191906000526020600020905b8154815290600101906020018083116118b057829003601f168201915b505050505090509250925092509193909250565b600082600301600083815260200190815260200160002054905092915050565b600083603d01600084815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1690509392505050565b606080600080600080600088604401600089815260200190815260200160002090508060000181600101826002015483600301600060405180807f6772616e756c6172697479000000000000000000000000000000000000000000815250600b019050604051809103902081526020019081526020016000205484600301600060405180807f696e6465780000000000000000000000000000000000000000000000000000008152506005019050604051809103902081526020019081526020016000205485600301600060405180807f7061796f7574000000000000000000000000000000000000000000000000000081525060060190506040518091039020815260200190815260200160002054858054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015611b115780601f10611ae657610100808354040283529160200191611b11565b820191906000526020600020905b815481529060010190602001808311611af457829003601f168201915b50505050509550848054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015611bad5780601f10611b8257610100808354040283529160200191611bad565b820191906000526020600020905b815481529060010190602001808311611b9057829003601f168201915b50505050509450965096509650965096509650509295509295509295565b6000611bd88383436113f8565b905092915050565b6000808360430160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600001548460430160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010154915091509250929050565b600082603e01600083815260200190815260200160002054905092915050565b600082604601600083815260200190815260200160002054905092915050565b600082603f01600083815260200190815260200160002054905092915050565b600083604401600084815260200190815260200160002060050160008381526020019081526020016000205490509392505050565b600080600060606000856001015486600301600060405180807f6d696e696e674170694964000000000000000000000000000000000000000000815250600b019050604051809103902081526020019081526020016000205487600301600060405180807f646966666963756c74795f6c6576656c00000000000000000000000000000000815250601001905060405180910390208152602001908152602001600020548860440160008a600301600060405180807f6d696e696e674170694964000000000000000000000000000000000000000000815250600b019050604051809103902081526020019081526020016000205481526020019081526020016000206000018960440160008b600301600060405180807f6d696e696e674170694964000000000000000000000000000000000000000000815250600b01905060405180910390208152602001908152602001600020548152602001908152602001600020600301600060405180807f6772616e756c6172697479000000000000000000000000000000000000000000815250600b0190506040518091039020815260200190815260200160002054818054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015611f515780601f10611f2657610100808354040283529160200191611f51565b820191906000526020600020905b815481529060010190602001808311611f3457829003601f168201915b505050505091509450945094509450945091939590929450565b6000808460430160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000015411156120485760006120338361202587600301600060405180807f7374616b65416d74000000000000000000000000000000000000000000000000815250600801905060405180910390208152602001908152602001600020546120178989611bcb565b61258f90919063ffffffff16565b61258f90919063ffffffff16565b101515612043576001905061207c565b612077565b6000612066836120588787611bcb565b61258f90919063ffffffff16565b101515612076576001905061207c565b5b600090505b9392505050565b600082604501600083815260200190815260200160002054905092915050565b600083604001600084815260200190815260200160002060060160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1690509392505050565b6000806000806000806000612124612612565b6000808b60400160008c8152602001908152602001600020905080600001548160010160009054906101000a900460ff168260010160019054906101000a900460ff168360010160029054906101000a900460ff168460010160039054906101000a900473ffffffffffffffffffffffffffffffffffffffff168560020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff168660030160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166101006040519081016040528089600401600060405180807f617069496400000000000000000000000000000000000000000000000000000081525060050190506040518091039020815260200190815260200160002054815260200189600401600060405180807f74696d657374616d70000000000000000000000000000000000000000000000081525060090190506040518091039020815260200190815260200160002054815260200189600401600060405180807f76616c756500000000000000000000000000000000000000000000000000000081525060050190506040518091039020815260200190815260200160002054815260200189600401600060405180807f6d696e457865637574696f6e446174650000000000000000000000000000000081525060100190506040518091039020815260200190815260200160002054815260200189600401600060405180807f6e756d6265724f66566f74657300000000000000000000000000000000000000815250600d0190506040518091039020815260200190815260200160002054815260200189600401600060405180807f626c6f636b4e756d626572000000000000000000000000000000000000000000815250600b0190506040518091039020815260200190815260200160002054815260200189600401600060405180807f696e64657800000000000000000000000000000000000000000000000000000081525060050190506040518091039020815260200190815260200160002054815260200189600401600060405180807f71756f72756d0000000000000000000000000000000000000000000000000000815250600601905060405180910390208152602001908152602001600020548152508860050154995099509950995099509950995099509950509295985092959850929598565b600083604401600084815260200190815260200160002060040160008381526020019081526020016000205490509392505050565b6000806125848384603e01600086600301600060405180807f74696d654f664c61737450726f6f660000000000000000000000000000000000815250600f019050604051809103902081526020019081526020016000205481526020019081526020016000205485600301600060405180807f74696d654f664c61737450726f6f660000000000000000000000000000000000815250600f0190506040518091039020815260200190815260200160002054611cd8565b600191509150915091565b600082821115151561259d57fe5b818303905092915050565b61066060405190810160405280603390602082028038833980820191505090505090565b60a060405190810160405280600590602082028038833980820191505090505090565b60a060405190810160405280600590602082028038833980820191505090505090565b61010060405190810160405280600890602082028038833980820191505090505090565b3382600001600060405180807f5f6f776e6572000000000000000000000000000000000000000000000000000081525060060190506040518091039020815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508082600001600060405180807f74656c6c6f72436f6e7472616374000000000000000000000000000000000000815250600e0190506040518091039020815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507fc2d1449eb0b6547aa426e09d9942a77fa4fc8cd3296305b3163e22452e0bcb8d81604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390a1505056fea165627a7a72305820fb605d7c50318319eeaba02734687fdc2381be276f1a2cef7580b37eec291b600029",
  "sourceMap": "143:755:4:-;;;315:109;8:9:-1;5:2;;;30:1;27;20:12;5:2;315:109:4;;;;;;;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;315:109:4;;;;;;;;;;;;;;;;370:47;401:15;370:6;:30;;;;;;:47;;;;;:::i;:::-;315:109;143:755;;20983:286:8;21132:10;21092:4;:16;;:37;21109:19;;;;;;;;;;;;;;;;;;;21092:37;;;;;;;;;;;;:50;;;;;;;;;;;;;;;;;;21199:15;21152:4;:16;;:45;21169:27;;;;;;;;;;;;;;;;;;;21152:45;;;;;;;;;;;;:62;;;;;;;;;;;;;;;;;;21229:33;21246:15;21229:33;;;;;;;;;;;;;;;;;;;;;;20983:286;;:::o;143:755:4:-;;;;;;;",
  "deployedSourceMap": "143:755:4:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;469:12;484:6;:18;;:47;503:27;;;;;;;;;;;;;;;;;;;484:47;;;;;;;;;;;;;;;;;;;;;469:62;;590:4;584:11;638:14;635:1;621:12;608:45;752:2;738:12;722:14;708:12;702:4;698:1;694:6;681:74;775:7;800:1;795:35;;;;874:2;860:12;853:24;795:35;825:2;811:12;804:24;6080:107:3;;8:9:-1;5:2;;;30:1;27;20:12;5:2;6080:107:3;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;6080:107:3;;;;;;;;;;;;;;;;7102:177;;8:9:-1;5:2;;;30:1;27;20:12;5:2;7102:177:3;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;7102:177:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;7102:177:3;;;;;;;;;;;;;;;;2600:121;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2600:121:3;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2600:121:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8920:95;;8:9:-1;5:2;;;30:1;27;20:12;5:2;8920:95:3;;;;;;;;;;;;;;;;;;;;;;;5912:162;;8:9:-1;5:2;;;30:1;27;20:12;5:2;5912:162:3;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;5912:162:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;5912:162:3;;;;;;;;;;;;;;;;8136:139;;8:9:-1;5:2;;;30:1;27;20:12;5:2;8136:139:3;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;8136:139:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1588:146;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1588:146:3;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1588:146:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7805:126;;8:9:-1;5:2;;;30:1;27;20:12;5:2;7805:126:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;7805:126:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7285:108;;8:9:-1;5:2;;;30:1;27;20:12;5:2;7285:108:3;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;7285:108:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2040:136;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2040:136:3;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2040:136:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4449:159;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4449:159:3;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;4449:159:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;4449:159:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;4449:159:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1205:115;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1205:115:3;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1205:115:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6769:125;;8:9:-1;5:2;;;30:1;27;20:12;5:2;6769:125:3;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;6769:125:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3622:127;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3622:127:3;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;3622:127:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4793;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4793:127:3;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;4793:127:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6365:173;;8:9:-1;5:2;;;30:1;27;20:12;5:2;6365:173:3;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;6365:173:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8574:143;;8:9:-1;5:2;;;30:1;27;20:12;5:2;8574:143:3;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;8574:143:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7552:134;;8:9:-1;5:2;;;30:1;27;20:12;5:2;7552:134:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;7552:134:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;864:139;;8:9:-1;5:2;;;30:1;27;20:12;5:2;864:139:3;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;864:139:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3909:108;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3909:108:3;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;3909:108:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2364:138;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2364:138:3;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2364:138:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3186:197;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3186:197:3;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;3186:197:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;3186:197:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5563:149;;8:9:-1;5:2;;;30:1;27;20:12;5:2;5563:149:3;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;5563:149:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;554:136;;8:9:-1;5:2;;;30:1;27;20:12;5:2;554:136:3;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;554:136:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5231:101;;8:9:-1;5:2;;;30:1;27;20:12;5:2;5231:101:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6080:107;6125:15;;:::i;:::-;6158:22;:6;:20;:22::i;:::-;6151:29;;6080:107;:::o;7102:177::-;7189:14;;:::i;:::-;7221:51;7254:6;7261:10;7221:6;:32;;:51;;;;;:::i;:::-;7214:58;;7102:177;;;;:::o;2600:121::-;2661:7;2686:28;2708:5;2686:6;:21;;:28;;;;:::i;:::-;2679:35;;2600:121;;;:::o;8920:95::-;8966:4;8988:20;:6;:18;:20::i;:::-;8981:27;;8920:95;:::o;5912:162::-;5990:17;;:::i;:::-;6025:42;6049:6;6056:10;6025:6;:23;;:42;;;;;:::i;:::-;6018:49;;5912:162;;;;:::o;8136:139::-;8209:4;8231:37;8250:6;8257:10;8231:6;:18;;:37;;;;;:::i;:::-;8224:44;;8136:139;;;;:::o;1588:146::-;1666:4;1689:38;1708:5;1714:12;1689:6;:18;;:38;;;;;:::i;:::-;1682:45;;1588:146;;;;:::o;7805:126::-;7854:4;7860;7865:13;7900:24;:6;:22;:24::i;:::-;7893:31;;;;;;7805:126;;;:::o;7285:108::-;7340:4;7362:24;7380:5;7362:6;:17;;:24;;;;:::i;:::-;7355:31;;7285:108;;;:::o;2040:136::-;2114:4;2136:33;2151:10;2162:6;2136;:14;;:33;;;;;:::i;:::-;2129:40;;2040:136;;;;:::o;4449:159::-;4504:13;4519;4533:7;4541:4;4547;4553;4576:25;4594:6;4576;:17;;:25;;;;:::i;:::-;4569:32;;;;;;;;;;;;4449:159;;;;;;;:::o;1205:115::-;1262:8;1290:23;1307:5;1290:6;:16;;:23;;;;:::i;:::-;1283:30;;1205:115;;;:::o;6769:125::-;6831:4;6836;6858:29;6879:7;6858:6;:20;;:29;;;;:::i;:::-;6851:36;;;;6769:125;;;:::o;3622:127::-;3684:4;3710:32;3731:10;3710:6;:20;;:32;;;;:::i;:::-;3703:39;;3622:127;;;:::o;4793:::-;4858:4;4881:32;4907:5;4881:6;:25;;:32;;;;:::i;:::-;4873:40;;4793:127;;;:::o;6365:173::-;6452:4;6474:57;6507:23;6474:6;:32;;:57;;;;:::i;:::-;6467:64;;6365:173;;;:::o;8574:143::-;8649:4;8672:38;8692:6;8699:10;8672:6;:19;;:38;;;;;:::i;:::-;8665:45;;8574:143;;;;:::o;7552:134::-;7598:7;7607:4;7613;7618:13;7632:4;7658:21;:6;:19;:21::i;:::-;7651:28;;;;;;;;;;7552:134;;;;;:::o;864:139::-;938:4;960:36;982:5;988:7;960:6;:21;;:36;;;;;:::i;:::-;953:43;;864:139;;;;:::o;3909:108::-;3963:4;3989:21;4005:4;3989:6;:15;;:21;;;;:::i;:::-;3982:28;;3909:108;;;:::o;2364:138::-;2438:4;2460:35;2475:10;2486:8;2460:6;:14;;:35;;;;;:::i;:::-;2453:42;;2364:138;;;;:::o;3186:197::-;3250:7;3259:4;3265;3271;3277:7;3286;3295;3303:14;;:::i;:::-;3319:3;3340:36;3365:10;3340:6;:24;;:36;;;;:::i;:::-;3333:43;;;;;;;;;;;;;;;;;;3186:197;;;;;;;;;;;:::o;5563:149::-;5641:4;5663:42;5687:6;5694:10;5663:6;:23;;:42;;;;;:::i;:::-;5656:49;;5563:149;;;;:::o;554:136::-;629:4;651:6;:16;;;;668:5;674:8;651:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;651:32:3;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;651:32:3;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;651:32:3;;;;;;;;;;;;;;;;644:39;;554:136;;;;:::o;5231:101::-;5277:4;5282;5304:21;:6;:19;:21::i;:::-;5297:28;;;;5231:101;;:::o;17350:134:8:-;17429:15;;:::i;:::-;17462:4;:15;;17455:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;17350:134;;;:::o;18497:213::-;18618:14;;:::i;:::-;18650:4;:15;;:23;18666:6;18650:23;;;;;;;;;;;:41;;:53;18692:10;18650:53;;;;;;;;;;;18643:60;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;18497:213;;;;;:::o;12605:150::-;12700:7;12725:4;:16;;:23;12742:5;12725:23;;;;;;;;;;;;;;;;;;;;;12718:30;;12605:150;;;;:::o;21372:147::-;21450:4;21472;:13;;:40;21486:25;;;;;;;;;;;;;;;;;;;21472:40;;;;;;;;;;;;21465:47;;21372:147;;;:::o;17139:203::-;17251:17;;:::i;:::-;17286:4;:15;;:23;17302:6;17286:23;;;;;;;;;;;:37;;:49;17324:10;17286:49;;;;;;;;;;;17279:56;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;17139:203;;;;;:::o;20067:181::-;20174:4;20196;:15;;:23;20212:6;20196:23;;;;;;;;;;;:33;;:45;20230:10;20196:45;;;;;;;;;;;;;;;;;;;;;20189:52;;20067:181;;;;;:::o;10688:976::-;10799:4;10851:1;10820:4;:13;;:20;10834:5;10820:20;;;;;;;;;;;;;;;:27;;;;:32;10819:88;;;;10894:12;10858:4;:13;;:20;10872:5;10858:20;;;;;;;;;;;;;;;10879:1;10858:23;;;;;;;;;;;;;;;;;:33;;;;;;;;;;;;:48;;;10819:88;10815:843;;;10934:1;10927:8;;;;10815:843;10967:32;11002:4;:13;;:20;11016:5;11002:20;;;;;;;;;;;;;;;10967:55;;11058:1;11036:11;:18;;;;:23;11032:37;;;11068:1;11061:8;;;;;11032:37;11099:11;11130:1;11111:11;:18;;;;:20;11099:33;;;;;;;;;;;;;;;;;:43;;;;;;;;;;;;11083:59;;:12;:59;;11079:123;;;11163:11;11194:1;11175:11;:18;;;;:20;11163:33;;;;;;;;;;;;;;;;;:39;;;;;;;;;;;;11156:46;;;;;;;11079:123;11231:11;11243:1;11231:14;;;;;;;;;;;;;;;;;:24;;;;;;;;;;;;11216:39;;:12;:39;11212:53;;;11264:1;11257:8;;;;;11212:53;11326:8;11337:1;11326:12;;11348:8;11378:1;11359:11;:18;;;;:20;11348:31;;11389:223;11402:3;11396;:9;11389:223;;;11421:8;11449:1;11445;11439:3;11433;:9;:13;11432:18;;;;;;;;11421:29;;11496:12;11468:11;11480:3;11468:16;;;;;;;;;;;;;;;;;:26;;;;;;;;;;;;:40;;;;11464:138;;;11534:3;11528:9;;11464:138;;;11586:1;11582:3;:5;11576:11;;11464:138;11389:223;;;;11628:11;11640:3;11628:16;;;;;;;;;;;;;;;;;:22;;;;;;;;;;;;11621:29;;;;;;;10688:976;;;;;;:::o;19590:277::-;19671:4;19677;19682:13;19718:4;:13;;:36;19732:21;;;;;;;;;;;;;;;;;;;19718:36;;;;;;;;;;;;19755:4;:13;;:40;19769:25;;;;;;;;;;;;;;;;;;;19755:40;;;;;;;;;;;;19796:4;:15;;:53;19812:4;:13;;:36;19826:21;;;;;;;;;;;;;;;;;;;19812:36;;;;;;;;;;;;19796:53;;;;;;;;;;;:63;;19710:150;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;19590:277;;;;;:::o;18760:139::-;18850:4;18872;:13;;:20;18886:5;18872:20;;;;;;;;;;;;18865:27;;18760:139;;;;:::o;11969:168::-;12077:4;12099;:11;;:23;12111:10;12099:23;;;;;;;;;;;:31;12123:6;12099:31;;;;;;;;;;;;;;;;;;;;;;;;;12092:38;;11969:168;;;;;:::o;15197:383::-;15285:13;15299;15314:7;15322:4;15328;15334;15350:16;15369:4;:15;;:23;15385:6;15369:23;;;;;;;;;;;15350:42;;15411:4;:14;;15426:4;:14;;15441:4;:12;;;15455:4;:16;;:42;15472:24;;;;;;;;;;;;;;;;;;;15455:42;;;;;;;;;;;;15498:4;:16;;:36;15515:18;;;;;;;;;;;;;;;;;;;15498:36;;;;;;;;;;;;15535:4;:16;;:37;15552:19;;;;;;;;;;;;;;;;;;;15535:37;;;;;;;;;;;;15403:170;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;15197:383;;;;;;;;:::o;10250:163::-;10340:8;10368:37;10380:4;10385:5;10392:12;10368:11;:37::i;:::-;10361:44;;10250:163;;;;:::o;18096:196::-;18191:4;18196;18219;:11;;:20;18231:7;18219:20;;;;;;;;;;;;;;;:34;;;18254:4;:11;;:20;18266:7;18254:20;;;;;;;;;;;;;;;:30;;;18211:74;;;;18096:196;;;;;:::o;14221:157::-;14317:4;14343;:16;;:28;14360:10;14343:28;;;;;;;;;;;;14336:35;;14221:157;;;;:::o;15765:155::-;15863:4;15886;:20;;:27;15907:5;15886:27;;;;;;;;;;;;15878:35;;15765:155;;;;:::o;17662:202::-;17783:4;17805;:27;;:52;17833:23;17805:52;;;;;;;;;;;;17798:59;;17662:202;;;;:::o;20638:181::-;20747:4;20770;:15;;:23;20786:6;20770:23;;;;;;;;;;;:30;;:42;20801:10;20770:42;;;;;;;;;;;;20763:49;;20638:181;;;;;:::o;19056:415::-;19134:7;19143:4;19149;19154:13;19168:4;19195;:21;;;19217:4;:13;;:39;19231:24;;;;;;;;;;;;;;;;;;;19217:39;;;;;;;;;;;;19257:4;:13;;:44;19271:29;;;;;;;;;;;;;;;;;;;19257:44;;;;;;;;;;;;19302:4;:15;;:56;19318:4;:13;;:39;19332:24;;;;;;;;;;;;;;;;;;;19318:39;;;;;;;;;;;;19302:56;;;;;;;;;;;:66;;19369:4;:15;;:56;19385:4;:13;;:39;19399:24;;;;;;;;;;;;;;;;;;;19385:39;;;;;;;;;;;;19369:56;;;;;;;;;;;:68;;:94;19438:24;;;;;;;;;;;;;;;;;;;19369:94;;;;;;;;;;;;19187:277;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;19056:415;;;;;;;:::o;9598:439::-;9705:4;9757:1;9723:4;:11;;:18;9735:5;9723:18;;;;;;;;;;;;;;;:32;;;:35;9720:289;;;9856:1;9776:76;9844:7;9776:63;9802:4;:13;;:36;9816:21;;;;;;;;;;;;;;;;;;;9802:36;;;;;;;;;;;;9776:21;9786:4;9791:5;9776:9;:21::i;:::-;:25;;:63;;;;:::i;:::-;:67;;:76;;;;:::i;:::-;:81;;9773:129;;;9883:4;9876:11;;;;9773:129;9720:289;;;9967:1;9929:34;9955:7;9929:21;9939:4;9944:5;9929:9;:21::i;:::-;:25;;:34;;;;:::i;:::-;:39;;9926:83;;;9994:4;9987:11;;;;9926:83;9720:289;10025:5;10018:12;;9598:439;;;;;;:::o;14539:137::-;14627:4;14653;:10;;:16;14664:4;14653:16;;;;;;;;;;;;14646:23;;14539:137;;;;:::o;12330:177::-;12437:4;12459;:13;;:25;12473:10;12459:25;;;;;;;;;;;:31;;:41;12491:8;12459:41;;;;;;;;;;;;;;;;;;;;;;;;;12452:48;;12330:177;;;;;:::o;13224:759::-;13323:7;13332:4;13338;13344;13350:7;13359;13368;13376:14;;:::i;:::-;13392:3;13406:20;13429:4;:13;;:25;13443:10;13429:25;;;;;;;;;;;13406:48;;13471:4;:9;;;13481:4;:13;;;;;;;;;;;;13496:4;:22;;;;;;;;;;;;13520:4;:15;;;;;;;;;;;;13537:4;:18;;;;;;;;;;;;13557:4;:19;;;;;;;;;;;;13577:4;:20;;;;;;;;;;;;13464:512;;;;;;;;;13599:4;:20;;:40;13620:18;;;;;;;;;;;;;;;;;;;13599:40;;;;;;;;;;;;13464:512;;;;13641:4;:20;;:44;13662:22;;;;;;;;;;;;;;;;;;;13641:44;;;;;;;;;;;;13464:512;;;;13687:4;:20;;:40;13708:18;;;;;;;;;;;;;;;;;;;13687:40;;;;;;;;;;;;13464:512;;;;13729:4;:20;;:51;13750:29;;;;;;;;;;;;;;;;;;;13729:51;;;;;;;;;;;;13464:512;;;;13782:4;:20;;:48;13803:26;;;;;;;;;;;;;;;;;;;13782:48;;;;;;;;;;;;13464:512;;;;13832:4;:20;;:46;13853:24;;;;;;;;;;;;;;;;;;;13832:46;;;;;;;;;;;;13464:512;;;;13880:4;:20;;:40;13901:18;;;;;;;;;;;;;;;;;;;13880:40;;;;;;;;;;;;13464:512;;;;13922:4;:20;;:41;13943:19;;;;;;;;;;;;;;;;;;;13922:41;;;;;;;;;;;;13464:512;;;13965:4;:10;;;13464:512;;;;;;;;;;;;;;;;;;;13224:759;;;;;;;;;;;:::o;16749:189::-;16860:4;16882;:15;;:23;16898:6;16882:23;;;;;;;;;;;:37;;:49;16920:10;16882:49;;;;;;;;;;;;16875:56;;16749:189;;;;;:::o;16267:244::-;16345:4;16350;16373:125;16386:4;16391;:16;;:61;16408:4;:13;;:43;16422:28;;;;;;;;;;;;;;;;;;;16408:43;;;;;;;;;;;;16391:61;;;;;;;;;;;;16454:4;:13;;:43;16468:28;;;;;;;;;;;;;;;;;;;16454:43;;;;;;;;;;;;16373:12;:125::i;:::-;16499:4;16365:139;;;;16267:244;;;:::o;511:110:7:-;569:7;596:1;591;:6;;584:14;;;;;;615:1;611;:5;604:12;;511:110;;;;:::o;143:755:4:-;;;;;;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;148:4;140:6;136:17;126:27;;0:157;143:755:4;;;;:::o;:::-;;;;;;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;148:4;140:6;136:17;126:27;;0:157;143:755:4;;;;:::o;:::-;;;;;;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;148:4;140:6;136:17;126:27;;0:157;143:755:4;;;;:::o;:::-;;;;;;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;148:4;140:6;136:17;126:27;;0:157;143:755:4;;;;:::o;20983:286:8:-;21132:10;21092:4;:16;;:37;21109:19;;;;;;;;;;;;;;;;;;;21092:37;;;;;;;;;;;;:50;;;;;;;;;;;;;;;;;;21199:15;21152:4;:16;;:45;21169:27;;;;;;;;;;;;;;;;;;;21152:45;;;;;;;;;;;;:62;;;;;;;;;;;;;;;;;;21229:33;21246:15;21229:33;;;;;;;;;;;;;;;;;;;;;;20983:286;;:::o",
  "source": "pragma solidity ^0.5.0;\n\nimport \"./TellorGetters.sol\";\nimport \"./libraries/TellorLibrary.sol\";\nimport \"./libraries/TellorGettersLibrary.sol\";\n\ncontract TellorMaster is TellorGetters{\n    /**\n     * @dev The constructor sets the original `tellorStorageOwner` of the contract to the sender\n     * account.\n    */\n    constructor (address _tellorContract)  public{\n        tellor.tellorMasterConstructor(_tellorContract);\n    }\n\n    function () external payable {\n        address addr = tellor.addressVars[keccak256(\"tellorContract\")];\n        assembly {\n            let freememstart := mload(0x40)\n            calldatacopy(freememstart, 0, calldatasize())\n            let success := delegatecall(not(0), addr, freememstart, calldatasize(), freememstart, 32)\n            switch success\n            case 0 { revert(freememstart, 32) }\n            default { return(freememstart, 32) }\n        }\n    }\n\n}\n\n        //Test this one:\n            // let result := delegatecall(not(0), addr, add(_calldata, 0x20), mload(_calldata), 0, 0)\n            // let size := returndatasize\n            // let ptr := mload(0x40)\n            // returndatacopy(ptr, 0, size)\n\n            // // revert instead of invalid() bc if the underlying call failed with invalid() it already wasted gas.\n            // // if the call returned error data, forward it\n            // switch result case 0 { revert(ptr, size) }\n            // default { return(ptr, size) }",
  "sourcePath": "/Users/mdcoon/git/TellorCore/contracts/TellorMaster.sol",
  "ast": {
    "absolutePath": "/Users/mdcoon/git/TellorCore/contracts/TellorMaster.sol",
    "exportedSymbols": {
      "TellorMaster": [
        773
      ]
    },
    "id": 774,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 741,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:4"
      },
      {
        "absolutePath": "/Users/mdcoon/git/TellorCore/contracts/TellorGetters.sol",
        "file": "./TellorGetters.sol",
        "id": 742,
        "nodeType": "ImportDirective",
        "scope": 774,
        "sourceUnit": 740,
        "src": "25:29:4",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/mdcoon/git/TellorCore/contracts/libraries/TellorLibrary.sol",
        "file": "./libraries/TellorLibrary.sol",
        "id": 743,
        "nodeType": "ImportDirective",
        "scope": 774,
        "sourceUnit": 5655,
        "src": "55:39:4",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/mdcoon/git/TellorCore/contracts/libraries/TellorGettersLibrary.sol",
        "file": "./libraries/TellorGettersLibrary.sol",
        "id": 744,
        "nodeType": "ImportDirective",
        "scope": 774,
        "sourceUnit": 2105,
        "src": "95:46:4",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 745,
              "name": "TellorGetters",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 739,
              "src": "168:13:4",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_TellorGetters_$739",
                "typeString": "contract TellorGetters"
              }
            },
            "id": 746,
            "nodeType": "InheritanceSpecifier",
            "src": "168:13:4"
          }
        ],
        "contractDependencies": [
          739
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 773,
        "linearizedBaseContracts": [
          773,
          739
        ],
        "name": "TellorMaster",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 757,
              "nodeType": "Block",
              "src": "360:64:4",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 754,
                        "name": "_tellorContract",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 748,
                        "src": "401:15:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 751,
                        "name": "tellor",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 296,
                        "src": "370:6:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TellorStorageStruct_$1084_storage",
                          "typeString": "struct TellorGettersLibrary.TellorStorageStruct storage ref"
                        }
                      },
                      "id": 753,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "tellorMasterConstructor",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2088,
                      "src": "370:30:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_TellorStorageStruct_$1084_storage_ptr_$_t_address_$returns$__$bound_to$_t_struct$_TellorStorageStruct_$1084_storage_ptr_$",
                        "typeString": "function (struct TellorGettersLibrary.TellorStorageStruct storage pointer,address)"
                      }
                    },
                    "id": 755,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "370:47:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 756,
                  "nodeType": "ExpressionStatement",
                  "src": "370:47:4"
                }
              ]
            },
            "documentation": "@dev The constructor sets the original `tellorStorageOwner` of the contract to the sender\naccount.",
            "id": 758,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 749,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 748,
                  "name": "_tellorContract",
                  "nodeType": "VariableDeclaration",
                  "scope": 758,
                  "src": "328:23:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 747,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "328:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "327:25:4"
            },
            "returnParameters": {
              "id": 750,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "360:0:4"
            },
            "scope": 773,
            "src": "315:109:4",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 771,
              "nodeType": "Block",
              "src": "459:436:4",
              "statements": [
                {
                  "assignments": [
                    762
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 762,
                      "name": "addr",
                      "nodeType": "VariableDeclaration",
                      "scope": 771,
                      "src": "469:12:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 761,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "469:7:4",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 769,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 763,
                        "name": "tellor",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 296,
                        "src": "484:6:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TellorStorageStruct_$1084_storage",
                          "typeString": "struct TellorGettersLibrary.TellorStorageStruct storage ref"
                        }
                      },
                      "id": 764,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "addressVars",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1011,
                      "src": "484:18:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_bytes32_$_t_address_$",
                        "typeString": "mapping(bytes32 => address)"
                      }
                    },
                    "id": 768,
                    "indexExpression": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "hexValue": "74656c6c6f72436f6e7472616374",
                          "id": 766,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "513:16:4",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_d48fd09afdab521f4f69bd2af8177f60fb0709ce0f1b3d5b8a2e233a20453848",
                            "typeString": "literal_string \"tellorContract\""
                          },
                          "value": "tellorContract"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_stringliteral_d48fd09afdab521f4f69bd2af8177f60fb0709ce0f1b3d5b8a2e233a20453848",
                            "typeString": "literal_string \"tellorContract\""
                          }
                        ],
                        "id": 765,
                        "name": "keccak256",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5773,
                        "src": "503:9:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                          "typeString": "function (bytes memory) pure returns (bytes32)"
                        }
                      },
                      "id": 767,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "503:27:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "484:47:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "469:62:4"
                },
                {
                  "externalReferences": [
                    {
                      "addr": {
                        "declaration": 762,
                        "isOffset": false,
                        "isSlot": false,
                        "src": "702:4:4",
                        "valueSize": 1
                      }
                    }
                  ],
                  "id": 770,
                  "nodeType": "InlineAssembly",
                  "operations": "{\n    let freememstart := mload(0x40)\n    calldatacopy(freememstart, 0, calldatasize())\n    let success := delegatecall(not(0), addr, freememstart, calldatasize(), freememstart, 32)\n    switch success\n    case 0 {\n        revert(freememstart, 32)\n    }\n    default {\n        return(freememstart, 32)\n    }\n}",
                  "src": "541:354:4"
                }
              ]
            },
            "documentation": null,
            "id": 772,
            "implemented": true,
            "kind": "fallback",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 759,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "439:2:4"
            },
            "returnParameters": {
              "id": 760,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "459:0:4"
            },
            "scope": 773,
            "src": "430:465:4",
            "stateMutability": "payable",
            "superFunction": null,
            "visibility": "external"
          }
        ],
        "scope": 774,
        "src": "143:755:4"
      }
    ],
    "src": "0:1433:4"
  },
  "legacyAST": {
    "absolutePath": "/Users/mdcoon/git/TellorCore/contracts/TellorMaster.sol",
    "exportedSymbols": {
      "TellorMaster": [
        773
      ]
    },
    "id": 774,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 741,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:4"
      },
      {
        "absolutePath": "/Users/mdcoon/git/TellorCore/contracts/TellorGetters.sol",
        "file": "./TellorGetters.sol",
        "id": 742,
        "nodeType": "ImportDirective",
        "scope": 774,
        "sourceUnit": 740,
        "src": "25:29:4",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/mdcoon/git/TellorCore/contracts/libraries/TellorLibrary.sol",
        "file": "./libraries/TellorLibrary.sol",
        "id": 743,
        "nodeType": "ImportDirective",
        "scope": 774,
        "sourceUnit": 5655,
        "src": "55:39:4",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/mdcoon/git/TellorCore/contracts/libraries/TellorGettersLibrary.sol",
        "file": "./libraries/TellorGettersLibrary.sol",
        "id": 744,
        "nodeType": "ImportDirective",
        "scope": 774,
        "sourceUnit": 2105,
        "src": "95:46:4",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 745,
              "name": "TellorGetters",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 739,
              "src": "168:13:4",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_TellorGetters_$739",
                "typeString": "contract TellorGetters"
              }
            },
            "id": 746,
            "nodeType": "InheritanceSpecifier",
            "src": "168:13:4"
          }
        ],
        "contractDependencies": [
          739
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 773,
        "linearizedBaseContracts": [
          773,
          739
        ],
        "name": "TellorMaster",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 757,
              "nodeType": "Block",
              "src": "360:64:4",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 754,
                        "name": "_tellorContract",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 748,
                        "src": "401:15:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 751,
                        "name": "tellor",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 296,
                        "src": "370:6:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TellorStorageStruct_$1084_storage",
                          "typeString": "struct TellorGettersLibrary.TellorStorageStruct storage ref"
                        }
                      },
                      "id": 753,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "tellorMasterConstructor",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2088,
                      "src": "370:30:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_TellorStorageStruct_$1084_storage_ptr_$_t_address_$returns$__$bound_to$_t_struct$_TellorStorageStruct_$1084_storage_ptr_$",
                        "typeString": "function (struct TellorGettersLibrary.TellorStorageStruct storage pointer,address)"
                      }
                    },
                    "id": 755,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "370:47:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 756,
                  "nodeType": "ExpressionStatement",
                  "src": "370:47:4"
                }
              ]
            },
            "documentation": "@dev The constructor sets the original `tellorStorageOwner` of the contract to the sender\naccount.",
            "id": 758,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 749,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 748,
                  "name": "_tellorContract",
                  "nodeType": "VariableDeclaration",
                  "scope": 758,
                  "src": "328:23:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 747,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "328:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "327:25:4"
            },
            "returnParameters": {
              "id": 750,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "360:0:4"
            },
            "scope": 773,
            "src": "315:109:4",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 771,
              "nodeType": "Block",
              "src": "459:436:4",
              "statements": [
                {
                  "assignments": [
                    762
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 762,
                      "name": "addr",
                      "nodeType": "VariableDeclaration",
                      "scope": 771,
                      "src": "469:12:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 761,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "469:7:4",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 769,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 763,
                        "name": "tellor",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 296,
                        "src": "484:6:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TellorStorageStruct_$1084_storage",
                          "typeString": "struct TellorGettersLibrary.TellorStorageStruct storage ref"
                        }
                      },
                      "id": 764,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "addressVars",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1011,
                      "src": "484:18:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_bytes32_$_t_address_$",
                        "typeString": "mapping(bytes32 => address)"
                      }
                    },
                    "id": 768,
                    "indexExpression": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "hexValue": "74656c6c6f72436f6e7472616374",
                          "id": 766,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "513:16:4",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_d48fd09afdab521f4f69bd2af8177f60fb0709ce0f1b3d5b8a2e233a20453848",
                            "typeString": "literal_string \"tellorContract\""
                          },
                          "value": "tellorContract"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_stringliteral_d48fd09afdab521f4f69bd2af8177f60fb0709ce0f1b3d5b8a2e233a20453848",
                            "typeString": "literal_string \"tellorContract\""
                          }
                        ],
                        "id": 765,
                        "name": "keccak256",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5773,
                        "src": "503:9:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                          "typeString": "function (bytes memory) pure returns (bytes32)"
                        }
                      },
                      "id": 767,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "503:27:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "484:47:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "469:62:4"
                },
                {
                  "externalReferences": [
                    {
                      "addr": {
                        "declaration": 762,
                        "isOffset": false,
                        "isSlot": false,
                        "src": "702:4:4",
                        "valueSize": 1
                      }
                    }
                  ],
                  "id": 770,
                  "nodeType": "InlineAssembly",
                  "operations": "{\n    let freememstart := mload(0x40)\n    calldatacopy(freememstart, 0, calldatasize())\n    let success := delegatecall(not(0), addr, freememstart, calldatasize(), freememstart, 32)\n    switch success\n    case 0 {\n        revert(freememstart, 32)\n    }\n    default {\n        return(freememstart, 32)\n    }\n}",
                  "src": "541:354:4"
                }
              ]
            },
            "documentation": null,
            "id": 772,
            "implemented": true,
            "kind": "fallback",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 759,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "439:2:4"
            },
            "returnParameters": {
              "id": 760,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "459:0:4"
            },
            "scope": 773,
            "src": "430:465:4",
            "stateMutability": "payable",
            "superFunction": null,
            "visibility": "external"
          }
        ],
        "scope": 774,
        "src": "143:755:4"
      }
    ],
    "src": "0:1433:4"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.0+commit.1d4f565a.Emscripten.clang"
  },
  "networks": {
    "1555269706530": {
      "events": {
        "0xc509d04e0782579ee59912139246ccbdf6c36c43abd90591d912017f3467dd16": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "name": "_apiId",
              "type": "uint256"
            },
            {
              "indexed": false,
              "name": "_time",
              "type": "uint256"
            },
            {
              "indexed": false,
              "name": "_value",
              "type": "uint256"
            },
            {
              "indexed": false,
              "name": "_payout",
              "type": "uint256"
            },
            {
              "indexed": false,
              "name": "_currentChallenge",
              "type": "bytes32"
            }
          ],
          "name": "NewValue",
          "type": "event",
          "signature": "0xc509d04e0782579ee59912139246ccbdf6c36c43abd90591d912017f3467dd16"
        },
        "0x6d7f869757848b19c8c2456e95cd98885bc6bed062fda4077bb07985e2f76cc9": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "name": "_sender",
              "type": "address"
            },
            {
              "indexed": false,
              "name": "_sapi",
              "type": "string"
            },
            {
              "indexed": false,
              "name": "_symbol",
              "type": "string"
            },
            {
              "indexed": false,
              "name": "_granularity",
              "type": "uint256"
            },
            {
              "indexed": true,
              "name": "_apiId",
              "type": "uint256"
            },
            {
              "indexed": false,
              "name": "_value",
              "type": "uint256"
            }
          ],
          "name": "DataRequested",
          "type": "event",
          "signature": "0x6d7f869757848b19c8c2456e95cd98885bc6bed062fda4077bb07985e2f76cc9"
        },
        "0xe6d63a2aee0aaed2ab49702313ce54114f2145af219d7db30d6624af9e6dffc4": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "name": "_miner",
              "type": "address"
            },
            {
              "indexed": false,
              "name": "_nonce",
              "type": "string"
            },
            {
              "indexed": true,
              "name": "_apiId",
              "type": "uint256"
            },
            {
              "indexed": false,
              "name": "_value",
              "type": "uint256"
            },
            {
              "indexed": false,
              "name": "_currentChallenge",
              "type": "bytes32"
            }
          ],
          "name": "NonceSubmitted",
          "type": "event",
          "signature": "0xe6d63a2aee0aaed2ab49702313ce54114f2145af219d7db30d6624af9e6dffc4"
        },
        "0x1c59b53c2f787064c7f5aae431916a0600db3a76bb4029c09e24fe8313042674": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "name": "_apiId",
              "type": "uint256"
            },
            {
              "indexed": false,
              "name": "_sapi",
              "type": "string"
            },
            {
              "indexed": false,
              "name": "_apiOnQ",
              "type": "bytes32"
            },
            {
              "indexed": false,
              "name": "_apiOnQPayout",
              "type": "uint256"
            }
          ],
          "name": "NewAPIonQinfo",
          "type": "event",
          "signature": "0x1c59b53c2f787064c7f5aae431916a0600db3a76bb4029c09e24fe8313042674"
        },
        "0x9e959738f09af22daede9ff9563f8edf3f5cec8e17ce60287c911c95fa767f42": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "name": "_currentChallenge",
              "type": "bytes32"
            },
            {
              "indexed": true,
              "name": "_miningApiId",
              "type": "uint256"
            },
            {
              "indexed": false,
              "name": "_difficulty_level",
              "type": "uint256"
            },
            {
              "indexed": false,
              "name": "_multiplier",
              "type": "uint256"
            },
            {
              "indexed": false,
              "name": "_api",
              "type": "string"
            },
            {
              "indexed": false,
              "name": "_value",
              "type": "uint256"
            }
          ],
          "name": "NewChallenge",
          "type": "event",
          "signature": "0x9e959738f09af22daede9ff9563f8edf3f5cec8e17ce60287c911c95fa767f42"
        },
        "0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "name": "owner",
              "type": "address"
            },
            {
              "indexed": true,
              "name": "spender",
              "type": "address"
            },
            {
              "indexed": false,
              "name": "value",
              "type": "uint256"
            }
          ],
          "name": "Approval",
          "type": "event",
          "signature": "0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925"
        },
        "0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "name": "from",
              "type": "address"
            },
            {
              "indexed": true,
              "name": "to",
              "type": "address"
            },
            {
              "indexed": false,
              "name": "value",
              "type": "uint256"
            }
          ],
          "name": "Transfer",
          "type": "event",
          "signature": "0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef"
        },
        "0x46d8ab1385f70e5a3673e97c23c764f7600f7ed7a09b6687deae7131d51752e2": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "name": "_sender",
              "type": "address"
            }
          ],
          "name": "NewStake",
          "type": "event",
          "signature": "0x46d8ab1385f70e5a3673e97c23c764f7600f7ed7a09b6687deae7131d51752e2"
        },
        "0x4a7934670bd8304e7da22378be1368f7c4fef17c5aee81804beda8638fe428ec": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "name": "_sender",
              "type": "address"
            }
          ],
          "name": "StakeWithdrawn",
          "type": "event",
          "signature": "0x4a7934670bd8304e7da22378be1368f7c4fef17c5aee81804beda8638fe428ec"
        },
        "0x453865710d0cb4b14ad25de371c860da196368895daa9662e5087711d14daecf": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "name": "_sender",
              "type": "address"
            }
          ],
          "name": "StakeWithdrawRequested",
          "type": "event",
          "signature": "0x453865710d0cb4b14ad25de371c860da196368895daa9662e5087711d14daecf"
        },
        "0xd739c8b7fe870f381c5442416ff79d9f44c3e1d54a16ce39fc0fbe8206c4a6e8": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "name": "_DisputeID",
              "type": "uint256"
            },
            {
              "indexed": true,
              "name": "_apiId",
              "type": "uint256"
            },
            {
              "indexed": false,
              "name": "_timestamp",
              "type": "uint256"
            }
          ],
          "name": "NewDispute",
          "type": "event",
          "signature": "0xd739c8b7fe870f381c5442416ff79d9f44c3e1d54a16ce39fc0fbe8206c4a6e8"
        },
        "0x86abfce99b7dd908bec0169288797f85049ec73cbe046ed9de818fab3a497ae0": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "name": "_disputeID",
              "type": "uint256"
            },
            {
              "indexed": false,
              "name": "_position",
              "type": "bool"
            },
            {
              "indexed": true,
              "name": "_voter",
              "type": "address"
            }
          ],
          "name": "Voted",
          "type": "event",
          "signature": "0x86abfce99b7dd908bec0169288797f85049ec73cbe046ed9de818fab3a497ae0"
        },
        "0x21459c2f5447ebcf83a7f0a238c32c71076faef0d12295e771c0cb1e10434739": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "name": "_disputeID",
              "type": "uint256"
            },
            {
              "indexed": false,
              "name": "_result",
              "type": "int256"
            },
            {
              "indexed": true,
              "name": "_reportedMiner",
              "type": "address"
            },
            {
              "indexed": false,
              "name": "_reportingParty",
              "type": "address"
            },
            {
              "indexed": false,
              "name": "_active",
              "type": "bool"
            }
          ],
          "name": "DisputeVoteTallied",
          "type": "event",
          "signature": "0x21459c2f5447ebcf83a7f0a238c32c71076faef0d12295e771c0cb1e10434739"
        },
        "0xc2d1449eb0b6547aa426e09d9942a77fa4fc8cd3296305b3163e22452e0bcb8d": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "name": "_newTellor",
              "type": "address"
            }
          ],
          "name": "NewTellorAddress",
          "type": "event",
          "signature": "0xc2d1449eb0b6547aa426e09d9942a77fa4fc8cd3296305b3163e22452e0bcb8d"
        },
        "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "name": "previousOwner",
              "type": "address"
            },
            {
              "indexed": true,
              "name": "newOwner",
              "type": "address"
            }
          ],
          "name": "OwnershipTransferred",
          "type": "event",
          "signature": "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0"
        },
        "0xd32134405b68f6f7220f9c38ae310df1b648d16188006768d45be2f7c24e8820": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "name": "_sender",
              "type": "address"
            },
            {
              "indexed": true,
              "name": "_apiId",
              "type": "uint256"
            },
            {
              "indexed": false,
              "name": "_tip",
              "type": "uint256"
            },
            {
              "indexed": false,
              "name": "_payout",
              "type": "uint256"
            }
          ],
          "name": "TipAdded",
          "type": "event",
          "signature": "0xd32134405b68f6f7220f9c38ae310df1b648d16188006768d45be2f7c24e8820"
        }
      },
      "links": {
        "TellorGettersLibrary": "0x731A4E84fd77618A758883DDa92323EdD291b313"
      },
      "address": "0xd9Ad0E4E18F2430719E73b2f824C54CFA5D703b6",
      "transactionHash": "0x7d00f4c630556a5183e52a3880091c2a3dad013bec3b062ba599099b39056141"
    },
    "1555270027036": {
      "events": {
        "0xc509d04e0782579ee59912139246ccbdf6c36c43abd90591d912017f3467dd16": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "name": "_apiId",
              "type": "uint256"
            },
            {
              "indexed": false,
              "name": "_time",
              "type": "uint256"
            },
            {
              "indexed": false,
              "name": "_value",
              "type": "uint256"
            },
            {
              "indexed": false,
              "name": "_payout",
              "type": "uint256"
            },
            {
              "indexed": false,
              "name": "_currentChallenge",
              "type": "bytes32"
            }
          ],
          "name": "NewValue",
          "type": "event",
          "signature": "0xc509d04e0782579ee59912139246ccbdf6c36c43abd90591d912017f3467dd16"
        },
        "0x6d7f869757848b19c8c2456e95cd98885bc6bed062fda4077bb07985e2f76cc9": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "name": "_sender",
              "type": "address"
            },
            {
              "indexed": false,
              "name": "_sapi",
              "type": "string"
            },
            {
              "indexed": false,
              "name": "_symbol",
              "type": "string"
            },
            {
              "indexed": false,
              "name": "_granularity",
              "type": "uint256"
            },
            {
              "indexed": true,
              "name": "_apiId",
              "type": "uint256"
            },
            {
              "indexed": false,
              "name": "_value",
              "type": "uint256"
            }
          ],
          "name": "DataRequested",
          "type": "event",
          "signature": "0x6d7f869757848b19c8c2456e95cd98885bc6bed062fda4077bb07985e2f76cc9"
        },
        "0xe6d63a2aee0aaed2ab49702313ce54114f2145af219d7db30d6624af9e6dffc4": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "name": "_miner",
              "type": "address"
            },
            {
              "indexed": false,
              "name": "_nonce",
              "type": "string"
            },
            {
              "indexed": true,
              "name": "_apiId",
              "type": "uint256"
            },
            {
              "indexed": false,
              "name": "_value",
              "type": "uint256"
            },
            {
              "indexed": false,
              "name": "_currentChallenge",
              "type": "bytes32"
            }
          ],
          "name": "NonceSubmitted",
          "type": "event",
          "signature": "0xe6d63a2aee0aaed2ab49702313ce54114f2145af219d7db30d6624af9e6dffc4"
        },
        "0x1c59b53c2f787064c7f5aae431916a0600db3a76bb4029c09e24fe8313042674": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "name": "_apiId",
              "type": "uint256"
            },
            {
              "indexed": false,
              "name": "_sapi",
              "type": "string"
            },
            {
              "indexed": false,
              "name": "_apiOnQ",
              "type": "bytes32"
            },
            {
              "indexed": false,
              "name": "_apiOnQPayout",
              "type": "uint256"
            }
          ],
          "name": "NewAPIonQinfo",
          "type": "event",
          "signature": "0x1c59b53c2f787064c7f5aae431916a0600db3a76bb4029c09e24fe8313042674"
        },
        "0x9e959738f09af22daede9ff9563f8edf3f5cec8e17ce60287c911c95fa767f42": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "name": "_currentChallenge",
              "type": "bytes32"
            },
            {
              "indexed": true,
              "name": "_miningApiId",
              "type": "uint256"
            },
            {
              "indexed": false,
              "name": "_difficulty_level",
              "type": "uint256"
            },
            {
              "indexed": false,
              "name": "_multiplier",
              "type": "uint256"
            },
            {
              "indexed": false,
              "name": "_api",
              "type": "string"
            },
            {
              "indexed": false,
              "name": "_value",
              "type": "uint256"
            }
          ],
          "name": "NewChallenge",
          "type": "event",
          "signature": "0x9e959738f09af22daede9ff9563f8edf3f5cec8e17ce60287c911c95fa767f42"
        },
        "0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "name": "owner",
              "type": "address"
            },
            {
              "indexed": true,
              "name": "spender",
              "type": "address"
            },
            {
              "indexed": false,
              "name": "value",
              "type": "uint256"
            }
          ],
          "name": "Approval",
          "type": "event",
          "signature": "0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925"
        },
        "0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "name": "from",
              "type": "address"
            },
            {
              "indexed": true,
              "name": "to",
              "type": "address"
            },
            {
              "indexed": false,
              "name": "value",
              "type": "uint256"
            }
          ],
          "name": "Transfer",
          "type": "event",
          "signature": "0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef"
        },
        "0x46d8ab1385f70e5a3673e97c23c764f7600f7ed7a09b6687deae7131d51752e2": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "name": "_sender",
              "type": "address"
            }
          ],
          "name": "NewStake",
          "type": "event",
          "signature": "0x46d8ab1385f70e5a3673e97c23c764f7600f7ed7a09b6687deae7131d51752e2"
        },
        "0x4a7934670bd8304e7da22378be1368f7c4fef17c5aee81804beda8638fe428ec": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "name": "_sender",
              "type": "address"
            }
          ],
          "name": "StakeWithdrawn",
          "type": "event",
          "signature": "0x4a7934670bd8304e7da22378be1368f7c4fef17c5aee81804beda8638fe428ec"
        },
        "0x453865710d0cb4b14ad25de371c860da196368895daa9662e5087711d14daecf": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "name": "_sender",
              "type": "address"
            }
          ],
          "name": "StakeWithdrawRequested",
          "type": "event",
          "signature": "0x453865710d0cb4b14ad25de371c860da196368895daa9662e5087711d14daecf"
        },
        "0xd739c8b7fe870f381c5442416ff79d9f44c3e1d54a16ce39fc0fbe8206c4a6e8": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "name": "_DisputeID",
              "type": "uint256"
            },
            {
              "indexed": true,
              "name": "_apiId",
              "type": "uint256"
            },
            {
              "indexed": false,
              "name": "_timestamp",
              "type": "uint256"
            }
          ],
          "name": "NewDispute",
          "type": "event",
          "signature": "0xd739c8b7fe870f381c5442416ff79d9f44c3e1d54a16ce39fc0fbe8206c4a6e8"
        },
        "0x86abfce99b7dd908bec0169288797f85049ec73cbe046ed9de818fab3a497ae0": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "name": "_disputeID",
              "type": "uint256"
            },
            {
              "indexed": false,
              "name": "_position",
              "type": "bool"
            },
            {
              "indexed": true,
              "name": "_voter",
              "type": "address"
            }
          ],
          "name": "Voted",
          "type": "event",
          "signature": "0x86abfce99b7dd908bec0169288797f85049ec73cbe046ed9de818fab3a497ae0"
        },
        "0x21459c2f5447ebcf83a7f0a238c32c71076faef0d12295e771c0cb1e10434739": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "name": "_disputeID",
              "type": "uint256"
            },
            {
              "indexed": false,
              "name": "_result",
              "type": "int256"
            },
            {
              "indexed": true,
              "name": "_reportedMiner",
              "type": "address"
            },
            {
              "indexed": false,
              "name": "_reportingParty",
              "type": "address"
            },
            {
              "indexed": false,
              "name": "_active",
              "type": "bool"
            }
          ],
          "name": "DisputeVoteTallied",
          "type": "event",
          "signature": "0x21459c2f5447ebcf83a7f0a238c32c71076faef0d12295e771c0cb1e10434739"
        },
        "0xc2d1449eb0b6547aa426e09d9942a77fa4fc8cd3296305b3163e22452e0bcb8d": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "name": "_newTellor",
              "type": "address"
            }
          ],
          "name": "NewTellorAddress",
          "type": "event",
          "signature": "0xc2d1449eb0b6547aa426e09d9942a77fa4fc8cd3296305b3163e22452e0bcb8d"
        },
        "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "name": "previousOwner",
              "type": "address"
            },
            {
              "indexed": true,
              "name": "newOwner",
              "type": "address"
            }
          ],
          "name": "OwnershipTransferred",
          "type": "event",
          "signature": "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0"
        },
        "0xd32134405b68f6f7220f9c38ae310df1b648d16188006768d45be2f7c24e8820": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "name": "_sender",
              "type": "address"
            },
            {
              "indexed": true,
              "name": "_apiId",
              "type": "uint256"
            },
            {
              "indexed": false,
              "name": "_tip",
              "type": "uint256"
            },
            {
              "indexed": false,
              "name": "_payout",
              "type": "uint256"
            }
          ],
          "name": "TipAdded",
          "type": "event",
          "signature": "0xd32134405b68f6f7220f9c38ae310df1b648d16188006768d45be2f7c24e8820"
        }
      },
      "links": {
        "TellorGettersLibrary": "0x731A4E84fd77618A758883DDa92323EdD291b313"
      },
      "address": "0xd9Ad0E4E18F2430719E73b2f824C54CFA5D703b6",
      "transactionHash": "0x16316ccd71e9f182a3140900cfefc1eace4b30e06b69d450b2eb3529196bcfb4"
    },
    "1555270259713": {
      "events": {
        "0xc509d04e0782579ee59912139246ccbdf6c36c43abd90591d912017f3467dd16": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "name": "_apiId",
              "type": "uint256"
            },
            {
              "indexed": false,
              "name": "_time",
              "type": "uint256"
            },
            {
              "indexed": false,
              "name": "_value",
              "type": "uint256"
            },
            {
              "indexed": false,
              "name": "_payout",
              "type": "uint256"
            },
            {
              "indexed": false,
              "name": "_currentChallenge",
              "type": "bytes32"
            }
          ],
          "name": "NewValue",
          "type": "event",
          "signature": "0xc509d04e0782579ee59912139246ccbdf6c36c43abd90591d912017f3467dd16"
        },
        "0x6d7f869757848b19c8c2456e95cd98885bc6bed062fda4077bb07985e2f76cc9": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "name": "_sender",
              "type": "address"
            },
            {
              "indexed": false,
              "name": "_sapi",
              "type": "string"
            },
            {
              "indexed": false,
              "name": "_symbol",
              "type": "string"
            },
            {
              "indexed": false,
              "name": "_granularity",
              "type": "uint256"
            },
            {
              "indexed": true,
              "name": "_apiId",
              "type": "uint256"
            },
            {
              "indexed": false,
              "name": "_value",
              "type": "uint256"
            }
          ],
          "name": "DataRequested",
          "type": "event",
          "signature": "0x6d7f869757848b19c8c2456e95cd98885bc6bed062fda4077bb07985e2f76cc9"
        },
        "0xe6d63a2aee0aaed2ab49702313ce54114f2145af219d7db30d6624af9e6dffc4": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "name": "_miner",
              "type": "address"
            },
            {
              "indexed": false,
              "name": "_nonce",
              "type": "string"
            },
            {
              "indexed": true,
              "name": "_apiId",
              "type": "uint256"
            },
            {
              "indexed": false,
              "name": "_value",
              "type": "uint256"
            },
            {
              "indexed": false,
              "name": "_currentChallenge",
              "type": "bytes32"
            }
          ],
          "name": "NonceSubmitted",
          "type": "event",
          "signature": "0xe6d63a2aee0aaed2ab49702313ce54114f2145af219d7db30d6624af9e6dffc4"
        },
        "0x1c59b53c2f787064c7f5aae431916a0600db3a76bb4029c09e24fe8313042674": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "name": "_apiId",
              "type": "uint256"
            },
            {
              "indexed": false,
              "name": "_sapi",
              "type": "string"
            },
            {
              "indexed": false,
              "name": "_apiOnQ",
              "type": "bytes32"
            },
            {
              "indexed": false,
              "name": "_apiOnQPayout",
              "type": "uint256"
            }
          ],
          "name": "NewAPIonQinfo",
          "type": "event",
          "signature": "0x1c59b53c2f787064c7f5aae431916a0600db3a76bb4029c09e24fe8313042674"
        },
        "0x9e959738f09af22daede9ff9563f8edf3f5cec8e17ce60287c911c95fa767f42": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "name": "_currentChallenge",
              "type": "bytes32"
            },
            {
              "indexed": true,
              "name": "_miningApiId",
              "type": "uint256"
            },
            {
              "indexed": false,
              "name": "_difficulty_level",
              "type": "uint256"
            },
            {
              "indexed": false,
              "name": "_multiplier",
              "type": "uint256"
            },
            {
              "indexed": false,
              "name": "_api",
              "type": "string"
            },
            {
              "indexed": false,
              "name": "_value",
              "type": "uint256"
            }
          ],
          "name": "NewChallenge",
          "type": "event",
          "signature": "0x9e959738f09af22daede9ff9563f8edf3f5cec8e17ce60287c911c95fa767f42"
        },
        "0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "name": "owner",
              "type": "address"
            },
            {
              "indexed": true,
              "name": "spender",
              "type": "address"
            },
            {
              "indexed": false,
              "name": "value",
              "type": "uint256"
            }
          ],
          "name": "Approval",
          "type": "event",
          "signature": "0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925"
        },
        "0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "name": "from",
              "type": "address"
            },
            {
              "indexed": true,
              "name": "to",
              "type": "address"
            },
            {
              "indexed": false,
              "name": "value",
              "type": "uint256"
            }
          ],
          "name": "Transfer",
          "type": "event",
          "signature": "0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef"
        },
        "0x46d8ab1385f70e5a3673e97c23c764f7600f7ed7a09b6687deae7131d51752e2": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "name": "_sender",
              "type": "address"
            }
          ],
          "name": "NewStake",
          "type": "event",
          "signature": "0x46d8ab1385f70e5a3673e97c23c764f7600f7ed7a09b6687deae7131d51752e2"
        },
        "0x4a7934670bd8304e7da22378be1368f7c4fef17c5aee81804beda8638fe428ec": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "name": "_sender",
              "type": "address"
            }
          ],
          "name": "StakeWithdrawn",
          "type": "event",
          "signature": "0x4a7934670bd8304e7da22378be1368f7c4fef17c5aee81804beda8638fe428ec"
        },
        "0x453865710d0cb4b14ad25de371c860da196368895daa9662e5087711d14daecf": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "name": "_sender",
              "type": "address"
            }
          ],
          "name": "StakeWithdrawRequested",
          "type": "event",
          "signature": "0x453865710d0cb4b14ad25de371c860da196368895daa9662e5087711d14daecf"
        },
        "0xd739c8b7fe870f381c5442416ff79d9f44c3e1d54a16ce39fc0fbe8206c4a6e8": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "name": "_DisputeID",
              "type": "uint256"
            },
            {
              "indexed": true,
              "name": "_apiId",
              "type": "uint256"
            },
            {
              "indexed": false,
              "name": "_timestamp",
              "type": "uint256"
            }
          ],
          "name": "NewDispute",
          "type": "event",
          "signature": "0xd739c8b7fe870f381c5442416ff79d9f44c3e1d54a16ce39fc0fbe8206c4a6e8"
        },
        "0x86abfce99b7dd908bec0169288797f85049ec73cbe046ed9de818fab3a497ae0": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "name": "_disputeID",
              "type": "uint256"
            },
            {
              "indexed": false,
              "name": "_position",
              "type": "bool"
            },
            {
              "indexed": true,
              "name": "_voter",
              "type": "address"
            }
          ],
          "name": "Voted",
          "type": "event",
          "signature": "0x86abfce99b7dd908bec0169288797f85049ec73cbe046ed9de818fab3a497ae0"
        },
        "0x21459c2f5447ebcf83a7f0a238c32c71076faef0d12295e771c0cb1e10434739": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "name": "_disputeID",
              "type": "uint256"
            },
            {
              "indexed": false,
              "name": "_result",
              "type": "int256"
            },
            {
              "indexed": true,
              "name": "_reportedMiner",
              "type": "address"
            },
            {
              "indexed": false,
              "name": "_reportingParty",
              "type": "address"
            },
            {
              "indexed": false,
              "name": "_active",
              "type": "bool"
            }
          ],
          "name": "DisputeVoteTallied",
          "type": "event",
          "signature": "0x21459c2f5447ebcf83a7f0a238c32c71076faef0d12295e771c0cb1e10434739"
        },
        "0xc2d1449eb0b6547aa426e09d9942a77fa4fc8cd3296305b3163e22452e0bcb8d": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "name": "_newTellor",
              "type": "address"
            }
          ],
          "name": "NewTellorAddress",
          "type": "event",
          "signature": "0xc2d1449eb0b6547aa426e09d9942a77fa4fc8cd3296305b3163e22452e0bcb8d"
        },
        "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "name": "previousOwner",
              "type": "address"
            },
            {
              "indexed": true,
              "name": "newOwner",
              "type": "address"
            }
          ],
          "name": "OwnershipTransferred",
          "type": "event",
          "signature": "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0"
        },
        "0xd32134405b68f6f7220f9c38ae310df1b648d16188006768d45be2f7c24e8820": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "name": "_sender",
              "type": "address"
            },
            {
              "indexed": true,
              "name": "_apiId",
              "type": "uint256"
            },
            {
              "indexed": false,
              "name": "_tip",
              "type": "uint256"
            },
            {
              "indexed": false,
              "name": "_payout",
              "type": "uint256"
            }
          ],
          "name": "TipAdded",
          "type": "event",
          "signature": "0xd32134405b68f6f7220f9c38ae310df1b648d16188006768d45be2f7c24e8820"
        }
      },
      "links": {
        "TellorGettersLibrary": "0x731A4E84fd77618A758883DDa92323EdD291b313"
      },
      "address": "0xd9Ad0E4E18F2430719E73b2f824C54CFA5D703b6",
      "transactionHash": "0x96951b8c7f338c07ec0355c7cf0b497b19d6c4f1a7815822f617f12ee4e51c70"
    }
  },
  "schemaVersion": "3.0.6",
  "updatedAt": "2019-04-14T19:32:08.362Z",
  "devdoc": {
    "methods": {
      "allowance(address,address)": {
        "params": {
          "_spender": "address",
          "_user": "address"
        },
        "return": "Returns the remaining allowance of tokens granted to the _spender from the _user"
      },
      "balanceOf(address)": {
        "details": "Gets balance of owner specified",
        "params": {
          "_user": "is the owner address used to look up the balance"
        },
        "return": "Returns the balance associated with the passed in _user"
      },
      "balanceOfAt(address,uint256)": {
        "details": "Queries the balance of _user at a specific _blockNumber",
        "params": {
          "_blockNumber": "The block number when the balance is queried",
          "_user": "The address from which the balance will be retrieved"
        },
        "return": "The balance at _blockNumber"
      },
      "constructor": {
        "details": "The constructor sets the original `tellorStorageOwner` of the contract to the sender account."
      },
      "didMine(bytes32,address)": {
        "details": "This function tells you if a given challenge has been completed by a given miner",
        "params": {
          "_challenge": "the challenge to search for",
          "_miner": "address that you want to know if they solved the challenge"
        },
        "return": "true if the _miner address provided solved the "
      },
      "didVote(uint256,address)": {
        "details": "Checks if an address voted in a dispute",
        "params": {
          "_address": "to look up",
          "_disputeId": "to look up"
        },
        "return": "bool of whether or not party voted"
      },
      "getAllDisputeVars(uint256)": {
        "details": "Gets all dispute variables",
        "params": {
          "_disputeId": "to look up"
        },
        "return": "address of reported mineraddress of reporting partydisputed apiIddisputed minimum execution dateuint number of votesuint blockNumber of voteuint index in disputeId arrayint count of the current tallybool of whether vote has been tallied"
      },
      "getApiForTime(uint256)": {
        "details": "Getter function for apiId based on timestamp. Only one value is mined per timestamp and each timestamp can correspond to a different API. ",
        "params": {
          "_timestamp": "to check APIId"
        },
        "return": "apiId"
      },
      "getApiId(bytes32)": {
        "details": "Getter function for apiId based on api hash",
        "params": {
          "_api": "string to check if it already has an apiId"
        },
        "return": "uint apiId"
      },
      "getApiVars(uint256)": {
        "details": "Gets the API struct variables that are not mappings",
        "params": {
          "_apiId": "to look up"
        },
        "return": "string of api to querybytes32 hash of stringuint of index in PayoutPool arrayuint of current payout for this api"
      },
      "getDisputeHashToId(bytes32)": {
        "details": "Checks if a given hash of miner,apiId has been disputed",
        "params": {
          "_hash": "of sha256(abi.encodePacked(_miners[2],_apiId));"
        },
        "return": "uint disputeId"
      },
      "getLastQuery()": {
        "details": "Gets the a value for the latest timestamp available",
        "return": "value for timestamp of last proof of work submited"
      },
      "getMinedBlockNum(uint256,uint256)": {
        "details": "Gets blocknumber for mined timestamp ",
        "params": {
          "_apiId": "to look up",
          "_timestamp": "is the timestamp to look up blocknumber"
        },
        "return": "uint of the blocknumber which the dispute was mined"
      },
      "getMinersByValue(uint256,uint256)": {
        "details": "Gets the 5 miners who mined the value for the specified apiId/_timestamp ",
        "params": {
          "_apiId": "to look up",
          "_timestamp": "is the timestampt to look up miners for"
        }
      },
      "getSubmissionsByTimestamp(uint256,uint256)": {
        "details": "Gets the 5 miners who mined the value for the specified apiId/_timestamp ",
        "params": {
          "_apiId": "to look up",
          "_timestamp": "is the timestampt to look up miners for"
        }
      },
      "getVariables()": {
        "details": "Getter function for currentChallenge difficulty_level",
        "return": "current challenge, MiningApiID, level of difficulty_level"
      },
      "getVariablesOnQ()": {
        "details": "Getter function for api on queue",
        "return": "apionQ hash, id, payout, and api string"
      },
      "getpayoutPoolIndexToApiId(uint256)": {
        "details": "Getter function for the apiId for the specified payoutPool index",
        "params": {
          "_payoutPoolIndexToApiId": "to look up the apiId"
        },
        "return": "apiId"
      },
      "isInDispute(uint256,uint256)": {
        "details": "Gets the 5 miners who mined the value for the specified apiId/_timestamp ",
        "params": {
          "_apiId": "to look up",
          "_timestamp": "is the timestampt to look up miners for"
        }
      },
      "retrieveData(uint256,uint256)": {
        "details": "Retreive value from oracle based on timestamp",
        "params": {
          "_apiId": "being requested",
          "_timestamp": "to retreive data/value from"
        },
        "return": "value for timestamp submitted"
      },
      "totalSupply()": {
        "details": "Getter for the total_supply of oracle tokens",
        "return": "total supply"
      }
    }
  },
  "userdoc": {
    "methods": {
      "allowedToTrade(address,uint256)": {
        "notice": "dev This function returns whether or not a given user is allowed to trade a given amount   param address of user param address of amount"
      },
      "getStakerInfo(address)": {
        "notice": "dev This function allows users to retireve all information about a staker param address of staker enquiring about return uint current state of staker return uint startDate of staking"
      }
    }
  }
}