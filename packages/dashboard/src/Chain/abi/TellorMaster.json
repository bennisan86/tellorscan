{
  "contractName": "TellorMaster",
  "abi": [
    {
      "constant": true,
      "inputs": [
        {
          "name": "_timestamp",
          "type": "uint256"
        }
      ],
      "name": "getRequestIdByTimestamp",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function",
      "signature": "0x0f0b424d"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_requestId",
          "type": "uint256"
        },
        {
          "name": "_timestamp",
          "type": "uint256"
        }
      ],
      "name": "getSubmissionsByTimestamp",
      "outputs": [
        {
          "name": "",
          "type": "uint256[5]"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function",
      "signature": "0x11c98512"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_data",
          "type": "bytes32"
        }
      ],
      "name": "getAddressVars",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function",
      "signature": "0x133bee5e"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getSymbol",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function",
      "signature": "0x15070401"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getName",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function",
      "signature": "0x17d7de7c"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function",
      "signature": "0x18160ddd"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getVariablesOnDeck",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        },
        {
          "name": "",
          "type": "uint256"
        },
        {
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function",
      "signature": "0x19e8e03b"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_request",
          "type": "bytes32"
        }
      ],
      "name": "getRequestIdByQueryHash",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function",
      "signature": "0x1db842f0"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_requestId",
          "type": "uint256"
        }
      ],
      "name": "getLastNewValueById",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        },
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function",
      "signature": "0x3180f8df"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_requestId",
          "type": "uint256"
        },
        {
          "name": "_timestamp",
          "type": "uint256"
        }
      ],
      "name": "isInDispute",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function",
      "signature": "0x3df0777b"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_requestId",
          "type": "uint256"
        }
      ],
      "name": "getNewValueCountbyRequestId",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function",
      "signature": "0x46eee1c4"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_user",
          "type": "address"
        },
        {
          "name": "_blockNumber",
          "type": "uint256"
        }
      ],
      "name": "balanceOfAt",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function",
      "signature": "0x4ee2cd7e"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_data",
          "type": "bytes32"
        }
      ],
      "name": "getUintVar",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function",
      "signature": "0x612c8f7f"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_index",
          "type": "uint256"
        }
      ],
      "name": "getRequestIdByRequestQIndex",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function",
      "signature": "0x6173c0b8"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_challenge",
          "type": "bytes32"
        },
        {
          "name": "_miner",
          "type": "address"
        }
      ],
      "name": "didMine",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function",
      "signature": "0x63bb82ad"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_requestId",
          "type": "uint256"
        },
        {
          "name": "_timestamp",
          "type": "uint256"
        }
      ],
      "name": "getMinersByRequestIdAndTimestamp",
      "outputs": [
        {
          "name": "",
          "type": "address[5]"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function",
      "signature": "0x69026d63"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_user",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function",
      "signature": "0x70a08231"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_staker",
          "type": "address"
        }
      ],
      "name": "getStakerInfo",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        },
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function",
      "signature": "0x733bdef0"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_requestID",
          "type": "uint256"
        },
        {
          "name": "_index",
          "type": "uint256"
        }
      ],
      "name": "getTimestampbyRequestIDandIndex",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function",
      "signature": "0x77fbb663"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_disputeId",
          "type": "uint256"
        },
        {
          "name": "_data",
          "type": "bytes32"
        }
      ],
      "name": "getDisputeUintVars",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function",
      "signature": "0x7f6fd5d9"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_requestId",
          "type": "uint256"
        },
        {
          "name": "_timestamp",
          "type": "uint256"
        }
      ],
      "name": "retrieveData",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function",
      "signature": "0x93fa4915"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_user",
          "type": "address"
        },
        {
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "allowedToTrade",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function",
      "signature": "0x999cf26c"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getCurrentVariables",
      "outputs": [
        {
          "name": "",
          "type": "bytes32"
        },
        {
          "name": "",
          "type": "uint256"
        },
        {
          "name": "",
          "type": "uint256"
        },
        {
          "name": "",
          "type": "string"
        },
        {
          "name": "",
          "type": "uint256"
        },
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function",
      "signature": "0xa22e407a"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_disputeId",
          "type": "uint256"
        },
        {
          "name": "_address",
          "type": "address"
        }
      ],
      "name": "didVote",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function",
      "signature": "0xa7c438bc"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_disputeId",
          "type": "uint256"
        }
      ],
      "name": "getAllDisputeVars",
      "outputs": [
        {
          "name": "",
          "type": "bytes32"
        },
        {
          "name": "",
          "type": "bool"
        },
        {
          "name": "",
          "type": "bool"
        },
        {
          "name": "",
          "type": "bool"
        },
        {
          "name": "",
          "type": "address"
        },
        {
          "name": "",
          "type": "address"
        },
        {
          "name": "",
          "type": "address"
        },
        {
          "name": "",
          "type": "uint256[8]"
        },
        {
          "name": "",
          "type": "int256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function",
      "signature": "0xaf0b1327"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getRequestQ",
      "outputs": [
        {
          "name": "",
          "type": "uint256[51]"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function",
      "signature": "0xb5413029"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_requestId",
          "type": "uint256"
        },
        {
          "name": "_timestamp",
          "type": "uint256"
        }
      ],
      "name": "getMinedBlockNum",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function",
      "signature": "0xc775b542"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_hash",
          "type": "bytes32"
        }
      ],
      "name": "getDisputeIdByDisputeHash",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function",
      "signature": "0xda379941"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_user",
          "type": "address"
        },
        {
          "name": "_spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function",
      "signature": "0xdd62ed3e"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_requestId",
          "type": "uint256"
        },
        {
          "name": "_data",
          "type": "bytes32"
        }
      ],
      "name": "getRequestUintVars",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function",
      "signature": "0xe0ae93c1"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_requestId",
          "type": "uint256"
        }
      ],
      "name": "getRequestVars",
      "outputs": [
        {
          "name": "",
          "type": "string"
        },
        {
          "name": "",
          "type": "string"
        },
        {
          "name": "",
          "type": "bytes32"
        },
        {
          "name": "",
          "type": "uint256"
        },
        {
          "name": "",
          "type": "uint256"
        },
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function",
      "signature": "0xe1eee6d6"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getLastNewValue",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        },
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function",
      "signature": "0xfc7cf0a0"
    },
    {
      "inputs": [
        {
          "name": "_tellorContract",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor",
      "signature": "constructor"
    },
    {
      "payable": true,
      "stateMutability": "payable",
      "type": "fallback"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_tellorContract",
          "type": "address"
        }
      ],
      "name": "changeTellorContract",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function",
      "signature": "0xae0a8279"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_newDeity",
          "type": "address"
        }
      ],
      "name": "changeDeity",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function",
      "signature": "0x47abd7f1"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.5.0+commit.1d4f565a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":true,\"inputs\":[{\"name\":\"_timestamp\",\"type\":\"uint256\"}],\"name\":\"getRequestIdByTimestamp\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_requestId\",\"type\":\"uint256\"},{\"name\":\"_timestamp\",\"type\":\"uint256\"}],\"name\":\"getSubmissionsByTimestamp\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256[5]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_data\",\"type\":\"bytes32\"}],\"name\":\"getAddressVars\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getSymbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getName\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getVariablesOnDeck\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"},{\"name\":\"\",\"type\":\"uint256\"},{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_request\",\"type\":\"bytes32\"}],\"name\":\"getRequestIdByQueryHash\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_requestId\",\"type\":\"uint256\"}],\"name\":\"getLastNewValueById\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"},{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_requestId\",\"type\":\"uint256\"},{\"name\":\"_timestamp\",\"type\":\"uint256\"}],\"name\":\"isInDispute\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_requestId\",\"type\":\"uint256\"}],\"name\":\"getNewValueCountbyRequestId\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_newDeity\",\"type\":\"address\"}],\"name\":\"changeDeity\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_user\",\"type\":\"address\"},{\"name\":\"_blockNumber\",\"type\":\"uint256\"}],\"name\":\"balanceOfAt\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_data\",\"type\":\"bytes32\"}],\"name\":\"getUintVar\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_index\",\"type\":\"uint256\"}],\"name\":\"getRequestIdByRequestQIndex\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_challenge\",\"type\":\"bytes32\"},{\"name\":\"_miner\",\"type\":\"address\"}],\"name\":\"didMine\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_requestId\",\"type\":\"uint256\"},{\"name\":\"_timestamp\",\"type\":\"uint256\"}],\"name\":\"getMinersByRequestIdAndTimestamp\",\"outputs\":[{\"name\":\"\",\"type\":\"address[5]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_staker\",\"type\":\"address\"}],\"name\":\"getStakerInfo\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"},{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_requestID\",\"type\":\"uint256\"},{\"name\":\"_index\",\"type\":\"uint256\"}],\"name\":\"getTimestampbyRequestIDandIndex\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_disputeId\",\"type\":\"uint256\"},{\"name\":\"_data\",\"type\":\"bytes32\"}],\"name\":\"getDisputeUintVars\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_requestId\",\"type\":\"uint256\"},{\"name\":\"_timestamp\",\"type\":\"uint256\"}],\"name\":\"retrieveData\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_user\",\"type\":\"address\"},{\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"allowedToTrade\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getCurrentVariables\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes32\"},{\"name\":\"\",\"type\":\"uint256\"},{\"name\":\"\",\"type\":\"uint256\"},{\"name\":\"\",\"type\":\"string\"},{\"name\":\"\",\"type\":\"uint256\"},{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_disputeId\",\"type\":\"uint256\"},{\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"didVote\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_tellorContract\",\"type\":\"address\"}],\"name\":\"changeTellorContract\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_disputeId\",\"type\":\"uint256\"}],\"name\":\"getAllDisputeVars\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes32\"},{\"name\":\"\",\"type\":\"bool\"},{\"name\":\"\",\"type\":\"bool\"},{\"name\":\"\",\"type\":\"bool\"},{\"name\":\"\",\"type\":\"address\"},{\"name\":\"\",\"type\":\"address\"},{\"name\":\"\",\"type\":\"address\"},{\"name\":\"\",\"type\":\"uint256[8]\"},{\"name\":\"\",\"type\":\"int256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getRequestQ\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256[51]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_requestId\",\"type\":\"uint256\"},{\"name\":\"_timestamp\",\"type\":\"uint256\"}],\"name\":\"getMinedBlockNum\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_hash\",\"type\":\"bytes32\"}],\"name\":\"getDisputeIdByDisputeHash\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_user\",\"type\":\"address\"},{\"name\":\"_spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_requestId\",\"type\":\"uint256\"},{\"name\":\"_data\",\"type\":\"bytes32\"}],\"name\":\"getRequestUintVars\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_requestId\",\"type\":\"uint256\"}],\"name\":\"getRequestVars\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"},{\"name\":\"\",\"type\":\"string\"},{\"name\":\"\",\"type\":\"bytes32\"},{\"name\":\"\",\"type\":\"uint256\"},{\"name\":\"\",\"type\":\"uint256\"},{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getLastNewValue\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"},{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"_tellorContract\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"}],\"devdoc\":{\"methods\":{\"allowance(address,address)\":{\"params\":{\"_spender\":\"address\",\"_user\":\"address\"},\"return\":\"Returns the remaining allowance of tokens granted to the _spender from the _user\"},\"allowedToTrade(address,uint256)\":{\"details\":\"This function returns whether or not a given user is allowed to trade a given amount  \",\"params\":{\"_amount\":\"uint of amount\",\"_user\":\"address\"},\"return\":\"true if the user is alloed to trade the amount specified\"},\"balanceOf(address)\":{\"details\":\"Gets balance of owner specified\",\"params\":{\"_user\":\"is the owner address used to look up the balance\"},\"return\":\"Returns the balance associated with the passed in _user\"},\"balanceOfAt(address,uint256)\":{\"details\":\"Queries the balance of _user at a specific _blockNumber\",\"params\":{\"_blockNumber\":\"The block number when the balance is queried\",\"_user\":\"The address from which the balance will be retrieved\"},\"return\":\"The balance at _blockNumber\"},\"constructor\":{\"details\":\"The constructor sets the original `tellorStorageOwner` of the contract to the sender account.\"},\"didMine(bytes32,address)\":{\"details\":\"This function tells you if a given challenge has been completed by a given miner\",\"params\":{\"_challenge\":\"the challenge to search for\",\"_miner\":\"address that you want to know if they solved the challenge\"},\"return\":\"true if the _miner address provided solved the \"},\"didVote(uint256,address)\":{\"details\":\"Checks if an address voted in a dispute\",\"params\":{\"_address\":\"to look up\",\"_disputeId\":\"to look up\"},\"return\":\"bool of whether or not party voted\"},\"getAddressVars(bytes32)\":{\"details\":\"allows Tellor to read data from the addressVars mapping\",\"params\":{\"_data\":\"is the keccak256(\\\"variable_name\\\") of the variable that is being accessed.  These are examples of how the variables are saved within other functions: addressVars[keccak256(\\\"_owner\\\")] addressVars[keccak256(\\\"tellorContract\\\")]*\"}},\"getAllDisputeVars(uint256)\":{\"details\":\"Gets all dispute variables\",\"params\":{\"_disputeId\":\"to look up\"},\"return\":\"address of reported mineraddress of reporting partydisputed apiIddisputed minimum execution dateuint number of votesuint blockNumber of voteuint index in disputeId arrayint count of the current tallybool of whether vote has been tallied\"},\"getCurrentVariables()\":{\"details\":\"Getter function for variables for the requestId being currently mined(currentRequestId)\",\"return\":\"current challenge, curretnRequestId, level of difficulty, api/query string, and granularity(number of decimals requested), , total tip for the request \"},\"getDisputeIdByDisputeHash(bytes32)\":{\"details\":\"Checks if a given hash of miner,requestId has been disputed\",\"params\":{\"_hash\":\"is the sha256(abi.encodePacked(_miners[2],_requestId));\"},\"return\":\"uint disputeId\"},\"getDisputeUintVars(uint256,bytes32)\":{\"details\":\"Checks for uint variables in the disputeUintVars mapping based on the disuputeId\",\"params\":{\"_data\":\"the variable to pull from the mapping. _data = keccak256(\\\"variable_name\\\") where variable_name is  the variables/strings used to save the data in the mapping. The variables names are   commented out under the disputeUintVars under the Dispute struct\",\"_disputeId\":\"is the dispute id;\"},\"return\":\"uint value for the bytes32 data submitted\"},\"getLastNewValue()\":{\"details\":\"Gets the a value for the latest timestamp available\",\"return\":\"value for timestamp of last proof of work submited\"},\"getMinedBlockNum(uint256,uint256)\":{\"details\":\"Gets blocknumber for mined timestamp \",\"params\":{\"_requestId\":\"to look up\",\"_timestamp\":\"is the timestamp to look up blocknumber\"},\"return\":\"uint of the blocknumber which the dispute was mined\"},\"getMinersByRequestIdAndTimestamp(uint256,uint256)\":{\"details\":\"Gets the 5 miners who mined the value for the specified requestId/_timestamp \",\"params\":{\"_requestId\":\"to look up\",\"_timestamp\":\"is the timestamp to look up miners for\"},\"return\":\"the 5 miners' addresses\"},\"getName()\":{\"details\":\"Get the name of the token return string of the token name\"},\"getNewValueCountbyRequestId(uint256)\":{\"details\":\"Counts the number of values that have been submited for the request  if called for the currentRequest being mined it can tell you how many miners have submitted a value for that request so far\",\"params\":{\"_requestId\":\"the requestId to look up\"},\"return\":\"uint count of the number of values received for the requestId\"},\"getRequestIdByQueryHash(bytes32)\":{\"details\":\"Getter function for requestId based on the queryHash\",\"params\":{\"_request\":\"is the hash(of string api and granularity) to check if a request already exists\"},\"return\":\"uint requestId\"},\"getRequestIdByRequestQIndex(uint256)\":{\"details\":\"Getter function for the specified requestQ index\",\"params\":{\"_index\":\"to look up in the requestQ array\"},\"return\":\"uint of reqeuestId\"},\"getRequestIdByTimestamp(uint256)\":{\"details\":\"Getter function for requestId based on timestamp \",\"params\":{\"_timestamp\":\"to check requestId\"},\"return\":\"uint of reqeuestId\"},\"getRequestQ()\":{\"details\":\"Getter function for the requestQ array\",\"return\":\"the requestQ arrray\"},\"getRequestUintVars(uint256,bytes32)\":{\"details\":\"Allowes access to the uint variables saved in the apiUintVars under the requestDetails struct for the requestId specified\",\"params\":{\"_data\":\"the variable to pull from the mapping. _data = keccak256(\\\"variable_name\\\") where variable_name is  the variables/strings used to save the data in the mapping. The variables names are   commented out under the apiUintVars under the requestDetails struct\",\"_requestId\":\"to look up\"}},\"getRequestVars(uint256)\":{\"details\":\"Gets the API struct variables that are not mappings\",\"params\":{\"_requestId\":\"to look up\"},\"return\":\"string of api to querystring of symbol of api to querybytes32 hash of stringbytes32 of the granularity(decimal places) requesteduint of index in requestQ arrayuint of current payout/tip for this requestId\"},\"getStakerInfo(address)\":{\"details\":\"This function allows users to retireve all information about a staker\",\"params\":{\"_staker\":\"address of staker inquiring about\"},\"return\":\"uint current state of stakeruint startDate of staking\"},\"getSubmissionsByTimestamp(uint256,uint256)\":{\"details\":\"Gets the 5 miners who mined the value for the specified requestId/_timestamp \",\"params\":{\"_requestId\":\"to look up\",\"_timestamp\":\"is the timestampt to look up miners for\"},\"return\":\"address[5] array of 5 addresses ofminers that mined the requestId\"},\"getSymbol()\":{\"details\":\"Get the symbol of the token return string of the token symbol\"},\"getTimestampbyRequestIDandIndex(uint256,uint256)\":{\"details\":\"Gets the timestamp for the value based on their index\",\"params\":{\"_index\":\"is the value index to look up\",\"_requestID\":\"is the requestId to look up\"},\"return\":\"uint timestamp\"},\"getUintVar(bytes32)\":{\"details\":\"Getter for the variables saved under the TellorStorageStruct uintVars variable\",\"params\":{\"_data\":\"the variable to pull from the mapping. _data = keccak256(\\\"variable_name\\\") where variable_name is  the variables/strings used to save the data in the mapping. The variables names are   commented out under the uintVars under the TellorStorageStruct struct This is an example of how data is saved into the mapping within other functions:  self.uintVars[keccak256(\\\"stakerCount\\\")]\"},\"return\":\"uint of specified variable  \"},\"getVariablesOnDeck()\":{\"details\":\"Getter function for next requestId on queue\",\"return\":\"onDeckRequestId, onDeckTotaltips, , and API query string\"},\"isInDispute(uint256,uint256)\":{\"details\":\"Gets the 5 miners who mined the value for the specified requestId/_timestamp \",\"params\":{\"_requestId\":\"to look up\",\"_timestamp\":\"is the timestamp to look up miners for\"},\"return\":\"bool true if requestId/timestamp is under dispute\"},\"retrieveData(uint256,uint256)\":{\"details\":\"Retreive value from oracle based on timestamp\",\"params\":{\"_requestId\":\"being requested\",\"_timestamp\":\"to retreive data/value from\"},\"return\":\"value for timestamp submitted\"},\"totalSupply()\":{\"details\":\"Getter for the total_supply of oracle tokens\",\"return\":\"uint total supply\"}}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"/Users/mdcoon/git/TellorCore/contracts/TellorMaster.sol\":\"TellorMaster\"},\"evmVersion\":\"byzantium\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/Users/mdcoon/git/TellorCore/contracts/TellorGetters.sol\":{\"keccak256\":\"0x933fa2bdc29456c4d8ba2a332bb443e1fb8ac0501da162016b3733034cc1bebe\",\"urls\":[\"bzzr://c7cea35542078837e1adf75331684c59f9ef058e2344ceee2d803df552eabd1f\"]},\"/Users/mdcoon/git/TellorCore/contracts/TellorMaster.sol\":{\"keccak256\":\"0xf8c192f458381422174197709a540ca1a8952a12fc53093a0da8a6c1125f7b4e\",\"urls\":[\"bzzr://800fa2b8a19b1cc949e0c1d01adccaeece6de0bfbd7020e1a73a3b57022529c9\"]},\"/Users/mdcoon/git/TellorCore/contracts/libraries/SafeMath.sol\":{\"keccak256\":\"0x4e87f5b129186fc0c9c1e16596f5a81e7be721c0d42dedf74ea0ce1026ae1a4f\",\"urls\":[\"bzzr://eed17196aa2934637e5a9e435a927b984effb447c1da28d21280b8f2b7d8c5eb\"]},\"/Users/mdcoon/git/TellorCore/contracts/libraries/TellorGettersLibrary.sol\":{\"keccak256\":\"0x7eb04d41a993558958ab1f5576ab220afc5b98dc43f9961e6835f6e930290195\",\"urls\":[\"bzzr://a76162285f24a7a0e8f69e35715ee774ba6c7903ce7e8ead5bd1f1f9ccc161e1\"]},\"/Users/mdcoon/git/TellorCore/contracts/libraries/TellorLibrary.sol\":{\"keccak256\":\"0x3f5a3b6669766c6644eaf05fd7ea5cd10b92d43689f040292f6d28fec8a842ee\",\"urls\":[\"bzzr://bf4bc4fcfc88ce7e9270d5d274b42c5a1e2f47e9656e0190bac4441403f6dc9d\"]},\"/Users/mdcoon/git/TellorCore/contracts/libraries/Utilities.sol\":{\"keccak256\":\"0xfde2134936e4e2f0a1090efabf773bf311ed03a62d9a5bada406bd756a82686a\",\"urls\":[\"bzzr://4de3e5dda475359778df2982d3095c02b70e8437078fe8c45399bcacc8749cad\"]}},\"version\":1}",
  "bytecode": "0x60806040523480156200001157600080fd5b5060405160208062003606833981018060405260208110156200003357600080fd5b8101908080519060200190929190505050620000688160006200006f6401000000000262003157179091906401000000009004565b5062000271565b3382604201600060405180807f5f6f776e6572000000000000000000000000000000000000000000000000000081525060060190506040518091039020815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055503382604201600060405180807f5f6465697479000000000000000000000000000000000000000000000000000081525060060190506040518091039020815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508082604201600060405180807f74656c6c6f72436f6e7472616374000000000000000000000000000000000000815250600e0190506040518091039020815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507fc2d1449eb0b6547aa426e09d9942a77fa4fc8cd3296305b3163e22452e0bcb8d81604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390a15050565b61338580620002816000396000f3fe6080604052600436106101ac576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff1680630f0b424d1461028d57806311c98512146102dc578063133bee5e1461035d57806315070401146103d857806317d7de7c1461046857806318160ddd146104f857806319e8e03b146105235780631db842f0146105c15780633180f8df146106105780633df0777b1461066a57806346eee1c4146106c757806347abd7f1146107165780634ee2cd7e14610767578063612c8f7f146107d65780636173c0b81461082557806363bb82ad1461087457806369026d63146108e757806370a0823114610968578063733bdef0146109cd57806377fbb66314610a395780637f6fd5d914610a9257806393fa491514610aeb578063999cf26c14610b44578063a22e407a14610bb7578063a7c438bc14610c6a578063ae0a827914610cdd578063af0b132714610d2e578063b541302914610e6d578063c775b54214610ec0578063da37994114610f19578063dd62ed3e14610f68578063e0ae93c114610fed578063e1eee6d614611046578063fc7cf0a014611182575b600080604201600060405180807f74656c6c6f72436f6e7472616374000000000000000000000000000000000000815250600e0190506040518091039020815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905060606000368080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f82011690508083019250505050505050905060008082516020840185600019f43d604051816000823e8260008114610289578282f35b8282fd5b34801561029957600080fd5b506102c6600480360360208110156102b057600080fd5b81019080803590602001909291905050506111b8565b6040518082815260200191505060405180910390f35b3480156102e857600080fd5b5061031f600480360360408110156102ff57600080fd5b8101908080359060200190929190803590602001909291905050506111d5565b6040518082600560200280838360005b8381101561034a57808201518184015260208101905061032f565b5050505090500191505060405180910390f35b34801561036957600080fd5b506103966004803603602081101561038057600080fd5b81019080803590602001909291905050506111fb565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156103e457600080fd5b506103ed611218565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561042d578082015181840152602081019050610412565b50505050905090810190601f16801561045a5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561047457600080fd5b5061047d611229565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156104bd5780820151818401526020810190506104a2565b50505050905090810190601f1680156104ea5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561050457600080fd5b5061050d61123a565b6040518082815260200191505060405180910390f35b34801561052f57600080fd5b5061053861124b565b6040518084815260200183815260200180602001828103825283818151815260200191508051906020019080838360005b83811015610584578082015181840152602081019050610569565b50505050905090810190601f1680156105b15780820380516001836020036101000a031916815260200191505b5094505050505060405180910390f35b3480156105cd57600080fd5b506105fa600480360360208110156105e457600080fd5b8101908080359060200190929190505050611265565b6040518082815260200191505060405180910390f35b34801561061c57600080fd5b506106496004803603602081101561063357600080fd5b8101908080359060200190929190505050611282565b60405180838152602001821515151581526020019250505060405180910390f35b34801561067657600080fd5b506106ad6004803603604081101561068d57600080fd5b8101908080359060200190929190803590602001909291905050506112a2565b604051808215151515815260200191505060405180910390f35b3480156106d357600080fd5b50610700600480360360208110156106ea57600080fd5b81019080803590602001909291905050506112c2565b6040518082815260200191505060405180910390f35b34801561072257600080fd5b506107656004803603602081101561073957600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506112df565b005b34801561077357600080fd5b506107c06004803603604081101561078a57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506112f6565b6040518082815260200191505060405180910390f35b3480156107e257600080fd5b5061080f600480360360208110156107f957600080fd5b8101908080359060200190929190505050611316565b6040518082815260200191505060405180910390f35b34801561083157600080fd5b5061085e6004803603602081101561084857600080fd5b8101908080359060200190929190505050611333565b6040518082815260200191505060405180910390f35b34801561088057600080fd5b506108cd6004803603604081101561089757600080fd5b8101908080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611350565b604051808215151515815260200191505060405180910390f35b3480156108f357600080fd5b5061092a6004803603604081101561090a57600080fd5b810190808035906020019092919080359060200190929190505050611370565b6040518082600560200280838360005b8381101561095557808201518184015260208101905061093a565b5050505090500191505060405180910390f35b34801561097457600080fd5b506109b76004803603602081101561098b57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611396565b6040518082815260200191505060405180910390f35b3480156109d957600080fd5b50610a1c600480360360208110156109f057600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506113b3565b604051808381526020018281526020019250505060405180910390f35b348015610a4557600080fd5b50610a7c60048036036040811015610a5c57600080fd5b8101908080359060200190929190803590602001909291905050506113d3565b6040518082815260200191505060405180910390f35b348015610a9e57600080fd5b50610ad560048036036040811015610ab557600080fd5b8101908080359060200190929190803590602001909291905050506113f3565b6040518082815260200191505060405180910390f35b348015610af757600080fd5b50610b2e60048036036040811015610b0e57600080fd5b810190808035906020019092919080359060200190929190505050611413565b6040518082815260200191505060405180910390f35b348015610b5057600080fd5b50610b9d60048036036040811015610b6757600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050611433565b604051808215151515815260200191505060405180910390f35b348015610bc357600080fd5b50610bcc611453565b6040518087815260200186815260200185815260200180602001848152602001838152602001828103825285818151815260200191508051906020019080838360005b83811015610c2a578082015181840152602081019050610c0f565b50505050905090810190601f168015610c575780820380516001836020036101000a031916815260200191505b5097505050505050505060405180910390f35b348015610c7657600080fd5b50610cc360048036036040811015610c8d57600080fd5b8101908080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061147b565b604051808215151515815260200191505060405180910390f35b348015610ce957600080fd5b50610d2c60048036036020811015610d0057600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061149b565b005b348015610d3a57600080fd5b50610d6760048036036020811015610d5157600080fd5b81019080803590602001909291905050506114b2565b604051808a81526020018915151515815260200188151515158152602001871515151581526020018673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200183600860200280838360005b83811015610e4c578082015181840152602081019050610e31565b50505050905001828152602001995050505050505050505060405180910390f35b348015610e7957600080fd5b50610e826114fa565b6040518082603360200280838360005b83811015610ead578082015181840152602081019050610e92565b5050505090500191505060405180910390f35b348015610ecc57600080fd5b50610f0360048036036040811015610ee357600080fd5b810190808035906020019092919080359060200190929190505050611511565b6040518082815260200191505060405180910390f35b348015610f2557600080fd5b50610f5260048036036020811015610f3c57600080fd5b8101908080359060200190929190505050611531565b6040518082815260200191505060405180910390f35b348015610f7457600080fd5b50610fd760048036036040811015610f8b57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061154e565b6040518082815260200191505060405180910390f35b348015610ff957600080fd5b506110306004803603604081101561101057600080fd5b810190808035906020019092919080359060200190929190505050611668565b6040518082815260200191505060405180910390f35b34801561105257600080fd5b5061107f6004803603602081101561106957600080fd5b8101908080359060200190929190505050611688565b604051808060200180602001878152602001868152602001858152602001848152602001838103835289818151815260200191508051906020019080838360005b838110156110db5780820151818401526020810190506110c0565b50505050905090810190601f1680156111085780820380516001836020036101000a031916815260200191505b50838103825288818151815260200191508051906020019080838360005b83811015611141578082015181840152602081019050611126565b50505050905090810190601f16801561116e5780820380516001836020036101000a031916815260200191505b509850505050505050505060405180910390f35b34801561118e57600080fd5b506111976116ba565b60405180838152602001821515151581526020019250505060405180910390f35b60006111ce8260006116cf90919063ffffffff16565b9050919050565b6111dd6130c9565b6111f3838360006116ef9092919063ffffffff16565b905092915050565b600061121182600061176590919063ffffffff16565b9050919050565b606061122460006117a5565b905090565b6060611235600061184b565b905090565b600061124660006118f1565b905090565b600080606061125a6000611945565b925092509250909192565b600061127b826000611aeb90919063ffffffff16565b9050919050565b600080611299836000611b0b90919063ffffffff16565b91509150915091565b60006112ba83836000611b869092919063ffffffff16565b905092915050565b60006112d8826000611bc890919063ffffffff16565b9050919050565b6112f3816000611bee90919063ffffffff16565b50565b600061130e83836000611d1f9092919063ffffffff16565b905092915050565b600061132c82600061206290919063ffffffff16565b9050919050565b600061134982600061208290919063ffffffff16565b9050919050565b6000611368838360006120a29092919063ffffffff16565b905092915050565b6113786130ec565b61138e8383600061210d9092919063ffffffff16565b905092915050565b60006113ac8260006121b990919063ffffffff16565b9050919050565b6000806113ca8360006121ce90919063ffffffff16565b91509150915091565b60006113eb838360006122669092919063ffffffff16565b905092915050565b600061140b838360006122a19092919063ffffffff16565b905092915050565b600061142b838360006122d69092919063ffffffff16565b905092915050565b600061144b8383600061230b9092919063ffffffff16565b905092915050565b600080600060606000806114676000612423565b955095509550955095509550909192939495565b60006114938383600061272d9092919063ffffffff16565b905092915050565b6114af81600061279b90919063ffffffff16565b50565b60008060008060008060006114c561310f565b60006114db8a600061292f90919063ffffffff16565b9850985098509850985098509850985098509193959799909294969850565b611502613133565b61150c6000612cb6565b905090565b600061152983836000612d059092919063ffffffff16565b905092915050565b6000611547826000612d3a90919063ffffffff16565b9050919050565b60008073__TellorGettersLibrary__________________63912c0e65909185856040518463ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808481526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001935050505060206040518083038186803b15801561162557600080fd5b505af4158015611639573d6000803e3d6000fd5b505050506040513d602081101561164f57600080fd5b8101908080519060200190929190505050905092915050565b600061168083836000612d5a9092919063ffffffff16565b905092915050565b6060806000806000806116a5876000612d8f90919063ffffffff16565b95509550955095509550955091939550919395565b6000806116c76000612fee565b915091509091565b600082604501600083815260200190815260200160002054905092915050565b6116f76130c9565b83604b0160008481526020019081526020016000206009016000838152602001908152602001600020600580602002604051908101604052809291908260058015611757576020028201915b815481526020019060010190808311611743575b505050505090509392505050565b600082604201600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905092915050565b6060816003018054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561183f5780601f106118145761010080835404028352916020019161183f565b820191906000526020600020905b81548152906001019060200180831161182257829003601f168201915b50505050509050919050565b6060816002018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156118e55780601f106118ba576101008083540402835291602001916118e5565b820191906000526020600020905b8154815290600101906020018083116118c857829003601f168201915b50505050509050919050565b600081604301600060405180807f746f74616c5f737570706c790000000000000000000000000000000000000000815250600c01905060405180910390208152602001908152602001600020549050919050565b600080606083604301600060405180807f6f6e4465636b5265717565737449640000000000000000000000000000000000815250600f019050604051809103902081526020019081526020016000205484604301600060405180807f6f6e4465636b546f74616c546970730000000000000000000000000000000000815250600f019050604051809103902081526020019081526020016000205485604b01600087604301600060405180807f6f6e4465636b5265717565737449640000000000000000000000000000000000815250600f01905060405180910390208152602001908152602001600020548152602001908152602001600020600001808054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015611ad75780601f10611aac57610100808354040283529160200191611ad7565b820191906000526020600020905b815481529060010190602001808311611aba57829003601f168201915b505050505090509250925092509193909250565b600082604c01600083815260200190815260200160002054905092915050565b600080600084604b0160008581526020019081526020016000209050600081600301805490501115611b7357611b678585836003016001856003018054905003815481101515611b5757fe5b90600052602060002001546122d6565b60019250925050611b7f565b60008081915092509250505b9250929050565b600083604b016000848152602001908152602001600020600701600083815260200190815260200160002060009054906101000a900460ff1690509392505050565b600082604b01600083815260200190815260200160002060030180549050905092915050565b3373ffffffffffffffffffffffffffffffffffffffff1682604201600060405180807f5f6465697479000000000000000000000000000000000000000000000000000081525060060190506040518091039020815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16141515611c9257600080fd5b8082604201600060405180807f5f6465697479000000000000000000000000000000000000000000000000000081525060060190506040518091039020815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050565b6000808460480160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805490501480611dfc5750818460480160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000815481101515611dbe57fe5b9060005260206000200160000160009054906101000a90046fffffffffffffffffffffffffffffffff166fffffffffffffffffffffffffffffffff16115b15611e0a576000905061205b565b60008460480160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000209050600081805490501415611e6657600091505061205b565b806001828054905003815481101515611e7b57fe5b9060005260206000200160000160009054906101000a90046fffffffffffffffffffffffffffffffff166fffffffffffffffffffffffffffffffff1683101515611f1857806001828054905003815481101515611ed457fe5b9060005260206000200160000160109054906101000a90046fffffffffffffffffffffffffffffffff166fffffffffffffffffffffffffffffffff1691505061205b565b806000815481101515611f2757fe5b9060005260206000200160000160009054906101000a90046fffffffffffffffffffffffffffffffff166fffffffffffffffffffffffffffffffff16831015611f7457600091505061205b565b60008090506000600183805490500390505b8181111561200b5760006002600184840101811515611fa157fe5b049050858482815481101515611fb357fe5b9060005260206000200160000160009054906101000a90046fffffffffffffffffffffffffffffffff166fffffffffffffffffffffffffffffffff16111515611ffe57809250612005565b6001810391505b50611f86565b828281548110151561201957fe5b9060005260206000200160000160109054906101000a90046fffffffffffffffffffffffffffffffff166fffffffffffffffffffffffffffffffff1693505050505b9392505050565b600082604301600083815260200190815260200160002054905092915050565b600082604601600083815260200190815260200160002054905092915050565b600083604401600084815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1690509392505050565b6121156130ec565b83604b01600084815260200190815260200160002060080160008381526020019081526020016000206005806020026040519081016040528092919082600580156121ab576020028201915b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311612161575b505050505090509392505050565b60006121c6838343611d1f565b905092915050565b60008083604a0160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000015484604a0160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010154915091509250929050565b600083604b0160008481526020019081526020016000206003018281548110151561228d57fe5b906000526020600020015490509392505050565b600083604701600084815260200190815260200160002060050160008381526020019081526020016000205490509392505050565b600083604b01600084815260200190815260200160002060060160008381526020019081526020016000205490509392505050565b60008084604a0160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000015411156123e85760006123d3836123c587604301600060405180807f7374616b65416d6f756e74000000000000000000000000000000000000000000815250600b01905060405180910390208152602001908152602001600020546123b789896121b9565b6130b090919063ffffffff16565b6130b090919063ffffffff16565b1015156123e3576001905061241c565b612417565b6000612406836123f887876121b9565b6130b090919063ffffffff16565b101515612416576001905061241c565b5b600090505b9392505050565b60008060006060600080866000015487604301600060405180807f63757272656e74526571756573744964000000000000000000000000000000008152506010019050604051809103902081526020019081526020016000205488604301600060405180807f646966666963756c747900000000000000000000000000000000000000000000815250600a019050604051809103902081526020019081526020016000205489604b0160008b604301600060405180807f63757272656e74526571756573744964000000000000000000000000000000008152506010019050604051809103902081526020019081526020016000205481526020019081526020016000206000018a604b0160008c604301600060405180807f63757272656e7452657175657374496400000000000000000000000000000000815250601001905060405180910390208152602001908152602001600020548152602001908152602001600020600401600060405180807f6772616e756c6172697479000000000000000000000000000000000000000000815250600b01905060405180910390208152602001908152602001600020548b604b0160008d604301600060405180807f63757272656e7452657175657374496400000000000000000000000000000000815250601001905060405180910390208152602001908152602001600020548152602001908152602001600020600401600060405180807f746f74616c54697000000000000000000000000000000000000000000000000081525060080190506040518091039020815260200190815260200160002054828054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156127115780601f106126e657610100808354040283529160200191612711565b820191906000526020600020905b8154815290600101906020018083116126f457829003601f168201915b5050505050925095509550955095509550955091939550919395565b600083604701600084815260200190815260200160002060060160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1690509392505050565b3373ffffffffffffffffffffffffffffffffffffffff1682604201600060405180807f5f6465697479000000000000000000000000000000000000000000000000000081525060060190506040518091039020815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614151561283f57600080fd5b8082604201600060405180807f74656c6c6f72436f6e7472616374000000000000000000000000000000000000815250600e0190506040518091039020815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507fc2d1449eb0b6547aa426e09d9942a77fa4fc8cd3296305b3163e22452e0bcb8d81604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390a15050565b600080600080600080600061294261310f565b6000808b60470160008c8152602001908152602001600020905080600001548160020160009054906101000a900460ff168260020160019054906101000a900460ff168360020160029054906101000a900460ff168460020160039054906101000a900473ffffffffffffffffffffffffffffffffffffffff168560030160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff168660040160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166101006040519081016040528089600501600060405180807f726571756573744964000000000000000000000000000000000000000000000081525060090190506040518091039020815260200190815260200160002054815260200189600501600060405180807f74696d657374616d70000000000000000000000000000000000000000000000081525060090190506040518091039020815260200190815260200160002054815260200189600501600060405180807f76616c756500000000000000000000000000000000000000000000000000000081525060050190506040518091039020815260200190815260200160002054815260200189600501600060405180807f6d696e457865637574696f6e446174650000000000000000000000000000000081525060100190506040518091039020815260200190815260200160002054815260200189600501600060405180807f6e756d6265724f66566f74657300000000000000000000000000000000000000815250600d0190506040518091039020815260200190815260200160002054815260200189600501600060405180807f626c6f636b4e756d626572000000000000000000000000000000000000000000815250600b0190506040518091039020815260200190815260200160002054815260200189600501600060405180807f6d696e6572536c6f74000000000000000000000000000000000000000000000081525060090190506040518091039020815260200190815260200160002054815260200189600501600060405180807f71756f72756d0000000000000000000000000000000000000000000000000000815250600601905060405180910390208152602001908152602001600020548152508860010154995099509950995099509950995099509950509295985092959850929598565b612cbe613133565b81600401603380602002604051908101604052809291908260338015612cf9576020028201915b815481526020019060010190808311612ce5575b50505050509050919050565b600083604b01600084815260200190815260200160002060050160008381526020019081526020016000205490509392505050565b600082604d01600083815260200190815260200160002054905092915050565b600083604b01600084815260200190815260200160002060040160008381526020019081526020016000205490509392505050565b606080600080600080600088604b01600089815260200190815260200160002090508060000181600101826002015483600401600060405180807f6772616e756c6172697479000000000000000000000000000000000000000000815250600b019050604051809103902081526020019081526020016000205484600401600060405180807f7265717565737451506f736974696f6e000000000000000000000000000000008152506010019050604051809103902081526020019081526020016000205485600401600060405180807f746f74616c54697000000000000000000000000000000000000000000000000081525060080190506040518091039020815260200190815260200160002054858054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015612f345780601f10612f0957610100808354040283529160200191612f34565b820191906000526020600020905b815481529060010190602001808311612f1757829003601f168201915b50505050509550848054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015612fd05780601f10612fa557610100808354040283529160200191612fd0565b820191906000526020600020905b815481529060010190602001808311612fb357829003601f168201915b50505050509450965096509650965096509650509295509295509295565b6000806130a58384604501600086604301600060405180807f74696d654f664c6173744e657756616c756500000000000000000000000000008152506012019050604051809103902081526020019081526020016000205481526020019081526020016000205485604301600060405180807f74696d654f664c6173744e657756616c75650000000000000000000000000000815250601201905060405180910390208152602001908152602001600020546122d6565b600191509150915091565b60008282111515156130be57fe5b818303905092915050565b60a060405190810160405280600590602082028038833980820191505090505090565b60a060405190810160405280600590602082028038833980820191505090505090565b61010060405190810160405280600890602082028038833980820191505090505090565b61066060405190810160405280603390602082028038833980820191505090505090565b3382604201600060405180807f5f6f776e6572000000000000000000000000000000000000000000000000000081525060060190506040518091039020815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055503382604201600060405180807f5f6465697479000000000000000000000000000000000000000000000000000081525060060190506040518091039020815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508082604201600060405180807f74656c6c6f72436f6e7472616374000000000000000000000000000000000000815250600e0190506040518091039020815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507fc2d1449eb0b6547aa426e09d9942a77fa4fc8cd3296305b3163e22452e0bcb8d81604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390a1505056fea165627a7a7230582060e51e8d1ecbcd0c1641f3024ad921ded63d540da1ef7959eb19f339c9714c8d0029",
  "deployedBytecode": "0x6080604052600436106101ac576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff1680630f0b424d1461028d57806311c98512146102dc578063133bee5e1461035d57806315070401146103d857806317d7de7c1461046857806318160ddd146104f857806319e8e03b146105235780631db842f0146105c15780633180f8df146106105780633df0777b1461066a57806346eee1c4146106c757806347abd7f1146107165780634ee2cd7e14610767578063612c8f7f146107d65780636173c0b81461082557806363bb82ad1461087457806369026d63146108e757806370a0823114610968578063733bdef0146109cd57806377fbb66314610a395780637f6fd5d914610a9257806393fa491514610aeb578063999cf26c14610b44578063a22e407a14610bb7578063a7c438bc14610c6a578063ae0a827914610cdd578063af0b132714610d2e578063b541302914610e6d578063c775b54214610ec0578063da37994114610f19578063dd62ed3e14610f68578063e0ae93c114610fed578063e1eee6d614611046578063fc7cf0a014611182575b600080604201600060405180807f74656c6c6f72436f6e7472616374000000000000000000000000000000000000815250600e0190506040518091039020815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905060606000368080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f82011690508083019250505050505050905060008082516020840185600019f43d604051816000823e8260008114610289578282f35b8282fd5b34801561029957600080fd5b506102c6600480360360208110156102b057600080fd5b81019080803590602001909291905050506111b8565b6040518082815260200191505060405180910390f35b3480156102e857600080fd5b5061031f600480360360408110156102ff57600080fd5b8101908080359060200190929190803590602001909291905050506111d5565b6040518082600560200280838360005b8381101561034a57808201518184015260208101905061032f565b5050505090500191505060405180910390f35b34801561036957600080fd5b506103966004803603602081101561038057600080fd5b81019080803590602001909291905050506111fb565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156103e457600080fd5b506103ed611218565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561042d578082015181840152602081019050610412565b50505050905090810190601f16801561045a5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561047457600080fd5b5061047d611229565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156104bd5780820151818401526020810190506104a2565b50505050905090810190601f1680156104ea5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561050457600080fd5b5061050d61123a565b6040518082815260200191505060405180910390f35b34801561052f57600080fd5b5061053861124b565b6040518084815260200183815260200180602001828103825283818151815260200191508051906020019080838360005b83811015610584578082015181840152602081019050610569565b50505050905090810190601f1680156105b15780820380516001836020036101000a031916815260200191505b5094505050505060405180910390f35b3480156105cd57600080fd5b506105fa600480360360208110156105e457600080fd5b8101908080359060200190929190505050611265565b6040518082815260200191505060405180910390f35b34801561061c57600080fd5b506106496004803603602081101561063357600080fd5b8101908080359060200190929190505050611282565b60405180838152602001821515151581526020019250505060405180910390f35b34801561067657600080fd5b506106ad6004803603604081101561068d57600080fd5b8101908080359060200190929190803590602001909291905050506112a2565b604051808215151515815260200191505060405180910390f35b3480156106d357600080fd5b50610700600480360360208110156106ea57600080fd5b81019080803590602001909291905050506112c2565b6040518082815260200191505060405180910390f35b34801561072257600080fd5b506107656004803603602081101561073957600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506112df565b005b34801561077357600080fd5b506107c06004803603604081101561078a57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506112f6565b6040518082815260200191505060405180910390f35b3480156107e257600080fd5b5061080f600480360360208110156107f957600080fd5b8101908080359060200190929190505050611316565b6040518082815260200191505060405180910390f35b34801561083157600080fd5b5061085e6004803603602081101561084857600080fd5b8101908080359060200190929190505050611333565b6040518082815260200191505060405180910390f35b34801561088057600080fd5b506108cd6004803603604081101561089757600080fd5b8101908080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611350565b604051808215151515815260200191505060405180910390f35b3480156108f357600080fd5b5061092a6004803603604081101561090a57600080fd5b810190808035906020019092919080359060200190929190505050611370565b6040518082600560200280838360005b8381101561095557808201518184015260208101905061093a565b5050505090500191505060405180910390f35b34801561097457600080fd5b506109b76004803603602081101561098b57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611396565b6040518082815260200191505060405180910390f35b3480156109d957600080fd5b50610a1c600480360360208110156109f057600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506113b3565b604051808381526020018281526020019250505060405180910390f35b348015610a4557600080fd5b50610a7c60048036036040811015610a5c57600080fd5b8101908080359060200190929190803590602001909291905050506113d3565b6040518082815260200191505060405180910390f35b348015610a9e57600080fd5b50610ad560048036036040811015610ab557600080fd5b8101908080359060200190929190803590602001909291905050506113f3565b6040518082815260200191505060405180910390f35b348015610af757600080fd5b50610b2e60048036036040811015610b0e57600080fd5b810190808035906020019092919080359060200190929190505050611413565b6040518082815260200191505060405180910390f35b348015610b5057600080fd5b50610b9d60048036036040811015610b6757600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050611433565b604051808215151515815260200191505060405180910390f35b348015610bc357600080fd5b50610bcc611453565b6040518087815260200186815260200185815260200180602001848152602001838152602001828103825285818151815260200191508051906020019080838360005b83811015610c2a578082015181840152602081019050610c0f565b50505050905090810190601f168015610c575780820380516001836020036101000a031916815260200191505b5097505050505050505060405180910390f35b348015610c7657600080fd5b50610cc360048036036040811015610c8d57600080fd5b8101908080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061147b565b604051808215151515815260200191505060405180910390f35b348015610ce957600080fd5b50610d2c60048036036020811015610d0057600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061149b565b005b348015610d3a57600080fd5b50610d6760048036036020811015610d5157600080fd5b81019080803590602001909291905050506114b2565b604051808a81526020018915151515815260200188151515158152602001871515151581526020018673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200183600860200280838360005b83811015610e4c578082015181840152602081019050610e31565b50505050905001828152602001995050505050505050505060405180910390f35b348015610e7957600080fd5b50610e826114fa565b6040518082603360200280838360005b83811015610ead578082015181840152602081019050610e92565b5050505090500191505060405180910390f35b348015610ecc57600080fd5b50610f0360048036036040811015610ee357600080fd5b810190808035906020019092919080359060200190929190505050611511565b6040518082815260200191505060405180910390f35b348015610f2557600080fd5b50610f5260048036036020811015610f3c57600080fd5b8101908080359060200190929190505050611531565b6040518082815260200191505060405180910390f35b348015610f7457600080fd5b50610fd760048036036040811015610f8b57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061154e565b6040518082815260200191505060405180910390f35b348015610ff957600080fd5b506110306004803603604081101561101057600080fd5b810190808035906020019092919080359060200190929190505050611668565b6040518082815260200191505060405180910390f35b34801561105257600080fd5b5061107f6004803603602081101561106957600080fd5b8101908080359060200190929190505050611688565b604051808060200180602001878152602001868152602001858152602001848152602001838103835289818151815260200191508051906020019080838360005b838110156110db5780820151818401526020810190506110c0565b50505050905090810190601f1680156111085780820380516001836020036101000a031916815260200191505b50838103825288818151815260200191508051906020019080838360005b83811015611141578082015181840152602081019050611126565b50505050905090810190601f16801561116e5780820380516001836020036101000a031916815260200191505b509850505050505050505060405180910390f35b34801561118e57600080fd5b506111976116ba565b60405180838152602001821515151581526020019250505060405180910390f35b60006111ce8260006116cf90919063ffffffff16565b9050919050565b6111dd6130c9565b6111f3838360006116ef9092919063ffffffff16565b905092915050565b600061121182600061176590919063ffffffff16565b9050919050565b606061122460006117a5565b905090565b6060611235600061184b565b905090565b600061124660006118f1565b905090565b600080606061125a6000611945565b925092509250909192565b600061127b826000611aeb90919063ffffffff16565b9050919050565b600080611299836000611b0b90919063ffffffff16565b91509150915091565b60006112ba83836000611b869092919063ffffffff16565b905092915050565b60006112d8826000611bc890919063ffffffff16565b9050919050565b6112f3816000611bee90919063ffffffff16565b50565b600061130e83836000611d1f9092919063ffffffff16565b905092915050565b600061132c82600061206290919063ffffffff16565b9050919050565b600061134982600061208290919063ffffffff16565b9050919050565b6000611368838360006120a29092919063ffffffff16565b905092915050565b6113786130ec565b61138e8383600061210d9092919063ffffffff16565b905092915050565b60006113ac8260006121b990919063ffffffff16565b9050919050565b6000806113ca8360006121ce90919063ffffffff16565b91509150915091565b60006113eb838360006122669092919063ffffffff16565b905092915050565b600061140b838360006122a19092919063ffffffff16565b905092915050565b600061142b838360006122d69092919063ffffffff16565b905092915050565b600061144b8383600061230b9092919063ffffffff16565b905092915050565b600080600060606000806114676000612423565b955095509550955095509550909192939495565b60006114938383600061272d9092919063ffffffff16565b905092915050565b6114af81600061279b90919063ffffffff16565b50565b60008060008060008060006114c561310f565b60006114db8a600061292f90919063ffffffff16565b9850985098509850985098509850985098509193959799909294969850565b611502613133565b61150c6000612cb6565b905090565b600061152983836000612d059092919063ffffffff16565b905092915050565b6000611547826000612d3a90919063ffffffff16565b9050919050565b60008073__TellorGettersLibrary__________________63912c0e65909185856040518463ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808481526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001935050505060206040518083038186803b15801561162557600080fd5b505af4158015611639573d6000803e3d6000fd5b505050506040513d602081101561164f57600080fd5b8101908080519060200190929190505050905092915050565b600061168083836000612d5a9092919063ffffffff16565b905092915050565b6060806000806000806116a5876000612d8f90919063ffffffff16565b95509550955095509550955091939550919395565b6000806116c76000612fee565b915091509091565b600082604501600083815260200190815260200160002054905092915050565b6116f76130c9565b83604b0160008481526020019081526020016000206009016000838152602001908152602001600020600580602002604051908101604052809291908260058015611757576020028201915b815481526020019060010190808311611743575b505050505090509392505050565b600082604201600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905092915050565b6060816003018054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561183f5780601f106118145761010080835404028352916020019161183f565b820191906000526020600020905b81548152906001019060200180831161182257829003601f168201915b50505050509050919050565b6060816002018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156118e55780601f106118ba576101008083540402835291602001916118e5565b820191906000526020600020905b8154815290600101906020018083116118c857829003601f168201915b50505050509050919050565b600081604301600060405180807f746f74616c5f737570706c790000000000000000000000000000000000000000815250600c01905060405180910390208152602001908152602001600020549050919050565b600080606083604301600060405180807f6f6e4465636b5265717565737449640000000000000000000000000000000000815250600f019050604051809103902081526020019081526020016000205484604301600060405180807f6f6e4465636b546f74616c546970730000000000000000000000000000000000815250600f019050604051809103902081526020019081526020016000205485604b01600087604301600060405180807f6f6e4465636b5265717565737449640000000000000000000000000000000000815250600f01905060405180910390208152602001908152602001600020548152602001908152602001600020600001808054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015611ad75780601f10611aac57610100808354040283529160200191611ad7565b820191906000526020600020905b815481529060010190602001808311611aba57829003601f168201915b505050505090509250925092509193909250565b600082604c01600083815260200190815260200160002054905092915050565b600080600084604b0160008581526020019081526020016000209050600081600301805490501115611b7357611b678585836003016001856003018054905003815481101515611b5757fe5b90600052602060002001546122d6565b60019250925050611b7f565b60008081915092509250505b9250929050565b600083604b016000848152602001908152602001600020600701600083815260200190815260200160002060009054906101000a900460ff1690509392505050565b600082604b01600083815260200190815260200160002060030180549050905092915050565b3373ffffffffffffffffffffffffffffffffffffffff1682604201600060405180807f5f6465697479000000000000000000000000000000000000000000000000000081525060060190506040518091039020815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16141515611c9257600080fd5b8082604201600060405180807f5f6465697479000000000000000000000000000000000000000000000000000081525060060190506040518091039020815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050565b6000808460480160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805490501480611dfc5750818460480160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000815481101515611dbe57fe5b9060005260206000200160000160009054906101000a90046fffffffffffffffffffffffffffffffff166fffffffffffffffffffffffffffffffff16115b15611e0a576000905061205b565b60008460480160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000209050600081805490501415611e6657600091505061205b565b806001828054905003815481101515611e7b57fe5b9060005260206000200160000160009054906101000a90046fffffffffffffffffffffffffffffffff166fffffffffffffffffffffffffffffffff1683101515611f1857806001828054905003815481101515611ed457fe5b9060005260206000200160000160109054906101000a90046fffffffffffffffffffffffffffffffff166fffffffffffffffffffffffffffffffff1691505061205b565b806000815481101515611f2757fe5b9060005260206000200160000160009054906101000a90046fffffffffffffffffffffffffffffffff166fffffffffffffffffffffffffffffffff16831015611f7457600091505061205b565b60008090506000600183805490500390505b8181111561200b5760006002600184840101811515611fa157fe5b049050858482815481101515611fb357fe5b9060005260206000200160000160009054906101000a90046fffffffffffffffffffffffffffffffff166fffffffffffffffffffffffffffffffff16111515611ffe57809250612005565b6001810391505b50611f86565b828281548110151561201957fe5b9060005260206000200160000160109054906101000a90046fffffffffffffffffffffffffffffffff166fffffffffffffffffffffffffffffffff1693505050505b9392505050565b600082604301600083815260200190815260200160002054905092915050565b600082604601600083815260200190815260200160002054905092915050565b600083604401600084815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1690509392505050565b6121156130ec565b83604b01600084815260200190815260200160002060080160008381526020019081526020016000206005806020026040519081016040528092919082600580156121ab576020028201915b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311612161575b505050505090509392505050565b60006121c6838343611d1f565b905092915050565b60008083604a0160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000015484604a0160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010154915091509250929050565b600083604b0160008481526020019081526020016000206003018281548110151561228d57fe5b906000526020600020015490509392505050565b600083604701600084815260200190815260200160002060050160008381526020019081526020016000205490509392505050565b600083604b01600084815260200190815260200160002060060160008381526020019081526020016000205490509392505050565b60008084604a0160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000015411156123e85760006123d3836123c587604301600060405180807f7374616b65416d6f756e74000000000000000000000000000000000000000000815250600b01905060405180910390208152602001908152602001600020546123b789896121b9565b6130b090919063ffffffff16565b6130b090919063ffffffff16565b1015156123e3576001905061241c565b612417565b6000612406836123f887876121b9565b6130b090919063ffffffff16565b101515612416576001905061241c565b5b600090505b9392505050565b60008060006060600080866000015487604301600060405180807f63757272656e74526571756573744964000000000000000000000000000000008152506010019050604051809103902081526020019081526020016000205488604301600060405180807f646966666963756c747900000000000000000000000000000000000000000000815250600a019050604051809103902081526020019081526020016000205489604b0160008b604301600060405180807f63757272656e74526571756573744964000000000000000000000000000000008152506010019050604051809103902081526020019081526020016000205481526020019081526020016000206000018a604b0160008c604301600060405180807f63757272656e7452657175657374496400000000000000000000000000000000815250601001905060405180910390208152602001908152602001600020548152602001908152602001600020600401600060405180807f6772616e756c6172697479000000000000000000000000000000000000000000815250600b01905060405180910390208152602001908152602001600020548b604b0160008d604301600060405180807f63757272656e7452657175657374496400000000000000000000000000000000815250601001905060405180910390208152602001908152602001600020548152602001908152602001600020600401600060405180807f746f74616c54697000000000000000000000000000000000000000000000000081525060080190506040518091039020815260200190815260200160002054828054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156127115780601f106126e657610100808354040283529160200191612711565b820191906000526020600020905b8154815290600101906020018083116126f457829003601f168201915b5050505050925095509550955095509550955091939550919395565b600083604701600084815260200190815260200160002060060160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1690509392505050565b3373ffffffffffffffffffffffffffffffffffffffff1682604201600060405180807f5f6465697479000000000000000000000000000000000000000000000000000081525060060190506040518091039020815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614151561283f57600080fd5b8082604201600060405180807f74656c6c6f72436f6e7472616374000000000000000000000000000000000000815250600e0190506040518091039020815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507fc2d1449eb0b6547aa426e09d9942a77fa4fc8cd3296305b3163e22452e0bcb8d81604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390a15050565b600080600080600080600061294261310f565b6000808b60470160008c8152602001908152602001600020905080600001548160020160009054906101000a900460ff168260020160019054906101000a900460ff168360020160029054906101000a900460ff168460020160039054906101000a900473ffffffffffffffffffffffffffffffffffffffff168560030160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff168660040160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166101006040519081016040528089600501600060405180807f726571756573744964000000000000000000000000000000000000000000000081525060090190506040518091039020815260200190815260200160002054815260200189600501600060405180807f74696d657374616d70000000000000000000000000000000000000000000000081525060090190506040518091039020815260200190815260200160002054815260200189600501600060405180807f76616c756500000000000000000000000000000000000000000000000000000081525060050190506040518091039020815260200190815260200160002054815260200189600501600060405180807f6d696e457865637574696f6e446174650000000000000000000000000000000081525060100190506040518091039020815260200190815260200160002054815260200189600501600060405180807f6e756d6265724f66566f74657300000000000000000000000000000000000000815250600d0190506040518091039020815260200190815260200160002054815260200189600501600060405180807f626c6f636b4e756d626572000000000000000000000000000000000000000000815250600b0190506040518091039020815260200190815260200160002054815260200189600501600060405180807f6d696e6572536c6f74000000000000000000000000000000000000000000000081525060090190506040518091039020815260200190815260200160002054815260200189600501600060405180807f71756f72756d0000000000000000000000000000000000000000000000000000815250600601905060405180910390208152602001908152602001600020548152508860010154995099509950995099509950995099509950509295985092959850929598565b612cbe613133565b81600401603380602002604051908101604052809291908260338015612cf9576020028201915b815481526020019060010190808311612ce5575b50505050509050919050565b600083604b01600084815260200190815260200160002060050160008381526020019081526020016000205490509392505050565b600082604d01600083815260200190815260200160002054905092915050565b600083604b01600084815260200190815260200160002060040160008381526020019081526020016000205490509392505050565b606080600080600080600088604b01600089815260200190815260200160002090508060000181600101826002015483600401600060405180807f6772616e756c6172697479000000000000000000000000000000000000000000815250600b019050604051809103902081526020019081526020016000205484600401600060405180807f7265717565737451506f736974696f6e000000000000000000000000000000008152506010019050604051809103902081526020019081526020016000205485600401600060405180807f746f74616c54697000000000000000000000000000000000000000000000000081525060080190506040518091039020815260200190815260200160002054858054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015612f345780601f10612f0957610100808354040283529160200191612f34565b820191906000526020600020905b815481529060010190602001808311612f1757829003601f168201915b50505050509550848054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015612fd05780601f10612fa557610100808354040283529160200191612fd0565b820191906000526020600020905b815481529060010190602001808311612fb357829003601f168201915b50505050509450965096509650965096509650509295509295509295565b6000806130a58384604501600086604301600060405180807f74696d654f664c6173744e657756616c756500000000000000000000000000008152506012019050604051809103902081526020019081526020016000205481526020019081526020016000205485604301600060405180807f74696d654f664c6173744e657756616c75650000000000000000000000000000815250601201905060405180910390208152602001908152602001600020546122d6565b600191509150915091565b60008282111515156130be57fe5b818303905092915050565b60a060405190810160405280600590602082028038833980820191505090505090565b60a060405190810160405280600590602082028038833980820191505090505090565b61010060405190810160405280600890602082028038833980820191505090505090565b61066060405190810160405280603390602082028038833980820191505090505090565b3382604201600060405180807f5f6f776e6572000000000000000000000000000000000000000000000000000081525060060190506040518091039020815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055503382604201600060405180807f5f6465697479000000000000000000000000000000000000000000000000000081525060060190506040518091039020815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508082604201600060405180807f74656c6c6f72436f6e7472616374000000000000000000000000000000000000815250600e0190506040518091039020815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507fc2d1449eb0b6547aa426e09d9942a77fa4fc8cd3296305b3163e22452e0bcb8d81604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390a1505056fea165627a7a7230582060e51e8d1ecbcd0c1641f3024ad921ded63d540da1ef7959eb19f339c9714c8d0029",
  "sourceMap": "143:1309:3:-;;;313:109;8:9:-1;5:2;;;30:1;27;20:12;5:2;313:109:3;;;;;;;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;313:109:3;;;;;;;;;;;;;;;;368:47;399:15;368:6;:30;;;;;;:47;;;;;:::i;:::-;313:109;143:1309;;11293:346:5;11442:10;11402:4;:16;;:37;11419:19;;;;;;;;;;;;;;;;;;;11402:37;;;;;;;;;;;;:50;;;;;;;;;;;;;;;;;;11502:10;11462:4;:16;;:37;11479:19;;;;;;;;;;;;;;;;;;;11462:37;;;;;;;;;;;;:50;;;;;;;;;;;;;;;;;;11569:15;11522:4;:16;;:45;11539:27;;;;;;;;;;;;;;;;;;;11522:45;;;;;;;;;;;;:62;;;;;;;;;;;;;;;;;;11599:33;11616:15;11599:33;;;;;;;;;;;;;;;;;;;;;;11293:346;;:::o;143:1309:3:-;;;;;;;",
  "deployedSourceMap": "143:1309:3:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;825:12;840:6;:18;;:47;859:27;;;;;;;;;;;;;;;;;;;840:47;;;;;;;;;;;;;;;;;;;;;825:62;;897:22;922:8;;897:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;897:33:3;;;;;;;;1047:1;1044;1032:9;1026:16;1019:4;1008:9;1004:20;998:4;994:1;990:6;977:72;1074:14;1118:4;1112:11;1159:4;1156:1;1151:3;1136:28;1357:6;1369:1;1364:28;;;;1427:4;1422:3;1415:17;1364:28;1385:4;1380:3;1373:17;8006:147:2;;8:9:-1;5:2;;;30:1;27;20:12;5:2;8006:147:2;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;8006:147:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10608:185;;8:9:-1;5:2;;;30:1;27;20:12;5:2;10608:185:2;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;10608:185:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;10608:185:2;;;;;;;;;;;;;;;;3194:121;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3194:121:2;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;3194:121:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10893:99;;8:9:-1;5:2;;;30:1;27;20:12;5:2;10893:99:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;10893:99:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6927:95;;8:9:-1;5:2;;;30:1;27;20:12;5:2;6927:95:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;6927:95:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;13256;;8:9:-1;5:2;;;30:1;27;20:12;5:2;13256:95:2;;;;;;;;;;;;;;;;;;;;;;;12221:132;;8:9:-1;5:2;;;30:1;27;20:12;5:2;12221:132:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;12221:132:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8369:146;;8:9:-1;5:2;;;30:1;27;20:12;5:2;8369:146:2;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;8369:146:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5840:140;;8:9:-1;5:2;;;30:1;27;20:12;5:2;5840:140:2;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;5840:140:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12629:147;;8:9:-1;5:2;;;30:1;27;20:12;5:2;12629:147:2;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;12629:147:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7385:151;;8:9:-1;5:2;;;30:1;27;20:12;5:2;7385:151:2;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;7385:151:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;596:94:3;;8:9:-1;5:2;;;30:1;27;20:12;5:2;596:94:3;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;596:94:3;;;;;;;;;;;;;;;;;;;;;;1929:146:2;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1929:146:2;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1929:146:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11964:108;;8:9:-1;5:2;;;30:1;27;20:12;5:2;11964:108:2;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;11964:108:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7704:143;;8:9:-1;5:2;;;30:1;27;20:12;5:2;7704:143:2;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;7704:143:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2381:136;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2381:136:2;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2381:136:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6628:202;;8:9:-1;5:2;;;30:1;27;20:12;5:2;6628:202:2;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;6628:202:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;6628:202:2;;;;;;;;;;;;;;;;1545:111;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1545:111:2;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1545:111:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10186:125;;8:9:-1;5:2;;;30:1;27;20:12;5:2;10186:125:2;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;10186:125:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11210:179;;8:9:-1;5:2;;;30:1;27;20:12;5:2;11210:179:2;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;11210:179:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5249:153;;8:9:-1;5:2;;;30:1;27;20:12;5:2;5249:153:2;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;5249:153:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12995:151;;8:9:-1;5:2;;;30:1;27;20:12;5:2;12995:151:2;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;12995:151:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1204:139;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1204:139:2;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1204:139:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4263:153;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4263:153:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;4263:153:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2706:138;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2706:138:2;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2706:138:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;428:124:3;;8:9:-1;5:2;;;30:1;27;20:12;5:2;428:124:3;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;428:124:3;;;;;;;;;;;;;;;;;;;;;;3780:197:2;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3780:197:2;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;3780:197:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;3780:197:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8621:103;;8:9:-1;5:2;;;30:1;27;20:12;5:2;8621:103:2;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;8621:103:2;;;;;;;;;;;;;;;;6224:157;;8:9:-1;5:2;;;30:1;27;20:12;5:2;6224:157:2;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;6224:157:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4612:141;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4612:141:2;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;4612:141:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;815:136;;8:9:-1;5:2;;;30:1;27;20:12;5:2;815:136:2;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;815:136:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9203:153;;8:9:-1;5:2;;;30:1;27;20:12;5:2;9203:153:2;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;9203:153:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9770:175;;8:9:-1;5:2;;;30:1;27;20:12;5:2;9770:175:2;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;9770:175:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;9770:175:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;9770:175:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5551:107;;8:9:-1;5:2;;;30:1;27;20:12;5:2;5551:107:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8006:147;8078:4;8104:42;8135:10;8104:6;:30;;:42;;;;:::i;:::-;8097:49;;8006:147;;;:::o;10608:185::-;10699:14;;:::i;:::-;10731:55;10764:10;10775;10731:6;:32;;:55;;;;;:::i;:::-;10724:62;;10608:185;;;;:::o;3194:121::-;3255:7;3280:28;3302:5;3280:6;:21;;:28;;;;:::i;:::-;3273:35;;3194:121;;;:::o;10893:99::-;10936:13;10967:18;:6;:16;:18::i;:::-;10960:25;;10893:99;:::o;6927:95::-;6968:13;6999:16;:6;:14;:16::i;:::-;6992:23;;6927:95;:::o;13256:::-;13302:4;13324:20;:6;:18;:20::i;:::-;13317:27;;13256:95;:::o;12221:132::-;12273:4;12279;12284:13;12319:27;:6;:25;:27::i;:::-;12312:34;;;;;;12221:132;;;:::o;8369:146::-;8442:4;8468:40;8499:8;8468:6;:30;;:40;;;;:::i;:::-;8461:47;;8369:146;;;:::o;5840:140::-;5908:4;5913;5935:38;5962:10;5935:6;:26;;:38;;;;:::i;:::-;5928:45;;;;5840:140;;;:::o;12629:147::-;12706:4;12728:41;12747:10;12758;12728:6;:18;;:41;;;;;:::i;:::-;12721:48;;12629:147;;;;:::o;7385:151::-;7461:4;7483:46;7518:10;7483:6;:34;;:46;;;;:::i;:::-;7476:53;;7385:151;;;:::o;596:94:3:-;654:29;673:9;654:6;:18;;:29;;;;:::i;:::-;596:94;:::o;1929:146:2:-;2007:4;2030:38;2049:5;2055:12;2030:6;:18;;:38;;;;;:::i;:::-;2023:45;;1929:146;;;;:::o;11964:108::-;12019:4;12041:24;12059:5;12041:6;:17;;:24;;;;:::i;:::-;12034:31;;11964:108;;;:::o;7704:143::-;7776:4;7798:42;7833:6;7798;:34;;:42;;;;:::i;:::-;7791:49;;7704:143;;;:::o;2381:136::-;2455:4;2477:33;2492:10;2503:6;2477;:14;;:33;;;;;:::i;:::-;2470:40;;2381:136;;;;:::o;6628:202::-;6726:17;;:::i;:::-;6761:62;6801:10;6812;6761:6;:39;;:62;;;;;:::i;:::-;6754:69;;6628:202;;;;:::o;1545:111::-;1602:4;1626:23;1643:5;1626:6;:16;;:23;;;;:::i;:::-;1619:30;;1545:111;;;:::o;10186:125::-;10248:4;10253;10275:29;10296:7;10275:6;:20;;:29;;;;:::i;:::-;10268:36;;;;10186:125;;;:::o;11210:179::-;11303:4;11325:57;11364:10;11375:6;11325;:38;;:57;;;;;:::i;:::-;11318:64;;11210:179;;;;:::o;5249:153::-;5330:4;5352:43;5378:10;5389:5;5352:6;:25;;:43;;;;;:::i;:::-;5345:50;;5249:153;;;;:::o;12995:151::-;13074:4;13097:42;13117:10;13128;13097:6;:19;;:42;;;;;:::i;:::-;13090:49;;12995:151;;;;:::o;1204:139::-;1278:4;1300:36;1322:5;1328:7;1300:6;:21;;:36;;;;;:::i;:::-;1293:43;;1204:139;;;;:::o;4263:153::-;4316:7;4325:4;4331;4336:13;4350:4;4355;4381:28;:6;:26;:28::i;:::-;4374:35;;;;;;;;;;;;4263:153;;;;;;:::o;2706:138::-;2780:4;2802:35;2817:10;2828:8;2802:6;:14;;:35;;;;;:::i;:::-;2795:42;;2706:138;;;;:::o;428:124:3:-;501:44;529:15;501:6;:27;;:44;;;;:::i;:::-;428:124;:::o;3780:197:2:-;3844:7;3853:4;3859;3865;3871:7;3880;3889;3897:14;;:::i;:::-;3913:3;3934:36;3959:10;3934:6;:24;;:36;;;;:::i;:::-;3927:43;;;;;;;;;;;;;;;;;;3780:197;;;;;;;;;;;:::o;8621:103::-;8664:15;;:::i;:::-;8697:20;:6;:18;:20::i;:::-;8690:27;;8621:103;:::o;6224:157::-;6306:4;6328:46;6352:10;6363;6328:6;:23;;:46;;;;;:::i;:::-;6321:53;;6224:157;;;;:::o;4612:141::-;4684:4;4707:39;4740:5;4707:6;:32;;:39;;;;:::i;:::-;4699:47;;4612:141;;;:::o;815:136::-;890:4;912:6;:16;;;;929:5;935:8;912:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;912:32:2;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;912:32:2;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;912:32:2;;;;;;;;;;;;;;;;905:39;;815:136;;;;:::o;9203:153::-;9284:4;9306:43;9332:10;9343:5;9306:6;:25;;:43;;;;;:::i;:::-;9299:50;;9203:153;;;;:::o;9770:175::-;9833:13;9848;9862:7;9870:4;9876;9882;9905:33;9927:10;9905:6;:21;;:33;;;;:::i;:::-;9898:40;;;;;;;;;;;;9770:175;;;;;;;:::o;5551:107::-;5600:4;5605;5627:24;:6;:22;:24::i;:::-;5620:31;;;;5551:107;;:::o;22309:176:5:-;22415:4;22441;:25;;:37;22467:10;22441:37;;;;;;;;;;;;22434:44;;22309:176;;;;:::o;25377:225::-;25502:14;;:::i;:::-;25534:4;:19;;:31;25554:10;25534:31;;;;;;;;;;;:49;;:61;25584:10;25534:61;;;;;;;;;;;25527:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;25377:225;;;;;:::o;15753:150::-;15848:7;15873:4;:16;;:23;15890:5;15873:23;;;;;;;;;;;;;;;;;;;;;15866:30;;15753:150;;;;:::o;25702:125::-;25777:13;25808:4;:12;;25801:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;25702:125;;;:::o;21131:121::-;21204:13;21235:4;:10;;21228:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;21131:121;;;:::o;28433:147::-;28511:4;28533;:13;;:40;28547:25;;;;;;;;;;;;;;;;;;;28533:40;;;;;;;;;;;;28526:47;;28433:147;;;:::o;27118:303::-;27202:4;27208;27213:13;27249:4;:13;;:43;27263:28;;;;;;;;;;;;;;;;;;;27249:43;;;;;;;;;;;;27293:4;:13;;:43;27307:28;;;;;;;;;;;;;;;;;;;27293:43;;;;;;;;;;;;27337:4;:19;;:64;27357:4;:13;;:43;27371:28;;;;;;;;;;;;;;;;;;;27357:43;;;;;;;;;;;;27337:64;;;;;;;;;;;:76;;27241:173;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;27118:303;;;;;:::o;22686:179::-;22795:4;22821;:25;;:37;22847:10;22821:37;;;;;;;;;;;;22814:44;;22686:179;;;;:::o;19636:425::-;19737:4;19742;19757:24;19784:4;:19;;:31;19804:10;19784:31;;;;;;;;;;;19757:58;;19865:1;19829:8;:26;;:33;;;;:37;19826:229;;;19889:95;19902:4;19907:10;19918:8;:26;;19981:1;19945:8;:26;;:33;;;;:37;19918:65;;;;;;;;;;;;;;;;;;19889:12;:95::i;:::-;19985:4;19881:109;;;;;;;19826:229;20036:1;20038:5;20028:16;;;;;;;;19636:425;;;;;;:::o;27694:193::-;27805:4;27827;:19;;:31;27847:10;27827:31;;;;;;;;;;;:41;;:53;27869:10;27827:53;;;;;;;;;;;;;;;;;;;;;27820:60;;27694:193;;;;;:::o;21615:195::-;21725:4;21747;:19;;:31;21767:10;21747:31;;;;;;;;;;;:49;;:56;;;;21740:63;;21615:195;;;;:::o;10334:217::-;10475:10;10434:51;;:4;:16;;:37;10451:19;;;;;;;;;;;;;;;;;;;10434:37;;;;;;;;;;;;;;;;;;;;;:51;;;10426:60;;;;;;;;10535:9;10496:4;:16;;:37;10513:19;;;;;;;;;;;;;;;;;;;10496:37;;;;;;;;;;;;:48;;;;;;;;;;;;;;;;;;10334:217;;:::o;13550:976::-;13661:4;13713:1;13682:4;:13;;:20;13696:5;13682:20;;;;;;;;;;;;;;;:27;;;;:32;13681:88;;;;13756:12;13720:4;:13;;:20;13734:5;13720:20;;;;;;;;;;;;;;;13741:1;13720:23;;;;;;;;;;;;;;;;;:33;;;;;;;;;;;;:48;;;13681:88;13677:843;;;13796:1;13789:8;;;;13677:843;13829:32;13864:4;:13;;:20;13878:5;13864:20;;;;;;;;;;;;;;;13829:55;;13920:1;13898:11;:18;;;;:23;13894:37;;;13930:1;13923:8;;;;;13894:37;13961:11;13992:1;13973:11;:18;;;;:20;13961:33;;;;;;;;;;;;;;;;;:43;;;;;;;;;;;;13945:59;;:12;:59;;13941:123;;;14025:11;14056:1;14037:11;:18;;;;:20;14025:33;;;;;;;;;;;;;;;;;:39;;;;;;;;;;;;14018:46;;;;;;;13941:123;14093:11;14105:1;14093:14;;;;;;;;;;;;;;;;;:24;;;;;;;;;;;;14078:39;;:12;:39;14074:53;;;14126:1;14119:8;;;;;14074:53;14188:8;14199:1;14188:12;;14210:8;14240:1;14221:11;:18;;;;:20;14210:31;;14251:223;14264:3;14258;:9;14251:223;;;14283:8;14311:1;14307;14301:3;14295;:9;:13;14294:18;;;;;;;;14283:29;;14358:12;14330:11;14342:3;14330:16;;;;;;;;;;;;;;;;;:26;;;;;;;;;;;;:40;;;;14326:138;;;14396:3;14390:9;;14326:138;;;14448:1;14444:3;:5;14438:11;;14326:138;14251:223;;;;14490:11;14502:3;14490:16;;;;;;;;;;;;;;;;;:22;;;;;;;;;;;;14483:29;;;;;;;13550:976;;;;;;:::o;26833:139::-;26923:4;26945;:13;;:20;26959:5;26945:20;;;;;;;;;;;;26938:27;;26833:139;;;;:::o;21978:172::-;22084:4;22106;:29;;:37;22136:6;22106:37;;;;;;;;;;;;22099:44;;21978:172;;;;:::o;14833:179::-;14941:4;14963;:22;;:34;14986:10;14963:34;;;;;;;;;;;:42;14998:6;14963:42;;;;;;;;;;;;;;;;;;;;;;;;;14956:49;;14833:179;;;;;:::o;20745:231::-;20877:17;;:::i;:::-;20912:4;:19;;:31;20932:10;20912:31;;;;;;;;;;;:45;;:57;20958:10;20912:57;;;;;;;;;;;20905:64;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;20745:231;;;;;:::o;13113:159::-;13203:4;13227:37;13239:4;13244:5;13251:12;13227:11;:37::i;:::-;13220:44;;13113:159;;;;:::o;24877:210::-;24972:4;24977;25000;:18;;:27;25019:7;25000:27;;;;;;;;;;;;;;;:41;;;25042:4;:18;;:27;25061:7;25042:27;;;;;;;;;;;;;;;:37;;;24992:88;;;;24877:210;;;;;:::o;26046:212::-;26172:4;26194;:19;;:31;26214:10;26194:31;;;;;;;;;;;:49;;26244:6;26194:57;;;;;;;;;;;;;;;;;;26187:64;;26046:212;;;;;:::o;18835:195::-;18949:4;18971;:17;;:29;18989:10;18971:29;;;;;;;;;;;:45;;:52;19017:5;18971:52;;;;;;;;;;;;18964:59;;18835:195;;;;;:::o;28126:198::-;28239:4;28262;:19;;:31;28282:10;28262:31;;;;;;;;;;;:43;;:55;28306:10;28262:55;;;;;;;;;;;;28255:62;;28126:198;;;;;:::o;12363:539::-;12470:4;12619:1;12578:4;:18;;:25;12597:5;12578:25;;;;;;;;;;;;;;;:39;;;:42;12575:299;;;12721:1;12638:79;12709:7;12638:66;12664:4;:13;;:39;12678:24;;;;;;;;;;;;;;;;;;;12664:39;;;;;;;;;;;;12638:21;12648:4;12653:5;12638:9;:21::i;:::-;:25;;:66;;;;:::i;:::-;:70;;:79;;;;:::i;:::-;:84;;12635:132;;;12748:4;12741:11;;;;12635:132;12575:299;;;12832:1;12794:34;12820:7;12794:21;12804:4;12809:5;12794:9;:21::i;:::-;:25;;:34;;;;:::i;:::-;:39;;12791:83;;;12859:4;12852:11;;;;12791:83;12575:299;12890:5;12883:12;;12363:539;;;;;;:::o;17429:547::-;17514:7;17523:4;17529;17534:13;17548:4;17553;17580;:21;;;17602:4;:13;;:44;17616:29;;;;;;;;;;;;;;;;;;;17602:44;;;;;;;;;;;;17647:4;:13;;:38;17661:23;;;;;;;;;;;;;;;;;;;17647:38;;;;;;;;;;;;17686:4;:19;;:65;17706:4;:13;;:44;17720:29;;;;;;;;;;;;;;;;;;;17706:44;;;;;;;;;;;;17686:65;;;;;;;;;;;:77;;17764:4;:19;;:65;17784:4;:13;;:44;17798:29;;;;;;;;;;;;;;;;;;;17784:44;;;;;;;;;;;;17764:65;;;;;;;;;;;:77;;:103;17842:24;;;;;;;;;;;;;;;;;;;17764:103;;;;;;;;;;;;17868:4;:19;;:65;17888:4;:13;;:44;17902:29;;;;;;;;;;;;;;;;;;;17888:44;;;;;;;;;;;;17868:65;;;;;;;;;;;:77;;:100;17946:21;;;;;;;;;;;;;;;;;;;17868:100;;;;;;;;;;;;17572:397;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;17429:547;;;;;;;:::o;15222:181::-;15329:4;15351;:17;;:29;15369:10;15351:29;;;;;;;;;;;:35;;:45;15387:8;15351:45;;;;;;;;;;;;;;;;;;;;;;;;;15344:52;;15222:181;;;;;:::o;10748:293::-;10903:10;10862:51;;:4;:16;;:37;10879:19;;;;;;;;;;;;;;;;;;;10862:37;;;;;;;;;;;;;;;;;;;;;:51;;;10854:60;;;;;;;;10971:15;10924:4;:16;;:45;10941:27;;;;;;;;;;;;;;;;;;;10924:45;;;;;;;;;;;;:62;;;;;;;;;;;;;;;;;;11001:33;11018:15;11001:33;;;;;;;;;;;;;;;;;;;;;;10748:293;;:::o;16369:775::-;16468:7;16477:4;16483;16489;16495:7;16504;16513;16521:14;;:::i;:::-;16537:3;16551:20;16574:4;:17;;:29;16592:10;16574:29;;;;;;;;;;;16551:52;;16620:4;:9;;;16630:4;:13;;;;;;;;;;;;16645:4;:22;;;;;;;;;;;;16669:4;:15;;;;;;;;;;;;16686:4;:18;;;;;;;;;;;;16706:4;:19;;;;;;;;;;;;16726:4;:24;;;;;;;;;;;;16613:524;;;;;;;;;16752:4;:20;;:44;16773:22;;;;;;;;;;;;;;;;;;;16752:44;;;;;;;;;;;;16613:524;;;;16798:4;:20;;:44;16819:22;;;;;;;;;;;;;;;;;;;16798:44;;;;;;;;;;;;16613:524;;;;16844:4;:20;;:40;16865:18;;;;;;;;;;;;;;;;;;;16844:40;;;;;;;;;;;;16613:524;;;;16886:4;:20;;:51;16907:29;;;;;;;;;;;;;;;;;;;16886:51;;;;;;;;;;;;16613:524;;;;16939:4;:20;;:48;16960:26;;;;;;;;;;;;;;;;;;;16939:48;;;;;;;;;;;;16613:524;;;;16989:4;:20;;:46;17010:24;;;;;;;;;;;;;;;;;;;16989:46;;;;;;;;;;;;16613:524;;;;17037:4;:20;;:44;17058:22;;;;;;;;;;;;;;;;;;;17037:44;;;;;;;;;;;;16613:524;;;;17083:4;:20;;:41;17104:19;;;;;;;;;;;;;;;;;;;17083:41;;;;;;;;;;;;16613:524;;;17126:4;:10;;;16613:524;;;;;;;;;;;;;;;;;;;16369:775;;;;;;;;;;;:::o;22971:130::-;23048:15;;:::i;:::-;23081:4;:13;;23074:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;22971:130;;;:::o;20297:201::-;20412:4;20434;:19;;:31;20454:10;20434:31;;;;;;;;;;;:45;;:57;20480:10;20434:57;;;;;;;;;;;;20427:64;;20297:201;;;;;:::o;18173:169::-;18278:4;18301;:27;;:34;18329:5;18301:34;;;;;;;;;;;;18293:42;;18173:169;;;;:::o;23580:193::-;23694:4;23716;:19;;:31;23736:10;23716:31;;;;;;;;;;;:43;;:50;23760:5;23716:50;;;;;;;;;;;;23709:57;;23580:193;;;;;:::o;24187:449::-;24283:13;24297;24312:7;24320:4;24326;24332;24348:24;24375:4;:19;;:31;24395:10;24375:31;;;;;;;;;;;24348:58;;24425:8;:20;;24446:8;:19;;24466:8;:18;;;24486:8;:20;;:46;24507:24;;;;;;;;;;;;;;;;;;;24486:46;;;;;;;;;;;;24533:8;:20;;:51;24554:29;;;;;;;;;;;;;;;;;;;24533:51;;;;;;;;;;;;24585:8;:20;;:43;24606:21;;;;;;;;;;;;;;;;;;;24585:43;;;;;;;;;;;;24417:212;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;24187:449;;;;;;;;:::o;19184:262::-;19265:4;19270;19293:140;19306:4;19311;:25;;:73;19337:4;:13;;:46;19351:31;;;;;;;;;;;;;;;;;;;19337:46;;;;;;;;;;;;19311:73;;;;;;;;;;;;19386:4;:13;;:46;19400:31;;;;;;;;;;;;;;;;;;;19386:46;;;;;;;;;;;;19293:12;:140::i;:::-;19434:4;19285:154;;;;19184:262;;;:::o;734:110:4:-;792:7;819:1;814;:6;;807:14;;;;;;838:1;834;:5;827:12;;734:110;;;;:::o;143:1309:3:-;;;;;;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;148:4;140:6;136:17;126:27;;0:157;143:1309:3;;;;:::o;:::-;;;;;;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;148:4;140:6;136:17;126:27;;0:157;143:1309:3;;;;:::o;:::-;;;;;;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;148:4;140:6;136:17;126:27;;0:157;143:1309:3;;;;:::o;:::-;;;;;;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;148:4;140:6;136:17;126:27;;0:157;143:1309:3;;;;:::o;11293:346:5:-;11442:10;11402:4;:16;;:37;11419:19;;;;;;;;;;;;;;;;;;;11402:37;;;;;;;;;;;;:50;;;;;;;;;;;;;;;;;;11502:10;11462:4;:16;;:37;11479:19;;;;;;;;;;;;;;;;;;;11462:37;;;;;;;;;;;;:50;;;;;;;;;;;;;;;;;;11569:15;11522:4;:16;;:45;11539:27;;;;;;;;;;;;;;;;;;;11522:45;;;;;;;;;;;;:62;;;;;;;;;;;;;;;;;;11599:33;11616:15;11599:33;;;;;;;;;;;;;;;;;;;;;;11293:346;;:::o",
  "source": "pragma solidity ^0.5.0;\n\nimport \"./TellorGetters.sol\";\nimport \"./libraries/TellorLibrary.sol\";\nimport \"./libraries/TellorGettersLibrary.sol\";\n\ncontract TellorMaster is TellorGetters{\n    /**\n    * @dev The constructor sets the original `tellorStorageOwner` of the contract to the sender\n    * account.\n    */\n    constructor (address _tellorContract)  public{\n        tellor.tellorMasterConstructor(_tellorContract);\n    }\n\n    function changeTellorContract(address _tellorContract) external{\n        tellor.changeTellorContract(_tellorContract);\n    }\n\n        //Only needs to be in library\n    function changeDeity(address _newDeity) external{\n        tellor.changeDeity(_newDeity);\n    }\n\n    /**\n    @dev this fuction allows for delegate calls to the Tellor contract.???\n    */\n    function () external payable {\n        address addr = tellor.addressVars[keccak256(\"tellorContract\")];\n        bytes memory _calldata = msg.data;\n        assembly {\n            let result := delegatecall(not(0), addr, add(_calldata, 0x20), mload(_calldata), 0, 0)\n            let size := returndatasize\n            let ptr := mload(0x40)\n            returndatacopy(ptr, 0, size)\n            // revert instead of invalid() bc if the underlying call failed with invalid() it already wasted gas.\n            // if the call returned error data, forward it\n            switch result case 0 { revert(ptr, size) }\n            default { return(ptr, size) }\n        }\n    }\n}",
  "sourcePath": "/Users/mdcoon/git/TellorCore/contracts/TellorMaster.sol",
  "ast": {
    "absolutePath": "/Users/mdcoon/git/TellorCore/contracts/TellorMaster.sol",
    "exportedSymbols": {
      "TellorMaster": [
        859
      ]
    },
    "id": 860,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 798,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:3"
      },
      {
        "absolutePath": "/Users/mdcoon/git/TellorCore/contracts/TellorGetters.sol",
        "file": "./TellorGetters.sol",
        "id": 799,
        "nodeType": "ImportDirective",
        "scope": 860,
        "sourceUnit": 797,
        "src": "25:29:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/mdcoon/git/TellorCore/contracts/libraries/TellorLibrary.sol",
        "file": "./libraries/TellorLibrary.sol",
        "id": 800,
        "nodeType": "ImportDirective",
        "scope": 860,
        "sourceUnit": 5837,
        "src": "55:39:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/mdcoon/git/TellorCore/contracts/libraries/TellorGettersLibrary.sol",
        "file": "./libraries/TellorGettersLibrary.sol",
        "id": 801,
        "nodeType": "ImportDirective",
        "scope": 860,
        "sourceUnit": 2346,
        "src": "95:46:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 802,
              "name": "TellorGetters",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 796,
              "src": "168:13:3",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_TellorGetters_$796",
                "typeString": "contract TellorGetters"
              }
            },
            "id": 803,
            "nodeType": "InheritanceSpecifier",
            "src": "168:13:3"
          }
        ],
        "contractDependencies": [
          796
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 859,
        "linearizedBaseContracts": [
          859,
          796
        ],
        "name": "TellorMaster",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 814,
              "nodeType": "Block",
              "src": "358:64:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 811,
                        "name": "_tellorContract",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 805,
                        "src": "399:15:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 808,
                        "name": "tellor",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 307,
                        "src": "368:6:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TellorStorageStruct_$1149_storage",
                          "typeString": "struct TellorGettersLibrary.TellorStorageStruct storage ref"
                        }
                      },
                      "id": 810,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "tellorMasterConstructor",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1397,
                      "src": "368:30:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_TellorStorageStruct_$1149_storage_ptr_$_t_address_$returns$__$bound_to$_t_struct$_TellorStorageStruct_$1149_storage_ptr_$",
                        "typeString": "function (struct TellorGettersLibrary.TellorStorageStruct storage pointer,address)"
                      }
                    },
                    "id": 812,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "368:47:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 813,
                  "nodeType": "ExpressionStatement",
                  "src": "368:47:3"
                }
              ]
            },
            "documentation": "@dev The constructor sets the original `tellorStorageOwner` of the contract to the sender\naccount.",
            "id": 815,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 806,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 805,
                  "name": "_tellorContract",
                  "nodeType": "VariableDeclaration",
                  "scope": 815,
                  "src": "326:23:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 804,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "326:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "325:25:3"
            },
            "returnParameters": {
              "id": 807,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "358:0:3"
            },
            "scope": 859,
            "src": "313:109:3",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 826,
              "nodeType": "Block",
              "src": "491:61:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 823,
                        "name": "_tellorContract",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 817,
                        "src": "529:15:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 820,
                        "name": "tellor",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 307,
                        "src": "501:6:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TellorStorageStruct_$1149_storage",
                          "typeString": "struct TellorGettersLibrary.TellorStorageStruct storage ref"
                        }
                      },
                      "id": 822,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "changeTellorContract",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1353,
                      "src": "501:27:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_TellorStorageStruct_$1149_storage_ptr_$_t_address_$returns$__$bound_to$_t_struct$_TellorStorageStruct_$1149_storage_ptr_$",
                        "typeString": "function (struct TellorGettersLibrary.TellorStorageStruct storage pointer,address)"
                      }
                    },
                    "id": 824,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "501:44:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 825,
                  "nodeType": "ExpressionStatement",
                  "src": "501:44:3"
                }
              ]
            },
            "documentation": null,
            "id": 827,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "changeTellorContract",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 818,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 817,
                  "name": "_tellorContract",
                  "nodeType": "VariableDeclaration",
                  "scope": 827,
                  "src": "458:23:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 816,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "458:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "457:25:3"
            },
            "returnParameters": {
              "id": 819,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "491:0:3"
            },
            "scope": 859,
            "src": "428:124:3",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 838,
              "nodeType": "Block",
              "src": "644:46:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 835,
                        "name": "_newDeity",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 829,
                        "src": "673:9:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 832,
                        "name": "tellor",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 307,
                        "src": "654:6:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TellorStorageStruct_$1149_storage",
                          "typeString": "struct TellorGettersLibrary.TellorStorageStruct storage ref"
                        }
                      },
                      "id": 834,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "changeDeity",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1319,
                      "src": "654:18:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_TellorStorageStruct_$1149_storage_ptr_$_t_address_$returns$__$bound_to$_t_struct$_TellorStorageStruct_$1149_storage_ptr_$",
                        "typeString": "function (struct TellorGettersLibrary.TellorStorageStruct storage pointer,address)"
                      }
                    },
                    "id": 836,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "654:29:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 837,
                  "nodeType": "ExpressionStatement",
                  "src": "654:29:3"
                }
              ]
            },
            "documentation": null,
            "id": 839,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "changeDeity",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 830,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 829,
                  "name": "_newDeity",
                  "nodeType": "VariableDeclaration",
                  "scope": 839,
                  "src": "617:17:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 828,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "617:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "616:19:3"
            },
            "returnParameters": {
              "id": 831,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "644:0:3"
            },
            "scope": 859,
            "src": "596:94:3",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 857,
              "nodeType": "Block",
              "src": "815:635:3",
              "statements": [
                {
                  "assignments": [
                    843
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 843,
                      "name": "addr",
                      "nodeType": "VariableDeclaration",
                      "scope": 857,
                      "src": "825:12:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 842,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "825:7:3",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 850,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 844,
                        "name": "tellor",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 307,
                        "src": "840:6:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TellorStorageStruct_$1149_storage",
                          "typeString": "struct TellorGettersLibrary.TellorStorageStruct storage ref"
                        }
                      },
                      "id": 845,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "addressVars",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1099,
                      "src": "840:18:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_bytes32_$_t_address_$",
                        "typeString": "mapping(bytes32 => address)"
                      }
                    },
                    "id": 849,
                    "indexExpression": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "hexValue": "74656c6c6f72436f6e7472616374",
                          "id": 847,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "869:16:3",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_d48fd09afdab521f4f69bd2af8177f60fb0709ce0f1b3d5b8a2e233a20453848",
                            "typeString": "literal_string \"tellorContract\""
                          },
                          "value": "tellorContract"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_stringliteral_d48fd09afdab521f4f69bd2af8177f60fb0709ce0f1b3d5b8a2e233a20453848",
                            "typeString": "literal_string \"tellorContract\""
                          }
                        ],
                        "id": 846,
                        "name": "keccak256",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7230,
                        "src": "859:9:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                          "typeString": "function (bytes memory) pure returns (bytes32)"
                        }
                      },
                      "id": 848,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "859:27:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "840:47:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "825:62:3"
                },
                {
                  "assignments": [
                    852
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 852,
                      "name": "_calldata",
                      "nodeType": "VariableDeclaration",
                      "scope": 857,
                      "src": "897:22:3",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 851,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "897:5:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 855,
                  "initialValue": {
                    "argumentTypes": null,
                    "expression": {
                      "argumentTypes": null,
                      "id": 853,
                      "name": "msg",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7236,
                      "src": "922:3:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_message",
                        "typeString": "msg"
                      }
                    },
                    "id": 854,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "data",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": null,
                    "src": "922:8:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_calldata_ptr",
                      "typeString": "bytes calldata"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "897:33:3"
                },
                {
                  "externalReferences": [
                    {
                      "addr": {
                        "declaration": 843,
                        "isOffset": false,
                        "isSlot": false,
                        "src": "998:4:3",
                        "valueSize": 1
                      }
                    },
                    {
                      "_calldata": {
                        "declaration": 852,
                        "isOffset": false,
                        "isSlot": false,
                        "src": "1032:9:3",
                        "valueSize": 1
                      }
                    },
                    {
                      "_calldata": {
                        "declaration": 852,
                        "isOffset": false,
                        "isSlot": false,
                        "src": "1008:9:3",
                        "valueSize": 1
                      }
                    }
                  ],
                  "id": 856,
                  "nodeType": "InlineAssembly",
                  "operations": "{\n    let result := delegatecall(not(0), addr, add(_calldata, 0x20), mload(_calldata), 0, 0)\n    let size := returndatasize()\n    let ptr := mload(0x40)\n    returndatacopy(ptr, 0, size)\n    switch result\n    case 0 {\n        revert(ptr, size)\n    }\n    default {\n        return(ptr, size)\n    }\n}",
                  "src": "940:510:3"
                }
              ]
            },
            "documentation": "@dev this fuction allows for delegate calls to the Tellor contract.???",
            "id": 858,
            "implemented": true,
            "kind": "fallback",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 840,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "795:2:3"
            },
            "returnParameters": {
              "id": 841,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "815:0:3"
            },
            "scope": 859,
            "src": "786:664:3",
            "stateMutability": "payable",
            "superFunction": null,
            "visibility": "external"
          }
        ],
        "scope": 860,
        "src": "143:1309:3"
      }
    ],
    "src": "0:1452:3"
  },
  "legacyAST": {
    "absolutePath": "/Users/mdcoon/git/TellorCore/contracts/TellorMaster.sol",
    "exportedSymbols": {
      "TellorMaster": [
        859
      ]
    },
    "id": 860,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 798,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:3"
      },
      {
        "absolutePath": "/Users/mdcoon/git/TellorCore/contracts/TellorGetters.sol",
        "file": "./TellorGetters.sol",
        "id": 799,
        "nodeType": "ImportDirective",
        "scope": 860,
        "sourceUnit": 797,
        "src": "25:29:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/mdcoon/git/TellorCore/contracts/libraries/TellorLibrary.sol",
        "file": "./libraries/TellorLibrary.sol",
        "id": 800,
        "nodeType": "ImportDirective",
        "scope": 860,
        "sourceUnit": 5837,
        "src": "55:39:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/mdcoon/git/TellorCore/contracts/libraries/TellorGettersLibrary.sol",
        "file": "./libraries/TellorGettersLibrary.sol",
        "id": 801,
        "nodeType": "ImportDirective",
        "scope": 860,
        "sourceUnit": 2346,
        "src": "95:46:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 802,
              "name": "TellorGetters",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 796,
              "src": "168:13:3",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_TellorGetters_$796",
                "typeString": "contract TellorGetters"
              }
            },
            "id": 803,
            "nodeType": "InheritanceSpecifier",
            "src": "168:13:3"
          }
        ],
        "contractDependencies": [
          796
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 859,
        "linearizedBaseContracts": [
          859,
          796
        ],
        "name": "TellorMaster",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 814,
              "nodeType": "Block",
              "src": "358:64:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 811,
                        "name": "_tellorContract",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 805,
                        "src": "399:15:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 808,
                        "name": "tellor",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 307,
                        "src": "368:6:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TellorStorageStruct_$1149_storage",
                          "typeString": "struct TellorGettersLibrary.TellorStorageStruct storage ref"
                        }
                      },
                      "id": 810,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "tellorMasterConstructor",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1397,
                      "src": "368:30:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_TellorStorageStruct_$1149_storage_ptr_$_t_address_$returns$__$bound_to$_t_struct$_TellorStorageStruct_$1149_storage_ptr_$",
                        "typeString": "function (struct TellorGettersLibrary.TellorStorageStruct storage pointer,address)"
                      }
                    },
                    "id": 812,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "368:47:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 813,
                  "nodeType": "ExpressionStatement",
                  "src": "368:47:3"
                }
              ]
            },
            "documentation": "@dev The constructor sets the original `tellorStorageOwner` of the contract to the sender\naccount.",
            "id": 815,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 806,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 805,
                  "name": "_tellorContract",
                  "nodeType": "VariableDeclaration",
                  "scope": 815,
                  "src": "326:23:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 804,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "326:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "325:25:3"
            },
            "returnParameters": {
              "id": 807,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "358:0:3"
            },
            "scope": 859,
            "src": "313:109:3",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 826,
              "nodeType": "Block",
              "src": "491:61:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 823,
                        "name": "_tellorContract",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 817,
                        "src": "529:15:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 820,
                        "name": "tellor",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 307,
                        "src": "501:6:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TellorStorageStruct_$1149_storage",
                          "typeString": "struct TellorGettersLibrary.TellorStorageStruct storage ref"
                        }
                      },
                      "id": 822,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "changeTellorContract",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1353,
                      "src": "501:27:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_TellorStorageStruct_$1149_storage_ptr_$_t_address_$returns$__$bound_to$_t_struct$_TellorStorageStruct_$1149_storage_ptr_$",
                        "typeString": "function (struct TellorGettersLibrary.TellorStorageStruct storage pointer,address)"
                      }
                    },
                    "id": 824,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "501:44:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 825,
                  "nodeType": "ExpressionStatement",
                  "src": "501:44:3"
                }
              ]
            },
            "documentation": null,
            "id": 827,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "changeTellorContract",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 818,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 817,
                  "name": "_tellorContract",
                  "nodeType": "VariableDeclaration",
                  "scope": 827,
                  "src": "458:23:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 816,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "458:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "457:25:3"
            },
            "returnParameters": {
              "id": 819,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "491:0:3"
            },
            "scope": 859,
            "src": "428:124:3",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 838,
              "nodeType": "Block",
              "src": "644:46:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 835,
                        "name": "_newDeity",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 829,
                        "src": "673:9:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 832,
                        "name": "tellor",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 307,
                        "src": "654:6:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TellorStorageStruct_$1149_storage",
                          "typeString": "struct TellorGettersLibrary.TellorStorageStruct storage ref"
                        }
                      },
                      "id": 834,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "changeDeity",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1319,
                      "src": "654:18:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_TellorStorageStruct_$1149_storage_ptr_$_t_address_$returns$__$bound_to$_t_struct$_TellorStorageStruct_$1149_storage_ptr_$",
                        "typeString": "function (struct TellorGettersLibrary.TellorStorageStruct storage pointer,address)"
                      }
                    },
                    "id": 836,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "654:29:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 837,
                  "nodeType": "ExpressionStatement",
                  "src": "654:29:3"
                }
              ]
            },
            "documentation": null,
            "id": 839,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "changeDeity",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 830,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 829,
                  "name": "_newDeity",
                  "nodeType": "VariableDeclaration",
                  "scope": 839,
                  "src": "617:17:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 828,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "617:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "616:19:3"
            },
            "returnParameters": {
              "id": 831,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "644:0:3"
            },
            "scope": 859,
            "src": "596:94:3",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 857,
              "nodeType": "Block",
              "src": "815:635:3",
              "statements": [
                {
                  "assignments": [
                    843
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 843,
                      "name": "addr",
                      "nodeType": "VariableDeclaration",
                      "scope": 857,
                      "src": "825:12:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 842,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "825:7:3",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 850,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 844,
                        "name": "tellor",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 307,
                        "src": "840:6:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TellorStorageStruct_$1149_storage",
                          "typeString": "struct TellorGettersLibrary.TellorStorageStruct storage ref"
                        }
                      },
                      "id": 845,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "addressVars",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1099,
                      "src": "840:18:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_bytes32_$_t_address_$",
                        "typeString": "mapping(bytes32 => address)"
                      }
                    },
                    "id": 849,
                    "indexExpression": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "hexValue": "74656c6c6f72436f6e7472616374",
                          "id": 847,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "869:16:3",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_d48fd09afdab521f4f69bd2af8177f60fb0709ce0f1b3d5b8a2e233a20453848",
                            "typeString": "literal_string \"tellorContract\""
                          },
                          "value": "tellorContract"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_stringliteral_d48fd09afdab521f4f69bd2af8177f60fb0709ce0f1b3d5b8a2e233a20453848",
                            "typeString": "literal_string \"tellorContract\""
                          }
                        ],
                        "id": 846,
                        "name": "keccak256",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7230,
                        "src": "859:9:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                          "typeString": "function (bytes memory) pure returns (bytes32)"
                        }
                      },
                      "id": 848,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "859:27:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "840:47:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "825:62:3"
                },
                {
                  "assignments": [
                    852
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 852,
                      "name": "_calldata",
                      "nodeType": "VariableDeclaration",
                      "scope": 857,
                      "src": "897:22:3",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 851,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "897:5:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 855,
                  "initialValue": {
                    "argumentTypes": null,
                    "expression": {
                      "argumentTypes": null,
                      "id": 853,
                      "name": "msg",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7236,
                      "src": "922:3:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_message",
                        "typeString": "msg"
                      }
                    },
                    "id": 854,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "data",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": null,
                    "src": "922:8:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_calldata_ptr",
                      "typeString": "bytes calldata"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "897:33:3"
                },
                {
                  "externalReferences": [
                    {
                      "addr": {
                        "declaration": 843,
                        "isOffset": false,
                        "isSlot": false,
                        "src": "998:4:3",
                        "valueSize": 1
                      }
                    },
                    {
                      "_calldata": {
                        "declaration": 852,
                        "isOffset": false,
                        "isSlot": false,
                        "src": "1032:9:3",
                        "valueSize": 1
                      }
                    },
                    {
                      "_calldata": {
                        "declaration": 852,
                        "isOffset": false,
                        "isSlot": false,
                        "src": "1008:9:3",
                        "valueSize": 1
                      }
                    }
                  ],
                  "id": 856,
                  "nodeType": "InlineAssembly",
                  "operations": "{\n    let result := delegatecall(not(0), addr, add(_calldata, 0x20), mload(_calldata), 0, 0)\n    let size := returndatasize()\n    let ptr := mload(0x40)\n    returndatacopy(ptr, 0, size)\n    switch result\n    case 0 {\n        revert(ptr, size)\n    }\n    default {\n        return(ptr, size)\n    }\n}",
                  "src": "940:510:3"
                }
              ]
            },
            "documentation": "@dev this fuction allows for delegate calls to the Tellor contract.???",
            "id": 858,
            "implemented": true,
            "kind": "fallback",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 840,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "795:2:3"
            },
            "returnParameters": {
              "id": 841,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "815:0:3"
            },
            "scope": 859,
            "src": "786:664:3",
            "stateMutability": "payable",
            "superFunction": null,
            "visibility": "external"
          }
        ],
        "scope": 860,
        "src": "143:1309:3"
      }
    ],
    "src": "0:1452:3"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.0+commit.1d4f565a.Emscripten.clang"
  },
  "networks": {
    "1557129938815": {
      "events": {
        "0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "name": "_owner",
              "type": "address"
            },
            {
              "indexed": true,
              "name": "_spender",
              "type": "address"
            },
            {
              "indexed": false,
              "name": "_value",
              "type": "uint256"
            }
          ],
          "name": "Approval",
          "type": "event",
          "signature": "0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925"
        },
        "0x6d7f869757848b19c8c2456e95cd98885bc6bed062fda4077bb07985e2f76cc9": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "name": "_sender",
              "type": "address"
            },
            {
              "indexed": false,
              "name": "_query",
              "type": "string"
            },
            {
              "indexed": false,
              "name": "_querySymbol",
              "type": "string"
            },
            {
              "indexed": false,
              "name": "_granularity",
              "type": "uint256"
            },
            {
              "indexed": true,
              "name": "_requestId",
              "type": "uint256"
            },
            {
              "indexed": false,
              "name": "_totalTips",
              "type": "uint256"
            }
          ],
          "name": "DataRequested",
          "type": "event",
          "signature": "0x6d7f869757848b19c8c2456e95cd98885bc6bed062fda4077bb07985e2f76cc9"
        },
        "0x21459c2f5447ebcf83a7f0a238c32c71076faef0d12295e771c0cb1e10434739": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "name": "_disputeID",
              "type": "uint256"
            },
            {
              "indexed": false,
              "name": "_result",
              "type": "int256"
            },
            {
              "indexed": true,
              "name": "_reportedMiner",
              "type": "address"
            },
            {
              "indexed": false,
              "name": "_reportingParty",
              "type": "address"
            },
            {
              "indexed": false,
              "name": "_active",
              "type": "bool"
            }
          ],
          "name": "DisputeVoteTallied",
          "type": "event",
          "signature": "0x21459c2f5447ebcf83a7f0a238c32c71076faef0d12295e771c0cb1e10434739"
        },
        "0x9e959738f09af22daede9ff9563f8edf3f5cec8e17ce60287c911c95fa767f42": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "name": "_currentChallenge",
              "type": "bytes32"
            },
            {
              "indexed": true,
              "name": "_currentRequestId",
              "type": "uint256"
            },
            {
              "indexed": false,
              "name": "_difficulty",
              "type": "uint256"
            },
            {
              "indexed": false,
              "name": "_multiplier",
              "type": "uint256"
            },
            {
              "indexed": false,
              "name": "_query",
              "type": "string"
            },
            {
              "indexed": false,
              "name": "_totalTips",
              "type": "uint256"
            }
          ],
          "name": "NewChallenge",
          "type": "event",
          "signature": "0x9e959738f09af22daede9ff9563f8edf3f5cec8e17ce60287c911c95fa767f42"
        },
        "0xeceec1aebf67772b2440120c4b4dc913a1fe1b865509219f9456785c23b9da64": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "name": "_disputeId",
              "type": "uint256"
            },
            {
              "indexed": true,
              "name": "_requestId",
              "type": "uint256"
            },
            {
              "indexed": false,
              "name": "_timestamp",
              "type": "uint256"
            },
            {
              "indexed": false,
              "name": "_miner",
              "type": "address"
            }
          ],
          "name": "NewDispute",
          "type": "event",
          "signature": "0xeceec1aebf67772b2440120c4b4dc913a1fe1b865509219f9456785c23b9da64"
        },
        "0x5ab383fe3e28263c839564bc7545520a7dd34b78cbd7ab21b2da5d2fd027bf6c": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "name": "_requestId",
              "type": "uint256"
            },
            {
              "indexed": false,
              "name": "_query",
              "type": "string"
            },
            {
              "indexed": false,
              "name": "_onDeckQueryHash",
              "type": "bytes32"
            },
            {
              "indexed": false,
              "name": "_onDeckTotalTips",
              "type": "uint256"
            }
          ],
          "name": "NewRequestOnDeck",
          "type": "event",
          "signature": "0x5ab383fe3e28263c839564bc7545520a7dd34b78cbd7ab21b2da5d2fd027bf6c"
        },
        "0x46d8ab1385f70e5a3673e97c23c764f7600f7ed7a09b6687deae7131d51752e2": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "name": "_sender",
              "type": "address"
            }
          ],
          "name": "NewStake",
          "type": "event",
          "signature": "0x46d8ab1385f70e5a3673e97c23c764f7600f7ed7a09b6687deae7131d51752e2"
        },
        "0xc2d1449eb0b6547aa426e09d9942a77fa4fc8cd3296305b3163e22452e0bcb8d": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "name": "_newTellor",
              "type": "address"
            }
          ],
          "name": "NewTellorAddress",
          "type": "event",
          "signature": "0xc2d1449eb0b6547aa426e09d9942a77fa4fc8cd3296305b3163e22452e0bcb8d"
        },
        "0xc509d04e0782579ee59912139246ccbdf6c36c43abd90591d912017f3467dd16": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "name": "_requestId",
              "type": "uint256"
            },
            {
              "indexed": false,
              "name": "_time",
              "type": "uint256"
            },
            {
              "indexed": false,
              "name": "_value",
              "type": "uint256"
            },
            {
              "indexed": false,
              "name": "_totalTips",
              "type": "uint256"
            },
            {
              "indexed": false,
              "name": "_currentChallenge",
              "type": "bytes32"
            }
          ],
          "name": "NewValue",
          "type": "event",
          "signature": "0xc509d04e0782579ee59912139246ccbdf6c36c43abd90591d912017f3467dd16"
        },
        "0xe6d63a2aee0aaed2ab49702313ce54114f2145af219d7db30d6624af9e6dffc4": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "name": "_miner",
              "type": "address"
            },
            {
              "indexed": false,
              "name": "_nonce",
              "type": "string"
            },
            {
              "indexed": true,
              "name": "_requestId",
              "type": "uint256"
            },
            {
              "indexed": false,
              "name": "_value",
              "type": "uint256"
            },
            {
              "indexed": false,
              "name": "_currentChallenge",
              "type": "bytes32"
            }
          ],
          "name": "NonceSubmitted",
          "type": "event",
          "signature": "0xe6d63a2aee0aaed2ab49702313ce54114f2145af219d7db30d6624af9e6dffc4"
        },
        "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "name": "_previousOwner",
              "type": "address"
            },
            {
              "indexed": true,
              "name": "_newOwner",
              "type": "address"
            }
          ],
          "name": "OwnershipTransferred",
          "type": "event",
          "signature": "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0"
        },
        "0x4a7934670bd8304e7da22378be1368f7c4fef17c5aee81804beda8638fe428ec": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "name": "_sender",
              "type": "address"
            }
          ],
          "name": "StakeWithdrawn",
          "type": "event",
          "signature": "0x4a7934670bd8304e7da22378be1368f7c4fef17c5aee81804beda8638fe428ec"
        },
        "0x453865710d0cb4b14ad25de371c860da196368895daa9662e5087711d14daecf": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "name": "_sender",
              "type": "address"
            }
          ],
          "name": "StakeWithdrawRequested",
          "type": "event",
          "signature": "0x453865710d0cb4b14ad25de371c860da196368895daa9662e5087711d14daecf"
        },
        "0xd32134405b68f6f7220f9c38ae310df1b648d16188006768d45be2f7c24e8820": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "name": "_sender",
              "type": "address"
            },
            {
              "indexed": true,
              "name": "_requestId",
              "type": "uint256"
            },
            {
              "indexed": false,
              "name": "_tip",
              "type": "uint256"
            },
            {
              "indexed": false,
              "name": "_totalTips",
              "type": "uint256"
            }
          ],
          "name": "TipAdded",
          "type": "event",
          "signature": "0xd32134405b68f6f7220f9c38ae310df1b648d16188006768d45be2f7c24e8820"
        },
        "0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "name": "_from",
              "type": "address"
            },
            {
              "indexed": true,
              "name": "_to",
              "type": "address"
            },
            {
              "indexed": false,
              "name": "_value",
              "type": "uint256"
            }
          ],
          "name": "Transfer",
          "type": "event",
          "signature": "0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef"
        },
        "0x86abfce99b7dd908bec0169288797f85049ec73cbe046ed9de818fab3a497ae0": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "name": "_disputeID",
              "type": "uint256"
            },
            {
              "indexed": false,
              "name": "_position",
              "type": "bool"
            },
            {
              "indexed": true,
              "name": "_voter",
              "type": "address"
            }
          ],
          "name": "Voted",
          "type": "event",
          "signature": "0x86abfce99b7dd908bec0169288797f85049ec73cbe046ed9de818fab3a497ae0"
        }
      },
      "links": {
        "TellorGettersLibrary": "0x731A4E84fd77618A758883DDa92323EdD291b313"
      },
      "address": "0x2B63d6e98E66C7e9fe11225Ba349B0B33234D9A2",
      "transactionHash": "0x2ac7adf43ec88c08bdb1678e81b6138ccaa70f2c4d90e714f89524991eb28131"
    }
  },
  "schemaVersion": "3.0.6",
  "updatedAt": "2019-05-06T08:06:36.989Z",
  "devdoc": {
    "methods": {
      "allowance(address,address)": {
        "params": {
          "_spender": "address",
          "_user": "address"
        },
        "return": "Returns the remaining allowance of tokens granted to the _spender from the _user"
      },
      "allowedToTrade(address,uint256)": {
        "details": "This function returns whether or not a given user is allowed to trade a given amount  ",
        "params": {
          "_amount": "uint of amount",
          "_user": "address"
        },
        "return": "true if the user is alloed to trade the amount specified"
      },
      "balanceOf(address)": {
        "details": "Gets balance of owner specified",
        "params": {
          "_user": "is the owner address used to look up the balance"
        },
        "return": "Returns the balance associated with the passed in _user"
      },
      "balanceOfAt(address,uint256)": {
        "details": "Queries the balance of _user at a specific _blockNumber",
        "params": {
          "_blockNumber": "The block number when the balance is queried",
          "_user": "The address from which the balance will be retrieved"
        },
        "return": "The balance at _blockNumber"
      },
      "constructor": {
        "details": "The constructor sets the original `tellorStorageOwner` of the contract to the sender account."
      },
      "didMine(bytes32,address)": {
        "details": "This function tells you if a given challenge has been completed by a given miner",
        "params": {
          "_challenge": "the challenge to search for",
          "_miner": "address that you want to know if they solved the challenge"
        },
        "return": "true if the _miner address provided solved the "
      },
      "didVote(uint256,address)": {
        "details": "Checks if an address voted in a dispute",
        "params": {
          "_address": "to look up",
          "_disputeId": "to look up"
        },
        "return": "bool of whether or not party voted"
      },
      "getAddressVars(bytes32)": {
        "details": "allows Tellor to read data from the addressVars mapping",
        "params": {
          "_data": "is the keccak256(\"variable_name\") of the variable that is being accessed.  These are examples of how the variables are saved within other functions: addressVars[keccak256(\"_owner\")] addressVars[keccak256(\"tellorContract\")]*"
        }
      },
      "getAllDisputeVars(uint256)": {
        "details": "Gets all dispute variables",
        "params": {
          "_disputeId": "to look up"
        },
        "return": "address of reported mineraddress of reporting partydisputed apiIddisputed minimum execution dateuint number of votesuint blockNumber of voteuint index in disputeId arrayint count of the current tallybool of whether vote has been tallied"
      },
      "getCurrentVariables()": {
        "details": "Getter function for variables for the requestId being currently mined(currentRequestId)",
        "return": "current challenge, curretnRequestId, level of difficulty, api/query string, and granularity(number of decimals requested), , total tip for the request "
      },
      "getDisputeIdByDisputeHash(bytes32)": {
        "details": "Checks if a given hash of miner,requestId has been disputed",
        "params": {
          "_hash": "is the sha256(abi.encodePacked(_miners[2],_requestId));"
        },
        "return": "uint disputeId"
      },
      "getDisputeUintVars(uint256,bytes32)": {
        "details": "Checks for uint variables in the disputeUintVars mapping based on the disuputeId",
        "params": {
          "_data": "the variable to pull from the mapping. _data = keccak256(\"variable_name\") where variable_name is  the variables/strings used to save the data in the mapping. The variables names are   commented out under the disputeUintVars under the Dispute struct",
          "_disputeId": "is the dispute id;"
        },
        "return": "uint value for the bytes32 data submitted"
      },
      "getLastNewValue()": {
        "details": "Gets the a value for the latest timestamp available",
        "return": "value for timestamp of last proof of work submited"
      },
      "getMinedBlockNum(uint256,uint256)": {
        "details": "Gets blocknumber for mined timestamp ",
        "params": {
          "_requestId": "to look up",
          "_timestamp": "is the timestamp to look up blocknumber"
        },
        "return": "uint of the blocknumber which the dispute was mined"
      },
      "getMinersByRequestIdAndTimestamp(uint256,uint256)": {
        "details": "Gets the 5 miners who mined the value for the specified requestId/_timestamp ",
        "params": {
          "_requestId": "to look up",
          "_timestamp": "is the timestamp to look up miners for"
        },
        "return": "the 5 miners' addresses"
      },
      "getName()": {
        "details": "Get the name of the token return string of the token name"
      },
      "getNewValueCountbyRequestId(uint256)": {
        "details": "Counts the number of values that have been submited for the request  if called for the currentRequest being mined it can tell you how many miners have submitted a value for that request so far",
        "params": {
          "_requestId": "the requestId to look up"
        },
        "return": "uint count of the number of values received for the requestId"
      },
      "getRequestIdByQueryHash(bytes32)": {
        "details": "Getter function for requestId based on the queryHash",
        "params": {
          "_request": "is the hash(of string api and granularity) to check if a request already exists"
        },
        "return": "uint requestId"
      },
      "getRequestIdByRequestQIndex(uint256)": {
        "details": "Getter function for the specified requestQ index",
        "params": {
          "_index": "to look up in the requestQ array"
        },
        "return": "uint of reqeuestId"
      },
      "getRequestIdByTimestamp(uint256)": {
        "details": "Getter function for requestId based on timestamp ",
        "params": {
          "_timestamp": "to check requestId"
        },
        "return": "uint of reqeuestId"
      },
      "getRequestQ()": {
        "details": "Getter function for the requestQ array",
        "return": "the requestQ arrray"
      },
      "getRequestUintVars(uint256,bytes32)": {
        "details": "Allowes access to the uint variables saved in the apiUintVars under the requestDetails struct for the requestId specified",
        "params": {
          "_data": "the variable to pull from the mapping. _data = keccak256(\"variable_name\") where variable_name is  the variables/strings used to save the data in the mapping. The variables names are   commented out under the apiUintVars under the requestDetails struct",
          "_requestId": "to look up"
        }
      },
      "getRequestVars(uint256)": {
        "details": "Gets the API struct variables that are not mappings",
        "params": {
          "_requestId": "to look up"
        },
        "return": "string of api to querystring of symbol of api to querybytes32 hash of stringbytes32 of the granularity(decimal places) requesteduint of index in requestQ arrayuint of current payout/tip for this requestId"
      },
      "getStakerInfo(address)": {
        "details": "This function allows users to retireve all information about a staker",
        "params": {
          "_staker": "address of staker inquiring about"
        },
        "return": "uint current state of stakeruint startDate of staking"
      },
      "getSubmissionsByTimestamp(uint256,uint256)": {
        "details": "Gets the 5 miners who mined the value for the specified requestId/_timestamp ",
        "params": {
          "_requestId": "to look up",
          "_timestamp": "is the timestampt to look up miners for"
        },
        "return": "address[5] array of 5 addresses ofminers that mined the requestId"
      },
      "getSymbol()": {
        "details": "Get the symbol of the token return string of the token symbol"
      },
      "getTimestampbyRequestIDandIndex(uint256,uint256)": {
        "details": "Gets the timestamp for the value based on their index",
        "params": {
          "_index": "is the value index to look up",
          "_requestID": "is the requestId to look up"
        },
        "return": "uint timestamp"
      },
      "getUintVar(bytes32)": {
        "details": "Getter for the variables saved under the TellorStorageStruct uintVars variable",
        "params": {
          "_data": "the variable to pull from the mapping. _data = keccak256(\"variable_name\") where variable_name is  the variables/strings used to save the data in the mapping. The variables names are   commented out under the uintVars under the TellorStorageStruct struct This is an example of how data is saved into the mapping within other functions:  self.uintVars[keccak256(\"stakerCount\")]"
        },
        "return": "uint of specified variable  "
      },
      "getVariablesOnDeck()": {
        "details": "Getter function for next requestId on queue",
        "return": "onDeckRequestId, onDeckTotaltips, , and API query string"
      },
      "isInDispute(uint256,uint256)": {
        "details": "Gets the 5 miners who mined the value for the specified requestId/_timestamp ",
        "params": {
          "_requestId": "to look up",
          "_timestamp": "is the timestamp to look up miners for"
        },
        "return": "bool true if requestId/timestamp is under dispute"
      },
      "retrieveData(uint256,uint256)": {
        "details": "Retreive value from oracle based on timestamp",
        "params": {
          "_requestId": "being requested",
          "_timestamp": "to retreive data/value from"
        },
        "return": "value for timestamp submitted"
      },
      "totalSupply()": {
        "details": "Getter for the total_supply of oracle tokens",
        "return": "uint total supply"
      }
    }
  },
  "userdoc": {
    "methods": {}
  }
}