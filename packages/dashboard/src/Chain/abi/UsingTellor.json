{
  "contractName": "UsingTellor",
  "abi": [
    {
      "constant": true,
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "name": "_userContract",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "_previousOwner",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "_newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_requestId",
          "type": "uint256"
        }
      ],
      "name": "getCurrentValue",
      "outputs": [
        {
          "name": "ifRetrieve",
          "type": "bool"
        },
        {
          "name": "value",
          "type": "uint256"
        },
        {
          "name": "_timestampRetrieved",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_requestId",
          "type": "uint256"
        },
        {
          "name": "_timestamp",
          "type": "uint256"
        }
      ],
      "name": "getFirstVerifiedDataAfter",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        },
        {
          "name": "",
          "type": "uint256"
        },
        {
          "name": "_timestampRetrieved",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_requestId",
          "type": "uint256"
        },
        {
          "name": "_timestamp",
          "type": "uint256"
        }
      ],
      "name": "getAnyDataAfter",
      "outputs": [
        {
          "name": "_ifRetrieve",
          "type": "bool"
        },
        {
          "name": "_value",
          "type": "uint256"
        },
        {
          "name": "_timestampRetrieved",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_request",
          "type": "string"
        },
        {
          "name": "_symbol",
          "type": "string"
        },
        {
          "name": "_granularity",
          "type": "uint256"
        },
        {
          "name": "_tip",
          "type": "uint256"
        }
      ],
      "name": "requestData",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_request",
          "type": "string"
        },
        {
          "name": "_symbol",
          "type": "string"
        },
        {
          "name": "_granularity",
          "type": "uint256"
        },
        {
          "name": "_tip",
          "type": "uint256"
        }
      ],
      "name": "requestDataWithEther",
      "outputs": [],
      "payable": true,
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_requestId",
          "type": "uint256"
        },
        {
          "name": "_tip",
          "type": "uint256"
        }
      ],
      "name": "addTip",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_requestId",
          "type": "uint256"
        },
        {
          "name": "_tip",
          "type": "uint256"
        }
      ],
      "name": "addTipWithEther",
      "outputs": [],
      "payable": true,
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_userContract",
          "type": "address"
        }
      ],
      "name": "setUserContract",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.5.8+commit.23d335f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":true,\"inputs\":[{\"name\":\"_requestId\",\"type\":\"uint256\"}],\"name\":\"getCurrentValue\",\"outputs\":[{\"name\":\"ifRetrieve\",\"type\":\"bool\"},{\"name\":\"value\",\"type\":\"uint256\"},{\"name\":\"_timestampRetrieved\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_request\",\"type\":\"string\"},{\"name\":\"_symbol\",\"type\":\"string\"},{\"name\":\"_granularity\",\"type\":\"uint256\"},{\"name\":\"_tip\",\"type\":\"uint256\"}],\"name\":\"requestData\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_request\",\"type\":\"string\"},{\"name\":\"_symbol\",\"type\":\"string\"},{\"name\":\"_granularity\",\"type\":\"uint256\"},{\"name\":\"_tip\",\"type\":\"uint256\"}],\"name\":\"requestDataWithEther\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_requestId\",\"type\":\"uint256\"},{\"name\":\"_timestamp\",\"type\":\"uint256\"}],\"name\":\"getFirstVerifiedDataAfter\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"},{\"name\":\"\",\"type\":\"uint256\"},{\"name\":\"_timestampRetrieved\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_requestId\",\"type\":\"uint256\"},{\"name\":\"_tip\",\"type\":\"uint256\"}],\"name\":\"addTip\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_userContract\",\"type\":\"address\"}],\"name\":\"setUserContract\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_requestId\",\"type\":\"uint256\"},{\"name\":\"_timestamp\",\"type\":\"uint256\"}],\"name\":\"getAnyDataAfter\",\"outputs\":[{\"name\":\"_ifRetrieve\",\"type\":\"bool\"},{\"name\":\"_value\",\"type\":\"uint256\"},{\"name\":\"_timestampRetrieved\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_requestId\",\"type\":\"uint256\"},{\"name\":\"_tip\",\"type\":\"uint256\"}],\"name\":\"addTipWithEther\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"_userContract\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"_previousOwner\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"}],\"devdoc\":{\"methods\":{\"addTip(uint256,uint256)\":{\"details\":\"Allows the user to tip miners for the specified request using Tributes\",\"params\":{\"_requestId\":\"to tip\",\"_tip\":\"amount\"}},\"addTipWithEther(uint256,uint256)\":{\"details\":\"Allows user to add tip with Ether by sending the ETH to the userContract and exchanging it for Tributes at the price specified by the userContract owner.\",\"params\":{\"_requestId\":\"to tip\",\"_tip\":\"amount\"}},\"constructor\":{\"details\":\"This function sents the owner and userContract address\",\"params\":{\"_userContract\":\"is the UserContract.sol address\"}},\"getAnyDataAfter(uint256,uint256)\":{\"details\":\"Allows the user to get the first value for the requestId after the specified timestamp\",\"params\":{\"_requestId\":\"is the requestId to look up the value for\",\"_timestamp\":\"after which to search for first verified value\"},\"return\":\"bool true if it is able to retreive a value, the value, and the value's timestamp\"},\"getCurrentValue(uint256)\":{\"details\":\"Allows the user to get the latest value for the requestId specified\",\"params\":{\"_requestId\":\"is the requestId to look up the value for\"},\"return\":\"bool true if it is able to retreive a value, the value, and the value's timestamp\"},\"getFirstVerifiedDataAfter(uint256,uint256)\":{\"details\":\"Allows the user to get the first verified value for the requestId after the specified timestamp\",\"params\":{\"_requestId\":\"is the requestId to look up the value for\",\"_timestamp\":\"after which to search for first verified value\"},\"return\":\"bool true if it is able to retreive a value, the value, and the value's timestamp, the timestamp after which it searched for the first verified value\"},\"requestData(string,string,uint256,uint256)\":{\"details\":\"Allows the user to submit a request for data to the oracle using Tributes Allowing this prevents us from increasing spread too high (since if we set the price too hight users will just go to an exchange and get tokens from there)\",\"params\":{\"_granularity\":\"is the number of decimals miners should include on the submitted value\",\"_request\":\"string API being requested to be mined\",\"_symbol\":\"is the short string symbol for the api request\",\"_tip\":\"amount the requester is willing to pay to be get on queue. Miners mine the onDeckQueryHash, or the api with the highest payout pool\"}},\"requestDataWithEther(string,string,uint256,uint256)\":{\"details\":\"Allows the user to submit a request for data to the oracle using ETH\",\"params\":{\"_granularity\":\"is the number of decimals miners should include on the submitted value\",\"_request\":\"string API being requested to be mined\",\"_symbol\":\"is the short string symbol for the api request\",\"_tip\":\"amount the requester is willing to pay to be get on queue. Miners mine the onDeckQueryHash, or the api with the highest payout pool\"}},\"setUserContract(address)\":{\"details\":\"allows owner to set the user contract address\",\"params\":{\"_userContract\":\"address\"}},\"transferOwnership(address)\":{\"details\":\"allows owner to transfer ownership\",\"params\":{\"_newOwner\":\"address\"}}},\"title\":\"UsingTellor This contracts creates for easy integration to the Tellor Tellor System\"},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"/Users/mdcoon/git/TellorCore/contracts/userFiles/UsingTellor.sol\":\"UsingTellor\"},\"evmVersion\":\"petersburg\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/Users/mdcoon/git/TellorCore/contracts/Tellor.sol\":{\"keccak256\":\"0xbbe523c169286fd40837209c56db4c95810d55a770ccae249e2165237c72e794\",\"urls\":[\"bzzr://c5a9c13ba66e4d850a4bd78509adf4d6a60317ee825094a47e91d89e0ece55c4\"]},\"/Users/mdcoon/git/TellorCore/contracts/TellorGetters.sol\":{\"keccak256\":\"0x80d17c85e3f15a9f94661b141f44b5b40302e75b5a038cccef1006bab8ff12a9\",\"urls\":[\"bzzr://bef39b25be640e7a4a38c89236deac83d195cad94045724b0abbe6a29b31a868\"]},\"/Users/mdcoon/git/TellorCore/contracts/TellorMaster.sol\":{\"keccak256\":\"0x067f075f9c8354a50c73352f6ed39349d9bd9124952ba8bb3cad14b1b80a8e1b\",\"urls\":[\"bzzr://694e2a77175763773dda8d5c39a16d83009310f7f0e5b7a58de81feec7ed5c23\"]},\"/Users/mdcoon/git/TellorCore/contracts/libraries/SafeMath.sol\":{\"keccak256\":\"0x0231a344c6dd588804879d1f7be0f1fe3b2e8f3b3e90e47c61b5012122917f5e\",\"urls\":[\"bzzr://1fab8d3512b4a6af21edc4d51047d809882999b8a02230d44ed5d723fc234c62\"]},\"/Users/mdcoon/git/TellorCore/contracts/libraries/TellorDispute.sol\":{\"keccak256\":\"0x192d07730a2ebc3380d7d2bc4138558a47e29e59db6a0abfc0e71fa002a5f7eb\",\"urls\":[\"bzzr://4aa1ba1c2a6db42bc8dafb3af372627de9bf78beefb26df3020bded8ed06097d\"]},\"/Users/mdcoon/git/TellorCore/contracts/libraries/TellorGettersLibrary.sol\":{\"keccak256\":\"0x2036c4c41dbf50893b91c17e7f49228e5981610598d8d315a04b46ce56a06b3d\",\"urls\":[\"bzzr://a03069761177e6fdb25156ecdd9129dcf5354f6bc965446c89f528919d1d26ed\"]},\"/Users/mdcoon/git/TellorCore/contracts/libraries/TellorLibrary.sol\":{\"keccak256\":\"0x439bdd80e1c593513074075118e77b83b283140a8d881bc21831f393c8608136\",\"urls\":[\"bzzr://3194d0402449a63e0725f1c14b579dc7224ed8b6fa4038792433b8879f511acd\"]},\"/Users/mdcoon/git/TellorCore/contracts/libraries/TellorStake.sol\":{\"keccak256\":\"0x8d87f36fe79eda90490140970e34e95b5dc5439ef140c530d46c3f5510fa05d8\",\"urls\":[\"bzzr://b08aabeb106650e219d7073d9671a8972cf4b3c93c09c47036e52d0f32eeeec6\"]},\"/Users/mdcoon/git/TellorCore/contracts/libraries/TellorStorage.sol\":{\"keccak256\":\"0x896d6e467dad53caf544c18342b1c31848e1c914096f5a246cfc9aeafa653a02\",\"urls\":[\"bzzr://f628c3feb7a819f8926644b6898c969d0679ecf7575bad9f36f3e7ac278b64f2\"]},\"/Users/mdcoon/git/TellorCore/contracts/libraries/TellorTransfer.sol\":{\"keccak256\":\"0x3209d8cf6f4249f88789e471222ad8db113e30c2c6db8817ea57d607ecc3540f\",\"urls\":[\"bzzr://458584f13777e33e02d19b534b82ab76fc19b7620a6c4d7b1555f12191b8f208\"]},\"/Users/mdcoon/git/TellorCore/contracts/libraries/Utilities.sol\":{\"keccak256\":\"0x3d77df89f5b82b9d911b6269a67cf34efa168edd07501b8e71a971c8c83ddcb0\",\"urls\":[\"bzzr://2c49e5c10172e7a9d741485cf80cdb71867e725056200ac2331271d09b018261\"]},\"/Users/mdcoon/git/TellorCore/contracts/userFiles/UserContract.sol\":{\"keccak256\":\"0x0ed2fb4601de1307c8a7be6083944c39c4dc9642d92171257428c113cc58c4fb\",\"urls\":[\"bzzr://33fe971bfb46192f195ea457655c56ce2e9c07975e3d33a4872cf22e0ed487ad\"]},\"/Users/mdcoon/git/TellorCore/contracts/userFiles/UsingTellor.sol\":{\"keccak256\":\"0x8d004f93bd54a08ef9a28beb777e9f929fcc850b5a01d2f96403cf8bfd434b2e\",\"urls\":[\"bzzr://e62e41d3380e445350057ee1ee5343a068b810a20c280c18da9b47239df8fa8d\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b506040516020806112a78339810180604052602081101561003057600080fd5b8101908080519060200190929190505050806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555033600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550506111d5806100d26000396000f3fe6080604052600436106100915760003560e01c80638da5cb5b116100595780638da5cb5b14610378578063a1206d4e146103cf578063d269a83c14610420578063e723e3b51461048b578063f2fde38b146104c357610091565b80633fcad964146100965780633fff2816146100f75780634482e6f3146101e65780635f059f3e146102c8578063752d49a114610333575b600080fd5b3480156100a257600080fd5b506100cf600480360360208110156100b957600080fd5b8101908080359060200190929190505050610514565b6040518084151515158152602001838152602001828152602001935050505060405180910390f35b34801561010357600080fd5b506101e46004803603608081101561011a57600080fd5b810190808035906020019064010000000081111561013757600080fd5b82018360208201111561014957600080fd5b8035906020019184600183028401116401000000008311171561016b57600080fd5b90919293919293908035906020019064010000000081111561018c57600080fd5b82018360208201111561019e57600080fd5b803590602001918460018302840111640100000000831117156101c057600080fd5b909192939192939080359060200190929190803590602001909291905050506105e7565b005b6102c6600480360360808110156101fc57600080fd5b810190808035906020019064010000000081111561021957600080fd5b82018360208201111561022b57600080fd5b8035906020019184600183028401116401000000008311171561024d57600080fd5b90919293919293908035906020019064010000000081111561026e57600080fd5b82018360208201111561028057600080fd5b803590602001918460018302840111640100000000831117156102a257600080fd5b909192939192939080359060200190929190803590602001909291905050506108e3565b005b3480156102d457600080fd5b5061030b600480360360408110156102eb57600080fd5b8101908080359060200190929190803590602001909291905050506109e8565b6040518084151515158152602001838152602001828152602001935050505060405180910390f35b34801561033f57600080fd5b506103766004803603604081101561035657600080fd5b810190808035906020019092919080359060200190929190505050610ac3565b005b34801561038457600080fd5b5061038d610d49565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156103db57600080fd5b5061041e600480360360208110156103f257600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610d6f565b005b34801561042c57600080fd5b506104636004803603604081101561044357600080fd5b810190808035906020019092919080359060200190929190505050610e75565b6040518084151515158152602001838152602001828152602001935050505060405180910390f35b6104c1600480360360408110156104a157600080fd5b810190808035906020019092919080359060200190929190505050610f50565b005b3480156104cf57600080fd5b50610512600480360360208110156104e657600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610fe9565b005b60008060008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16633fcad964856040518263ffffffff1660e01b81526004018082815260200191505060606040518083038186803b15801561058b57600080fd5b505afa15801561059f573d6000803e3d6000fd5b505050506040513d60608110156105b557600080fd5b810190808051906020019092919080519060200190929190805190602001909291905050509250925092509193909250565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a80209736040518163ffffffff1660e01b815260040160206040518083038186803b15801561065057600080fd5b505afa158015610664573d6000803e3d6000fd5b505050506040513d602081101561067a57600080fd5b8101908080519060200190929190505050905060008211156107ff578073ffffffffffffffffffffffffffffffffffffffff166323b872dd3330856040518463ffffffff1660e01b8152600401808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019350505050602060405180830381600087803b15801561075157600080fd5b505af1158015610765573d6000803e3d6000fd5b505050506040513d602081101561077b57600080fd5b81019080805190602001909291905050506107fe576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600f8152602001807f5472616e73666572206661696c6564000000000000000000000000000000000081525060200191505060405180910390fd5b5b8073ffffffffffffffffffffffffffffffffffffffff16633fff28168888888888886040518763ffffffff1660e01b81526004018080602001806020018581526020018481526020018381038352898982818152602001925080828437600081840152601f19601f8201169050808301925050508381038252878782818152602001925080828437600081840152601f19601f82011690508083019250505098505050505050505050600060405180830381600087803b1580156108c257600080fd5b505af11580156108d6573d6000803e3d6000fd5b5050505050505050505050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16634482e6f3348888888888886040518863ffffffff1660e01b81526004018080602001806020018581526020018481526020018381038352898982818152602001925080828437600081840152601f19601f8201169050808301925050508381038252878782818152602001925080828437600081840152601f19601f820116905080830192505050985050505050505050506000604051808303818588803b1580156109c757600080fd5b505af11580156109db573d6000803e3d6000fd5b5050505050505050505050565b60008060008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16635f059f3e86866040518363ffffffff1660e01b8152600401808381526020018281526020019250505060606040518083038186803b158015610a6757600080fd5b505afa158015610a7b573d6000803e3d6000fd5b505050506040513d6060811015610a9157600080fd5b810190808051906020019092919080519060200190929190805190602001909291905050509250925092509250925092565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a80209736040518163ffffffff1660e01b815260040160206040518083038186803b158015610b2c57600080fd5b505afa158015610b40573d6000803e3d6000fd5b505050506040513d6020811015610b5657600080fd5b810190808051906020019092919050505090508073ffffffffffffffffffffffffffffffffffffffff166323b872dd3330856040518463ffffffff1660e01b8152600401808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019350505050602060405180830381600087803b158015610c2457600080fd5b505af1158015610c38573d6000803e3d6000fd5b505050506040513d6020811015610c4e57600080fd5b8101908080519060200190929190505050610cd1576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600f8152602001807f5472616e73666572206661696c6564000000000000000000000000000000000081525060200191505060405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff1663752d49a184846040518363ffffffff1660e01b81526004018083815260200182815260200192505050600060405180830381600087803b158015610d2c57600080fd5b505af1158015610d40573d6000803e3d6000fd5b50505050505050565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610e32576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260138152602001807f53656e646572206973206e6f74206f776e65720000000000000000000000000081525060200191505060405180910390fd5b806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60008060008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663d269a83c86866040518363ffffffff1660e01b8152600401808381526020018281526020019250505060606040518083038186803b158015610ef457600080fd5b505afa158015610f08573d6000803e3d6000fd5b505050506040513d6060811015610f1e57600080fd5b810190808051906020019092919080519060200190929190805190602001909291905050509250925092509250925092565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663e723e3b53484846040518463ffffffff1660e01b815260040180838152602001828152602001925050506000604051808303818588803b158015610fcc57600080fd5b505af1158015610fe0573d6000803e3d6000fd5b50505050505050565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146110ac576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260138152602001807f53656e646572206973206e6f74206f776e65720000000000000000000000000081525060200191505060405180910390fd5b7f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1682604051808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019250505060405180910390a180600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505056fea165627a7a723058202c172ad1f076201276ae05c35fbddc43a8a8e842c6016599bbdd193760a33bb70029",
  "deployedBytecode": "0x6080604052600436106100915760003560e01c80638da5cb5b116100595780638da5cb5b14610378578063a1206d4e146103cf578063d269a83c14610420578063e723e3b51461048b578063f2fde38b146104c357610091565b80633fcad964146100965780633fff2816146100f75780634482e6f3146101e65780635f059f3e146102c8578063752d49a114610333575b600080fd5b3480156100a257600080fd5b506100cf600480360360208110156100b957600080fd5b8101908080359060200190929190505050610514565b6040518084151515158152602001838152602001828152602001935050505060405180910390f35b34801561010357600080fd5b506101e46004803603608081101561011a57600080fd5b810190808035906020019064010000000081111561013757600080fd5b82018360208201111561014957600080fd5b8035906020019184600183028401116401000000008311171561016b57600080fd5b90919293919293908035906020019064010000000081111561018c57600080fd5b82018360208201111561019e57600080fd5b803590602001918460018302840111640100000000831117156101c057600080fd5b909192939192939080359060200190929190803590602001909291905050506105e7565b005b6102c6600480360360808110156101fc57600080fd5b810190808035906020019064010000000081111561021957600080fd5b82018360208201111561022b57600080fd5b8035906020019184600183028401116401000000008311171561024d57600080fd5b90919293919293908035906020019064010000000081111561026e57600080fd5b82018360208201111561028057600080fd5b803590602001918460018302840111640100000000831117156102a257600080fd5b909192939192939080359060200190929190803590602001909291905050506108e3565b005b3480156102d457600080fd5b5061030b600480360360408110156102eb57600080fd5b8101908080359060200190929190803590602001909291905050506109e8565b6040518084151515158152602001838152602001828152602001935050505060405180910390f35b34801561033f57600080fd5b506103766004803603604081101561035657600080fd5b810190808035906020019092919080359060200190929190505050610ac3565b005b34801561038457600080fd5b5061038d610d49565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156103db57600080fd5b5061041e600480360360208110156103f257600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610d6f565b005b34801561042c57600080fd5b506104636004803603604081101561044357600080fd5b810190808035906020019092919080359060200190929190505050610e75565b6040518084151515158152602001838152602001828152602001935050505060405180910390f35b6104c1600480360360408110156104a157600080fd5b810190808035906020019092919080359060200190929190505050610f50565b005b3480156104cf57600080fd5b50610512600480360360208110156104e657600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610fe9565b005b60008060008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16633fcad964856040518263ffffffff1660e01b81526004018082815260200191505060606040518083038186803b15801561058b57600080fd5b505afa15801561059f573d6000803e3d6000fd5b505050506040513d60608110156105b557600080fd5b810190808051906020019092919080519060200190929190805190602001909291905050509250925092509193909250565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a80209736040518163ffffffff1660e01b815260040160206040518083038186803b15801561065057600080fd5b505afa158015610664573d6000803e3d6000fd5b505050506040513d602081101561067a57600080fd5b8101908080519060200190929190505050905060008211156107ff578073ffffffffffffffffffffffffffffffffffffffff166323b872dd3330856040518463ffffffff1660e01b8152600401808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019350505050602060405180830381600087803b15801561075157600080fd5b505af1158015610765573d6000803e3d6000fd5b505050506040513d602081101561077b57600080fd5b81019080805190602001909291905050506107fe576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600f8152602001807f5472616e73666572206661696c6564000000000000000000000000000000000081525060200191505060405180910390fd5b5b8073ffffffffffffffffffffffffffffffffffffffff16633fff28168888888888886040518763ffffffff1660e01b81526004018080602001806020018581526020018481526020018381038352898982818152602001925080828437600081840152601f19601f8201169050808301925050508381038252878782818152602001925080828437600081840152601f19601f82011690508083019250505098505050505050505050600060405180830381600087803b1580156108c257600080fd5b505af11580156108d6573d6000803e3d6000fd5b5050505050505050505050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16634482e6f3348888888888886040518863ffffffff1660e01b81526004018080602001806020018581526020018481526020018381038352898982818152602001925080828437600081840152601f19601f8201169050808301925050508381038252878782818152602001925080828437600081840152601f19601f820116905080830192505050985050505050505050506000604051808303818588803b1580156109c757600080fd5b505af11580156109db573d6000803e3d6000fd5b5050505050505050505050565b60008060008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16635f059f3e86866040518363ffffffff1660e01b8152600401808381526020018281526020019250505060606040518083038186803b158015610a6757600080fd5b505afa158015610a7b573d6000803e3d6000fd5b505050506040513d6060811015610a9157600080fd5b810190808051906020019092919080519060200190929190805190602001909291905050509250925092509250925092565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a80209736040518163ffffffff1660e01b815260040160206040518083038186803b158015610b2c57600080fd5b505afa158015610b40573d6000803e3d6000fd5b505050506040513d6020811015610b5657600080fd5b810190808051906020019092919050505090508073ffffffffffffffffffffffffffffffffffffffff166323b872dd3330856040518463ffffffff1660e01b8152600401808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019350505050602060405180830381600087803b158015610c2457600080fd5b505af1158015610c38573d6000803e3d6000fd5b505050506040513d6020811015610c4e57600080fd5b8101908080519060200190929190505050610cd1576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600f8152602001807f5472616e73666572206661696c6564000000000000000000000000000000000081525060200191505060405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff1663752d49a184846040518363ffffffff1660e01b81526004018083815260200182815260200192505050600060405180830381600087803b158015610d2c57600080fd5b505af1158015610d40573d6000803e3d6000fd5b50505050505050565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610e32576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260138152602001807f53656e646572206973206e6f74206f776e65720000000000000000000000000081525060200191505060405180910390fd5b806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60008060008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663d269a83c86866040518363ffffffff1660e01b8152600401808381526020018281526020019250505060606040518083038186803b158015610ef457600080fd5b505afa158015610f08573d6000803e3d6000fd5b505050506040513d6060811015610f1e57600080fd5b810190808051906020019092919080519060200190929190805190602001909291905050509250925092509250925092565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663e723e3b53484846040518463ffffffff1660e01b815260040180838152602001828152602001925050506000604051808303818588803b158015610fcc57600080fd5b505af1158015610fe0573d6000803e3d6000fd5b50505050505050565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146110ac576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260138152602001807f53656e646572206973206e6f74206f776e65720000000000000000000000000081525060200191505060405180910390fd5b7f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1682604051808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019250505060405180910390a180600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505056fea165627a7a723058202c172ad1f076201276ae05c35fbddc43a8a8e842c6016599bbdd193760a33bb70029",
  "sourceMap": "210:5535:28:-;;;545:135;8:9:-1;5:2;;;30:1;27;20:12;5:2;545:135:28;;;;;;;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;545:135:28;;;;;;;;;;;;;;;;631:13;597:18;;:48;;;;;;;;;;;;;;;;;;663:10;655:5;;:18;;;;;;;;;;;;;;;;;;545:135;210:5535;;;;;;",
  "deployedSourceMap": "210:5535:28:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;960:197;;8:9:-1;5:2;;;30:1;27;20:12;5:2;960:197:28;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;960:197:28;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3138:397;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3138:397:28;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;3138:397:28;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;3138:397:28;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;3138:397:28;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;3138:397:28;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;3138:397:28;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;3138:397:28;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;3138:397:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;4018:246;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;4018:246:28;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;4018:246:28;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;4018:246:28;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;4018:246:28;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;4018:246:28;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;4018:246:28;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;4018:246:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;1639:232;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1639:232:28;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1639:232:28;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4423:273;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4423:273:28;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;4423:273:28;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;274:28;;8:9:-1;5:2;;;30:1;27;20:12;5:2;274:28:28;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;5231:203;;8:9:-1;5:2;;;30:1;27;20:12;5:2;5231:203:28;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;5231:203:28;;;;;;;;;;;;;;;;;;;:::i;:::-;;2223:259;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2223:259:28;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2223:259:28;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4944:174;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;4944:174:28;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;5532:211;;8:9:-1;5:2;;;30:1;27;20:12;5:2;5532:211:28;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;5532:211:28;;;;;;;;;;;;;;;;;;;:::i;:::-;;960:197;1026:15;1043:13;1058:27;1104:18;;;;;;;;;;;:34;;;1139:10;1104:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1104:46:28;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1104:46:28;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1104:46:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1097:53;;;;;;960:197;;;;;:::o;3138:397::-;3265:14;3289:18;;;;;;;;;;;:39;;;:41;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3289:41:28;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;3289:41:28;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;3289:41:28;;;;;;;;;;;;;;;;3265:66;;3352:1;3345:4;:8;3341:120;;;3377:7;:20;;;3398:10;3418:4;3425;3377:53;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3377:53:28;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;3377:53:28;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;3377:53:28;;;;;;;;;;;;;;;;3369:81;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3341:120;3470:7;:19;;;3490:8;;3500:7;;3509:12;3523:4;3470:58;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;3470:58:28;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;3470:58:28;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3470:58:28;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;3470:58:28;;;;3138:397;;;;;;;:::o;4018:246::-;4162:18;;;;;;;;;;;:39;;;4208:9;4219:8;;4229:7;;4238:12;4252:4;4162:95;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;4162:95:28;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;4162:95:28;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4162:95:28;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;4162:95:28;;;;;4018:246;;;;;;:::o;1639:232::-;1735:4;1741:7;1750:27;1796:18;;;;;;;;;;;:44;;;1841:10;1853;1796:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1796:68:28;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1796:68:28;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1796:68:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1789:75;;;;;;1639:232;;;;;:::o;4423:273::-;4490:14;4514:18;;;;;;;;;;;:39;;;:41;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4514:41:28;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;4514:41:28;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;4514:41:28;;;;;;;;;;;;;;;;4490:66;;4574:7;:20;;;4595:10;4615:4;4622;4574:53;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4574:53:28;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;4574:53:28;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;4574:53:28;;;;;;;;;;;;;;;;4566:81;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4657:7;:14;;;4672:10;4684:4;4657:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4657:32:28;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;4657:32:28;;;;4423:273;;;:::o;274:28::-;;;;;;;;;;;;;:::o;5231:203::-;5318:5;;;;;;;;;;;5304:19;;:10;:19;;;5296:51;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5413:13;5379:18;;:48;;;;;;;;;;;;;;;;;;5231:203;:::o;2223:259::-;2333:16;2351:14;2367:27;2417:18;;;;;;;;;;;:34;;;2452:10;2464;2417:58;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2417:58:28;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2417:58:28;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2417:58:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2410:65;;;;;;2223:259;;;;;:::o;4944:174::-;5041:18;;;;;;;;;;;5028:48;;;5083:9;5094:10;5106:4;5028:83;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;5028:83:28;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;5028:83:28;;;;;4944:174;;:::o;5532:211::-;5627:5;;;;;;;;;;;5613:19;;:10;:19;;;5605:51;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5671:38;5692:5;;;;;;;;;;;5699:9;5671:38;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5727:9;5719:5;;:17;;;;;;;;;;;;;;;;;;5532:211;:::o",
  "source": "pragma solidity ^0.5.0;\n\nimport \"../Tellor.sol\";\nimport \"../TellorMaster.sol\";\nimport \"./UserContract.sol\";\n/**\n* @title UsingTellor\n* This contracts creates for easy integration to the Tellor Tellor System\n*/\ncontract UsingTellor {\n    UserContract tellorUserContract;\n    address payable public owner;\n\n    event OwnershipTransferred(address _previousOwner, address _newOwner);\n\n    /*Constructor*/\n    /**\n    * @dev This function sents the owner and userContract address\n    * @param _userContract is the UserContract.sol address\n    */\n    constructor(address _userContract) public {\n        tellorUserContract = UserContract(_userContract);\n        owner = msg.sender;\n    }\n\n    /*Functions*/\n    /**\n    * @dev Allows the user to get the latest value for the requestId specified\n    * @param _requestId is the requestId to look up the value for\n    * @return bool true if it is able to retreive a value, the value, and the value's timestamp\n    */\n    function getCurrentValue(uint256 _requestId) public view returns (bool ifRetrieve, uint256 value, uint256 _timestampRetrieved) {\n        return tellorUserContract.getCurrentValue(_requestId);\n    }\n\n    //How can we make this one more efficient?\n    /**\n    * @dev Allows the user to get the first verified value for the requestId after the specified timestamp\n    * @param _requestId is the requestId to look up the value for\n    * @param _timestamp after which to search for first verified value\n    * @return bool true if it is able to retreive a value, the value, and the value's timestamp, the timestamp after\n    * which it searched for the first verified value\n    */\n    function getFirstVerifiedDataAfter(uint256 _requestId, uint256 _timestamp) public view returns (bool, uint256, uint256 _timestampRetrieved) {\n        return tellorUserContract.getFirstVerifiedDataAfter(_requestId, _timestamp);\n    }\n\n    /**\n    * @dev Allows the user to get the first value for the requestId after the specified timestamp\n    * @param _requestId is the requestId to look up the value for\n    * @param _timestamp after which to search for first verified value\n    * @return bool true if it is able to retreive a value, the value, and the value's timestamp\n    */\n    function getAnyDataAfter(uint256 _requestId, uint256 _timestamp)\n        public\n        view\n        returns (bool _ifRetrieve, uint256 _value, uint256 _timestampRetrieved)\n    {\n        return tellorUserContract.getAnyDataAfter(_requestId, _timestamp);\n    }\n\n    /**\n    * @dev Allows the user to submit a request for data to the oracle using Tributes\n    * Allowing this prevents us from increasing spread too high (since if we set the price too hight\n    * users will just go to an exchange and get tokens from there)\n    * @param _request string API being requested to be mined\n    * @param _symbol is the short string symbol for the api request\n    * @param _granularity is the number of decimals miners should include on the submitted value\n    * @param _tip amount the requester is willing to pay to be get on queue. Miners\n    * mine the onDeckQueryHash, or the api with the highest payout pool\n    */\n    function requestData(string calldata _request, string calldata _symbol, uint256 _granularity, uint256 _tip) external {\n        Tellor _tellor = Tellor(tellorUserContract.tellorStorageAddress());\n        if (_tip > 0) {\n            require(_tellor.transferFrom(msg.sender, address(this), _tip), \"Transfer failed\");\n        }\n        _tellor.requestData(_request, _symbol, _granularity, _tip);\n    }\n\n    /**\n    * @dev Allows the user to submit a request for data to the oracle using ETH\n    * @param _request string API being requested to be mined\n    * @param _symbol is the short string symbol for the api request\n    * @param _granularity is the number of decimals miners should include on the submitted value\n    * @param _tip amount the requester is willing to pay to be get on queue. Miners\n    * mine the onDeckQueryHash, or the api with the highest payout pool\n    */\n    function requestDataWithEther(string calldata _request, string calldata _symbol, uint256 _granularity, uint256 _tip) external payable {\n        tellorUserContract.requestDataWithEther.value(msg.value)(_request, _symbol, _granularity, _tip);\n    }\n\n    /**\n    * @dev Allows the user to tip miners for the specified request using Tributes\n    * @param _requestId to tip\n    * @param _tip amount\n    */\n    function addTip(uint256 _requestId, uint256 _tip) public {\n        Tellor _tellor = Tellor(tellorUserContract.tellorStorageAddress());\n        require(_tellor.transferFrom(msg.sender, address(this), _tip), \"Transfer failed\");\n        _tellor.addTip(_requestId, _tip);\n    }\n\n    /**\n    * @dev Allows user to add tip with Ether by sending the ETH to the userContract and exchanging it for Tributes\n    * at the price specified by the userContract owner.\n    * @param _requestId to tip\n    * @param _tip amount\n    */\n    function addTipWithEther(uint256 _requestId, uint256 _tip) public payable {\n        UserContract(tellorUserContract).addTipWithEther.value(msg.value)(_requestId, _tip);\n    }\n\n    /**\n    * @dev allows owner to set the user contract address\n    * @param _userContract address\n    */\n    function setUserContract(address _userContract) public {\n        require(msg.sender == owner, \"Sender is not owner\"); //who should this be?\n        tellorUserContract = UserContract(_userContract);\n    }\n\n    /**\n    * @dev allows owner to transfer ownership\n    * @param _newOwner address\n    */\n    function transferOwnership(address payable _newOwner) external {\n        require(msg.sender == owner, \"Sender is not owner\");\n        emit OwnershipTransferred(owner, _newOwner);\n        owner = _newOwner;\n    }\n}\n",
  "sourcePath": "/Users/mdcoon/git/TellorCore/contracts/userFiles/UsingTellor.sol",
  "ast": {
    "absolutePath": "/Users/mdcoon/git/TellorCore/contracts/userFiles/UsingTellor.sol",
    "exportedSymbols": {
      "UsingTellor": [
        12901
      ]
    },
    "id": 12902,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 12641,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:28"
      },
      {
        "absolutePath": "/Users/mdcoon/git/TellorCore/contracts/Tellor.sol",
        "file": "../Tellor.sol",
        "id": 12642,
        "nodeType": "ImportDirective",
        "scope": 12902,
        "sourceUnit": 317,
        "src": "25:23:28",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/mdcoon/git/TellorCore/contracts/TellorMaster.sol",
        "file": "../TellorMaster.sol",
        "id": 12643,
        "nodeType": "ImportDirective",
        "scope": 12902,
        "sourceUnit": 927,
        "src": "49:29:28",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/mdcoon/git/TellorCore/contracts/userFiles/UserContract.sol",
        "file": "./UserContract.sol",
        "id": 12644,
        "nodeType": "ImportDirective",
        "scope": 12902,
        "sourceUnit": 12640,
        "src": "79:28:28",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": "@title UsingTellor\nThis contracts creates for easy integration to the Tellor Tellor System",
        "fullyImplemented": true,
        "id": 12901,
        "linearizedBaseContracts": [
          12901
        ],
        "name": "UsingTellor",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 12646,
            "name": "tellorUserContract",
            "nodeType": "VariableDeclaration",
            "scope": 12901,
            "src": "237:31:28",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_UserContract_$12639",
              "typeString": "contract UserContract"
            },
            "typeName": {
              "contractScope": null,
              "id": 12645,
              "name": "UserContract",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 12639,
              "src": "237:12:28",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_UserContract_$12639",
                "typeString": "contract UserContract"
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 12648,
            "name": "owner",
            "nodeType": "VariableDeclaration",
            "scope": 12901,
            "src": "274:28:28",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address_payable",
              "typeString": "address payable"
            },
            "typeName": {
              "id": 12647,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "274:15:28",
              "stateMutability": "payable",
              "typeDescriptions": {
                "typeIdentifier": "t_address_payable",
                "typeString": "address payable"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 12654,
            "name": "OwnershipTransferred",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 12653,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 12650,
                  "indexed": false,
                  "name": "_previousOwner",
                  "nodeType": "VariableDeclaration",
                  "scope": 12654,
                  "src": "336:22:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 12649,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "336:7:28",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 12652,
                  "indexed": false,
                  "name": "_newOwner",
                  "nodeType": "VariableDeclaration",
                  "scope": 12654,
                  "src": "360:17:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 12651,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "360:7:28",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "335:43:28"
            },
            "src": "309:70:28"
          },
          {
            "body": {
              "id": 12670,
              "nodeType": "Block",
              "src": "587:93:28",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 12663,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 12659,
                      "name": "tellorUserContract",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12646,
                      "src": "597:18:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_UserContract_$12639",
                        "typeString": "contract UserContract"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 12661,
                          "name": "_userContract",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 12656,
                          "src": "631:13:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 12660,
                        "name": "UserContract",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12639,
                        "src": "618:12:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_UserContract_$12639_$",
                          "typeString": "type(contract UserContract)"
                        }
                      },
                      "id": 12662,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "618:27:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_UserContract_$12639",
                        "typeString": "contract UserContract"
                      }
                    },
                    "src": "597:48:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_UserContract_$12639",
                      "typeString": "contract UserContract"
                    }
                  },
                  "id": 12664,
                  "nodeType": "ExpressionStatement",
                  "src": "597:48:28"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 12668,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 12665,
                      "name": "owner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12648,
                      "src": "655:5:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 12666,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12916,
                        "src": "663:3:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 12667,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "663:10:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "655:18:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "id": 12669,
                  "nodeType": "ExpressionStatement",
                  "src": "655:18:28"
                }
              ]
            },
            "documentation": "@dev This function sents the owner and userContract address\n@param _userContract is the UserContract.sol address",
            "id": 12671,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 12657,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 12656,
                  "name": "_userContract",
                  "nodeType": "VariableDeclaration",
                  "scope": 12671,
                  "src": "557:21:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 12655,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "557:7:28",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "556:23:28"
            },
            "returnParameters": {
              "id": 12658,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "587:0:28"
            },
            "scope": 12901,
            "src": "545:135:28",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 12687,
              "nodeType": "Block",
              "src": "1087:70:28",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 12684,
                        "name": "_requestId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12673,
                        "src": "1139:10:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 12682,
                        "name": "tellorUserContract",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12646,
                        "src": "1104:18:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_UserContract_$12639",
                          "typeString": "contract UserContract"
                        }
                      },
                      "id": 12683,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "getCurrentValue",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 12469,
                      "src": "1104:34:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_bool_$_t_uint256_$_t_uint256_$",
                        "typeString": "function (uint256) view external returns (bool,uint256,uint256)"
                      }
                    },
                    "id": 12685,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1104:46:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$_t_uint256_$",
                      "typeString": "tuple(bool,uint256,uint256)"
                    }
                  },
                  "functionReturnParameters": 12681,
                  "id": 12686,
                  "nodeType": "Return",
                  "src": "1097:53:28"
                }
              ]
            },
            "documentation": "@dev Allows the user to get the latest value for the requestId specified\n@param _requestId is the requestId to look up the value for\n@return bool true if it is able to retreive a value, the value, and the value's timestamp",
            "id": 12688,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getCurrentValue",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 12674,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 12673,
                  "name": "_requestId",
                  "nodeType": "VariableDeclaration",
                  "scope": 12688,
                  "src": "985:18:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 12672,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "985:7:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "984:20:28"
            },
            "returnParameters": {
              "id": 12681,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 12676,
                  "name": "ifRetrieve",
                  "nodeType": "VariableDeclaration",
                  "scope": 12688,
                  "src": "1026:15:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 12675,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1026:4:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 12678,
                  "name": "value",
                  "nodeType": "VariableDeclaration",
                  "scope": 12688,
                  "src": "1043:13:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 12677,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1043:7:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 12680,
                  "name": "_timestampRetrieved",
                  "nodeType": "VariableDeclaration",
                  "scope": 12688,
                  "src": "1058:27:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 12679,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1058:7:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1025:61:28"
            },
            "scope": 12901,
            "src": "960:197:28",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 12707,
              "nodeType": "Block",
              "src": "1779:92:28",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 12703,
                        "name": "_requestId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12690,
                        "src": "1841:10:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 12704,
                        "name": "_timestamp",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12692,
                        "src": "1853:10:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 12701,
                        "name": "tellorUserContract",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12646,
                        "src": "1796:18:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_UserContract_$12639",
                          "typeString": "contract UserContract"
                        }
                      },
                      "id": 12702,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "getFirstVerifiedDataAfter",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 12560,
                      "src": "1796:44:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$_t_uint256_$",
                        "typeString": "function (uint256,uint256) view external returns (bool,uint256,uint256)"
                      }
                    },
                    "id": 12705,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1796:68:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$_t_uint256_$",
                      "typeString": "tuple(bool,uint256,uint256)"
                    }
                  },
                  "functionReturnParameters": 12700,
                  "id": 12706,
                  "nodeType": "Return",
                  "src": "1789:75:28"
                }
              ]
            },
            "documentation": "@dev Allows the user to get the first verified value for the requestId after the specified timestamp\n@param _requestId is the requestId to look up the value for\n@param _timestamp after which to search for first verified value\n@return bool true if it is able to retreive a value, the value, and the value's timestamp, the timestamp after\nwhich it searched for the first verified value",
            "id": 12708,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getFirstVerifiedDataAfter",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 12693,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 12690,
                  "name": "_requestId",
                  "nodeType": "VariableDeclaration",
                  "scope": 12708,
                  "src": "1674:18:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 12689,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1674:7:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 12692,
                  "name": "_timestamp",
                  "nodeType": "VariableDeclaration",
                  "scope": 12708,
                  "src": "1694:18:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 12691,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1694:7:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1673:40:28"
            },
            "returnParameters": {
              "id": 12700,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 12695,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 12708,
                  "src": "1735:4:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 12694,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1735:4:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 12697,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 12708,
                  "src": "1741:7:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 12696,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1741:7:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 12699,
                  "name": "_timestampRetrieved",
                  "nodeType": "VariableDeclaration",
                  "scope": 12708,
                  "src": "1750:27:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 12698,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1750:7:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1734:44:28"
            },
            "scope": 12901,
            "src": "1639:232:28",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 12727,
              "nodeType": "Block",
              "src": "2400:82:28",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 12723,
                        "name": "_requestId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12710,
                        "src": "2452:10:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 12724,
                        "name": "_timestamp",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12712,
                        "src": "2464:10:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 12721,
                        "name": "tellorUserContract",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12646,
                        "src": "2417:18:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_UserContract_$12639",
                          "typeString": "contract UserContract"
                        }
                      },
                      "id": 12722,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "getAnyDataAfter",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 12638,
                      "src": "2417:34:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$_t_uint256_$",
                        "typeString": "function (uint256,uint256) view external returns (bool,uint256,uint256)"
                      }
                    },
                    "id": 12725,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2417:58:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$_t_uint256_$",
                      "typeString": "tuple(bool,uint256,uint256)"
                    }
                  },
                  "functionReturnParameters": 12720,
                  "id": 12726,
                  "nodeType": "Return",
                  "src": "2410:65:28"
                }
              ]
            },
            "documentation": "@dev Allows the user to get the first value for the requestId after the specified timestamp\n@param _requestId is the requestId to look up the value for\n@param _timestamp after which to search for first verified value\n@return bool true if it is able to retreive a value, the value, and the value's timestamp",
            "id": 12728,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getAnyDataAfter",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 12713,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 12710,
                  "name": "_requestId",
                  "nodeType": "VariableDeclaration",
                  "scope": 12728,
                  "src": "2248:18:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 12709,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2248:7:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 12712,
                  "name": "_timestamp",
                  "nodeType": "VariableDeclaration",
                  "scope": 12728,
                  "src": "2268:18:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 12711,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2268:7:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2247:40:28"
            },
            "returnParameters": {
              "id": 12720,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 12715,
                  "name": "_ifRetrieve",
                  "nodeType": "VariableDeclaration",
                  "scope": 12728,
                  "src": "2333:16:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 12714,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2333:4:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 12717,
                  "name": "_value",
                  "nodeType": "VariableDeclaration",
                  "scope": 12728,
                  "src": "2351:14:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 12716,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2351:7:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 12719,
                  "name": "_timestampRetrieved",
                  "nodeType": "VariableDeclaration",
                  "scope": 12728,
                  "src": "2367:27:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 12718,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2367:7:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2332:63:28"
            },
            "scope": 12901,
            "src": "2223:259:28",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 12774,
              "nodeType": "Block",
              "src": "3255:280:28",
              "statements": [
                {
                  "assignments": [
                    12740
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 12740,
                      "name": "_tellor",
                      "nodeType": "VariableDeclaration",
                      "scope": 12774,
                      "src": "3265:14:28",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Tellor_$316",
                        "typeString": "contract Tellor"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 12739,
                        "name": "Tellor",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 316,
                        "src": "3265:6:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Tellor_$316",
                          "typeString": "contract Tellor"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 12746,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "argumentTypes": null,
                            "id": 12742,
                            "name": "tellorUserContract",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 12646,
                            "src": "3289:18:28",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_UserContract_$12639",
                              "typeString": "contract UserContract"
                            }
                          },
                          "id": 12743,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "tellorStorageAddress",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 12204,
                          "src": "3289:39:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_address_payable_$",
                            "typeString": "function () view external returns (address payable)"
                          }
                        },
                        "id": 12744,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3289:41:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 12741,
                      "name": "Tellor",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 316,
                      "src": "3282:6:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_Tellor_$316_$",
                        "typeString": "type(contract Tellor)"
                      }
                    },
                    "id": 12745,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3282:49:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Tellor_$316",
                      "typeString": "contract Tellor"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3265:66:28"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 12749,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 12747,
                      "name": "_tip",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12736,
                      "src": "3345:4:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 12748,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3352:1:28",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "3345:8:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 12764,
                  "nodeType": "IfStatement",
                  "src": "3341:120:28",
                  "trueBody": {
                    "id": 12763,
                    "nodeType": "Block",
                    "src": "3355:106:28",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "expression": {
                                    "argumentTypes": null,
                                    "id": 12753,
                                    "name": "msg",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 12916,
                                    "src": "3398:3:28",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_message",
                                      "typeString": "msg"
                                    }
                                  },
                                  "id": 12754,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "sender",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": null,
                                  "src": "3398:10:28",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address_payable",
                                    "typeString": "address payable"
                                  }
                                },
                                {
                                  "argumentTypes": null,
                                  "arguments": [
                                    {
                                      "argumentTypes": null,
                                      "id": 12756,
                                      "name": "this",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 12982,
                                      "src": "3418:4:28",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_UsingTellor_$12901",
                                        "typeString": "contract UsingTellor"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_contract$_UsingTellor_$12901",
                                        "typeString": "contract UsingTellor"
                                      }
                                    ],
                                    "id": 12755,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "3410:7:28",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_address_$",
                                      "typeString": "type(address)"
                                    },
                                    "typeName": "address"
                                  },
                                  "id": 12757,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "3410:13:28",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                {
                                  "argumentTypes": null,
                                  "id": 12758,
                                  "name": "_tip",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 12736,
                                  "src": "3425:4:28",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address_payable",
                                    "typeString": "address payable"
                                  },
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 12751,
                                  "name": "_tellor",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 12740,
                                  "src": "3377:7:28",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_Tellor_$316",
                                    "typeString": "contract Tellor"
                                  }
                                },
                                "id": 12752,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "transferFrom",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 291,
                                "src": "3377:20:28",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                                  "typeString": "function (address,address,uint256) external returns (bool)"
                                }
                              },
                              "id": 12759,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3377:53:28",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "hexValue": "5472616e73666572206661696c6564",
                              "id": 12760,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3432:17:28",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51",
                                "typeString": "literal_string \"Transfer failed\""
                              },
                              "value": "Transfer failed"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51",
                                "typeString": "literal_string \"Transfer failed\""
                              }
                            ],
                            "id": 12750,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              12919,
                              12920
                            ],
                            "referencedDeclaration": 12920,
                            "src": "3369:7:28",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 12761,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3369:81:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 12762,
                        "nodeType": "ExpressionStatement",
                        "src": "3369:81:28"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 12768,
                        "name": "_request",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12730,
                        "src": "3490:8:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 12769,
                        "name": "_symbol",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12732,
                        "src": "3500:7:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 12770,
                        "name": "_granularity",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12734,
                        "src": "3509:12:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 12771,
                        "name": "_tip",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12736,
                        "src": "3523:4:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        },
                        {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 12765,
                        "name": "_tellor",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12740,
                        "src": "3470:7:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Tellor_$316",
                          "typeString": "contract Tellor"
                        }
                      },
                      "id": 12767,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "requestData",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 174,
                      "src": "3470:19:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (string memory,string memory,uint256,uint256) external"
                      }
                    },
                    "id": 12772,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3470:58:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 12773,
                  "nodeType": "ExpressionStatement",
                  "src": "3470:58:28"
                }
              ]
            },
            "documentation": "@dev Allows the user to submit a request for data to the oracle using Tributes\nAllowing this prevents us from increasing spread too high (since if we set the price too hight\nusers will just go to an exchange and get tokens from there)\n@param _request string API being requested to be mined\n@param _symbol is the short string symbol for the api request\n@param _granularity is the number of decimals miners should include on the submitted value\n@param _tip amount the requester is willing to pay to be get on queue. Miners\nmine the onDeckQueryHash, or the api with the highest payout pool",
            "id": 12775,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "requestData",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 12737,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 12730,
                  "name": "_request",
                  "nodeType": "VariableDeclaration",
                  "scope": 12775,
                  "src": "3159:24:28",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_calldata_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 12729,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "3159:6:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 12732,
                  "name": "_symbol",
                  "nodeType": "VariableDeclaration",
                  "scope": 12775,
                  "src": "3185:23:28",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_calldata_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 12731,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "3185:6:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 12734,
                  "name": "_granularity",
                  "nodeType": "VariableDeclaration",
                  "scope": 12775,
                  "src": "3210:20:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 12733,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3210:7:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 12736,
                  "name": "_tip",
                  "nodeType": "VariableDeclaration",
                  "scope": 12775,
                  "src": "3232:12:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 12735,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3232:7:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3158:87:28"
            },
            "returnParameters": {
              "id": 12738,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3255:0:28"
            },
            "scope": 12901,
            "src": "3138:397:28",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 12800,
              "nodeType": "Block",
              "src": "4152:112:28",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 12794,
                        "name": "_request",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12777,
                        "src": "4219:8:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 12795,
                        "name": "_symbol",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12779,
                        "src": "4229:7:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 12796,
                        "name": "_granularity",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12781,
                        "src": "4238:12:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 12797,
                        "name": "_tip",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12783,
                        "src": "4252:4:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        },
                        {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 12791,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 12916,
                            "src": "4208:3:28",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 12792,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "4208:9:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 12786,
                            "name": "tellorUserContract",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 12646,
                            "src": "4162:18:28",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_UserContract_$12639",
                              "typeString": "contract UserContract"
                            }
                          },
                          "id": 12789,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "requestDataWithEther",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 12359,
                          "src": "4162:39:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_payable$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$__$",
                            "typeString": "function (string memory,string memory,uint256,uint256) payable external"
                          }
                        },
                        "id": 12790,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "value",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "4162:45:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_setvalue_nonpayable$_t_uint256_$returns$_t_function_external_payable$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$__$value_$",
                          "typeString": "function (uint256) returns (function (string memory,string memory,uint256,uint256) payable external)"
                        }
                      },
                      "id": 12793,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4162:56:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$__$value",
                        "typeString": "function (string memory,string memory,uint256,uint256) payable external"
                      }
                    },
                    "id": 12798,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4162:95:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 12799,
                  "nodeType": "ExpressionStatement",
                  "src": "4162:95:28"
                }
              ]
            },
            "documentation": "@dev Allows the user to submit a request for data to the oracle using ETH\n@param _request string API being requested to be mined\n@param _symbol is the short string symbol for the api request\n@param _granularity is the number of decimals miners should include on the submitted value\n@param _tip amount the requester is willing to pay to be get on queue. Miners\nmine the onDeckQueryHash, or the api with the highest payout pool",
            "id": 12801,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "requestDataWithEther",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 12784,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 12777,
                  "name": "_request",
                  "nodeType": "VariableDeclaration",
                  "scope": 12801,
                  "src": "4048:24:28",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_calldata_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 12776,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "4048:6:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 12779,
                  "name": "_symbol",
                  "nodeType": "VariableDeclaration",
                  "scope": 12801,
                  "src": "4074:23:28",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_calldata_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 12778,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "4074:6:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 12781,
                  "name": "_granularity",
                  "nodeType": "VariableDeclaration",
                  "scope": 12801,
                  "src": "4099:20:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 12780,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4099:7:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 12783,
                  "name": "_tip",
                  "nodeType": "VariableDeclaration",
                  "scope": 12801,
                  "src": "4121:12:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 12782,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4121:7:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4047:87:28"
            },
            "returnParameters": {
              "id": 12785,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4152:0:28"
            },
            "scope": 12901,
            "src": "4018:246:28",
            "stateMutability": "payable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 12836,
              "nodeType": "Block",
              "src": "4480:216:28",
              "statements": [
                {
                  "assignments": [
                    12809
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 12809,
                      "name": "_tellor",
                      "nodeType": "VariableDeclaration",
                      "scope": 12836,
                      "src": "4490:14:28",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Tellor_$316",
                        "typeString": "contract Tellor"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 12808,
                        "name": "Tellor",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 316,
                        "src": "4490:6:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Tellor_$316",
                          "typeString": "contract Tellor"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 12815,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "argumentTypes": null,
                            "id": 12811,
                            "name": "tellorUserContract",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 12646,
                            "src": "4514:18:28",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_UserContract_$12639",
                              "typeString": "contract UserContract"
                            }
                          },
                          "id": 12812,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "tellorStorageAddress",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 12204,
                          "src": "4514:39:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_address_payable_$",
                            "typeString": "function () view external returns (address payable)"
                          }
                        },
                        "id": 12813,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4514:41:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 12810,
                      "name": "Tellor",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 316,
                      "src": "4507:6:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_Tellor_$316_$",
                        "typeString": "type(contract Tellor)"
                      }
                    },
                    "id": 12814,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4507:49:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Tellor_$316",
                      "typeString": "contract Tellor"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4490:66:28"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 12819,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 12916,
                              "src": "4595:3:28",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 12820,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "4595:10:28",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 12822,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 12982,
                                "src": "4615:4:28",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_UsingTellor_$12901",
                                  "typeString": "contract UsingTellor"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_UsingTellor_$12901",
                                  "typeString": "contract UsingTellor"
                                }
                              ],
                              "id": 12821,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "4607:7:28",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": "address"
                            },
                            "id": 12823,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4607:13:28",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 12824,
                            "name": "_tip",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 12805,
                            "src": "4622:4:28",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "id": 12817,
                            "name": "_tellor",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 12809,
                            "src": "4574:7:28",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Tellor_$316",
                              "typeString": "contract Tellor"
                            }
                          },
                          "id": 12818,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "transferFrom",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 291,
                          "src": "4574:20:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (address,address,uint256) external returns (bool)"
                          }
                        },
                        "id": 12825,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4574:53:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "5472616e73666572206661696c6564",
                        "id": 12826,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4629:17:28",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51",
                          "typeString": "literal_string \"Transfer failed\""
                        },
                        "value": "Transfer failed"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51",
                          "typeString": "literal_string \"Transfer failed\""
                        }
                      ],
                      "id": 12816,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        12919,
                        12920
                      ],
                      "referencedDeclaration": 12920,
                      "src": "4566:7:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 12827,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4566:81:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 12828,
                  "nodeType": "ExpressionStatement",
                  "src": "4566:81:28"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 12832,
                        "name": "_requestId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12803,
                        "src": "4672:10:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 12833,
                        "name": "_tip",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12805,
                        "src": "4684:4:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 12829,
                        "name": "_tellor",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12809,
                        "src": "4657:7:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Tellor_$316",
                          "typeString": "contract Tellor"
                        }
                      },
                      "id": 12831,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "addTip",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 153,
                      "src": "4657:14:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256) external"
                      }
                    },
                    "id": 12834,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4657:32:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 12835,
                  "nodeType": "ExpressionStatement",
                  "src": "4657:32:28"
                }
              ]
            },
            "documentation": "@dev Allows the user to tip miners for the specified request using Tributes\n@param _requestId to tip\n@param _tip amount",
            "id": 12837,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "addTip",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 12806,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 12803,
                  "name": "_requestId",
                  "nodeType": "VariableDeclaration",
                  "scope": 12837,
                  "src": "4439:18:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 12802,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4439:7:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 12805,
                  "name": "_tip",
                  "nodeType": "VariableDeclaration",
                  "scope": 12837,
                  "src": "4459:12:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 12804,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4459:7:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4438:34:28"
            },
            "returnParameters": {
              "id": 12807,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4480:0:28"
            },
            "scope": 12901,
            "src": "4423:273:28",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 12856,
              "nodeType": "Block",
              "src": "5018:100:28",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 12852,
                        "name": "_requestId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12839,
                        "src": "5094:10:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 12853,
                        "name": "_tip",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12841,
                        "src": "5106:4:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 12849,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 12916,
                            "src": "5083:3:28",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 12850,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "5083:9:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 12845,
                                "name": "tellorUserContract",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 12646,
                                "src": "5041:18:28",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_UserContract_$12639",
                                  "typeString": "contract UserContract"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_UserContract_$12639",
                                  "typeString": "contract UserContract"
                                }
                              ],
                              "id": 12844,
                              "name": "UserContract",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 12639,
                              "src": "5028:12:28",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_UserContract_$12639_$",
                                "typeString": "type(contract UserContract)"
                              }
                            },
                            "id": 12846,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5028:32:28",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_UserContract_$12639",
                              "typeString": "contract UserContract"
                            }
                          },
                          "id": 12847,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "addTipWithEther",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 12399,
                          "src": "5028:48:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_payable$_t_uint256_$_t_uint256_$returns$__$",
                            "typeString": "function (uint256,uint256) payable external"
                          }
                        },
                        "id": 12848,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "value",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "5028:54:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_setvalue_nonpayable$_t_uint256_$returns$_t_function_external_payable$_t_uint256_$_t_uint256_$returns$__$value_$",
                          "typeString": "function (uint256) returns (function (uint256,uint256) payable external)"
                        }
                      },
                      "id": 12851,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5028:65:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$_t_uint256_$_t_uint256_$returns$__$value",
                        "typeString": "function (uint256,uint256) payable external"
                      }
                    },
                    "id": 12854,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5028:83:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 12855,
                  "nodeType": "ExpressionStatement",
                  "src": "5028:83:28"
                }
              ]
            },
            "documentation": "@dev Allows user to add tip with Ether by sending the ETH to the userContract and exchanging it for Tributes\nat the price specified by the userContract owner.\n@param _requestId to tip\n@param _tip amount",
            "id": 12857,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "addTipWithEther",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 12842,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 12839,
                  "name": "_requestId",
                  "nodeType": "VariableDeclaration",
                  "scope": 12857,
                  "src": "4969:18:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 12838,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4969:7:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 12841,
                  "name": "_tip",
                  "nodeType": "VariableDeclaration",
                  "scope": 12857,
                  "src": "4989:12:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 12840,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4989:7:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4968:34:28"
            },
            "returnParameters": {
              "id": 12843,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5018:0:28"
            },
            "scope": 12901,
            "src": "4944:174:28",
            "stateMutability": "payable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 12876,
              "nodeType": "Block",
              "src": "5286:148:28",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        "id": 12866,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 12863,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 12916,
                            "src": "5304:3:28",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 12864,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "5304:10:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 12865,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 12648,
                          "src": "5318:5:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "5304:19:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "53656e646572206973206e6f74206f776e6572",
                        "id": 12867,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5325:21:28",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c31e61005312bc4f751533ef9aaa8e9a41448b72bb628fe51500ef66060b25c4",
                          "typeString": "literal_string \"Sender is not owner\""
                        },
                        "value": "Sender is not owner"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c31e61005312bc4f751533ef9aaa8e9a41448b72bb628fe51500ef66060b25c4",
                          "typeString": "literal_string \"Sender is not owner\""
                        }
                      ],
                      "id": 12862,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        12919,
                        12920
                      ],
                      "referencedDeclaration": 12920,
                      "src": "5296:7:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 12868,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5296:51:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 12869,
                  "nodeType": "ExpressionStatement",
                  "src": "5296:51:28"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 12874,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 12870,
                      "name": "tellorUserContract",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12646,
                      "src": "5379:18:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_UserContract_$12639",
                        "typeString": "contract UserContract"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 12872,
                          "name": "_userContract",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 12859,
                          "src": "5413:13:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 12871,
                        "name": "UserContract",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12639,
                        "src": "5400:12:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_UserContract_$12639_$",
                          "typeString": "type(contract UserContract)"
                        }
                      },
                      "id": 12873,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5400:27:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_UserContract_$12639",
                        "typeString": "contract UserContract"
                      }
                    },
                    "src": "5379:48:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_UserContract_$12639",
                      "typeString": "contract UserContract"
                    }
                  },
                  "id": 12875,
                  "nodeType": "ExpressionStatement",
                  "src": "5379:48:28"
                }
              ]
            },
            "documentation": "@dev allows owner to set the user contract address\n@param _userContract address",
            "id": 12877,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setUserContract",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 12860,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 12859,
                  "name": "_userContract",
                  "nodeType": "VariableDeclaration",
                  "scope": 12877,
                  "src": "5256:21:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 12858,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5256:7:28",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "5255:23:28"
            },
            "returnParameters": {
              "id": 12861,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5286:0:28"
            },
            "scope": 12901,
            "src": "5231:203:28",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 12899,
              "nodeType": "Block",
              "src": "5595:148:28",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        "id": 12886,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 12883,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 12916,
                            "src": "5613:3:28",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 12884,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "5613:10:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 12885,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 12648,
                          "src": "5627:5:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "5613:19:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "53656e646572206973206e6f74206f776e6572",
                        "id": 12887,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5634:21:28",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c31e61005312bc4f751533ef9aaa8e9a41448b72bb628fe51500ef66060b25c4",
                          "typeString": "literal_string \"Sender is not owner\""
                        },
                        "value": "Sender is not owner"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c31e61005312bc4f751533ef9aaa8e9a41448b72bb628fe51500ef66060b25c4",
                          "typeString": "literal_string \"Sender is not owner\""
                        }
                      ],
                      "id": 12882,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        12919,
                        12920
                      ],
                      "referencedDeclaration": 12920,
                      "src": "5605:7:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 12888,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5605:51:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 12889,
                  "nodeType": "ExpressionStatement",
                  "src": "5605:51:28"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 12891,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12648,
                        "src": "5692:5:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 12892,
                        "name": "_newOwner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12879,
                        "src": "5699:9:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 12890,
                      "name": "OwnershipTransferred",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12654,
                      "src": "5671:20:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (address,address)"
                      }
                    },
                    "id": 12893,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5671:38:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 12894,
                  "nodeType": "EmitStatement",
                  "src": "5666:43:28"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 12897,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 12895,
                      "name": "owner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12648,
                      "src": "5719:5:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 12896,
                      "name": "_newOwner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12879,
                      "src": "5727:9:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "5719:17:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "id": 12898,
                  "nodeType": "ExpressionStatement",
                  "src": "5719:17:28"
                }
              ]
            },
            "documentation": "@dev allows owner to transfer ownership\n@param _newOwner address",
            "id": 12900,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "transferOwnership",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 12880,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 12879,
                  "name": "_newOwner",
                  "nodeType": "VariableDeclaration",
                  "scope": 12900,
                  "src": "5559:25:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "typeName": {
                    "id": 12878,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5559:15:28",
                    "stateMutability": "payable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "5558:27:28"
            },
            "returnParameters": {
              "id": 12881,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5595:0:28"
            },
            "scope": 12901,
            "src": "5532:211:28",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          }
        ],
        "scope": 12902,
        "src": "210:5535:28"
      }
    ],
    "src": "0:5746:28"
  },
  "legacyAST": {
    "absolutePath": "/Users/mdcoon/git/TellorCore/contracts/userFiles/UsingTellor.sol",
    "exportedSymbols": {
      "UsingTellor": [
        12901
      ]
    },
    "id": 12902,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 12641,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:28"
      },
      {
        "absolutePath": "/Users/mdcoon/git/TellorCore/contracts/Tellor.sol",
        "file": "../Tellor.sol",
        "id": 12642,
        "nodeType": "ImportDirective",
        "scope": 12902,
        "sourceUnit": 317,
        "src": "25:23:28",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/mdcoon/git/TellorCore/contracts/TellorMaster.sol",
        "file": "../TellorMaster.sol",
        "id": 12643,
        "nodeType": "ImportDirective",
        "scope": 12902,
        "sourceUnit": 927,
        "src": "49:29:28",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/mdcoon/git/TellorCore/contracts/userFiles/UserContract.sol",
        "file": "./UserContract.sol",
        "id": 12644,
        "nodeType": "ImportDirective",
        "scope": 12902,
        "sourceUnit": 12640,
        "src": "79:28:28",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": "@title UsingTellor\nThis contracts creates for easy integration to the Tellor Tellor System",
        "fullyImplemented": true,
        "id": 12901,
        "linearizedBaseContracts": [
          12901
        ],
        "name": "UsingTellor",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 12646,
            "name": "tellorUserContract",
            "nodeType": "VariableDeclaration",
            "scope": 12901,
            "src": "237:31:28",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_UserContract_$12639",
              "typeString": "contract UserContract"
            },
            "typeName": {
              "contractScope": null,
              "id": 12645,
              "name": "UserContract",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 12639,
              "src": "237:12:28",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_UserContract_$12639",
                "typeString": "contract UserContract"
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 12648,
            "name": "owner",
            "nodeType": "VariableDeclaration",
            "scope": 12901,
            "src": "274:28:28",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address_payable",
              "typeString": "address payable"
            },
            "typeName": {
              "id": 12647,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "274:15:28",
              "stateMutability": "payable",
              "typeDescriptions": {
                "typeIdentifier": "t_address_payable",
                "typeString": "address payable"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 12654,
            "name": "OwnershipTransferred",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 12653,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 12650,
                  "indexed": false,
                  "name": "_previousOwner",
                  "nodeType": "VariableDeclaration",
                  "scope": 12654,
                  "src": "336:22:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 12649,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "336:7:28",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 12652,
                  "indexed": false,
                  "name": "_newOwner",
                  "nodeType": "VariableDeclaration",
                  "scope": 12654,
                  "src": "360:17:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 12651,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "360:7:28",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "335:43:28"
            },
            "src": "309:70:28"
          },
          {
            "body": {
              "id": 12670,
              "nodeType": "Block",
              "src": "587:93:28",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 12663,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 12659,
                      "name": "tellorUserContract",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12646,
                      "src": "597:18:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_UserContract_$12639",
                        "typeString": "contract UserContract"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 12661,
                          "name": "_userContract",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 12656,
                          "src": "631:13:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 12660,
                        "name": "UserContract",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12639,
                        "src": "618:12:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_UserContract_$12639_$",
                          "typeString": "type(contract UserContract)"
                        }
                      },
                      "id": 12662,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "618:27:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_UserContract_$12639",
                        "typeString": "contract UserContract"
                      }
                    },
                    "src": "597:48:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_UserContract_$12639",
                      "typeString": "contract UserContract"
                    }
                  },
                  "id": 12664,
                  "nodeType": "ExpressionStatement",
                  "src": "597:48:28"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 12668,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 12665,
                      "name": "owner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12648,
                      "src": "655:5:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 12666,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12916,
                        "src": "663:3:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 12667,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "663:10:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "655:18:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "id": 12669,
                  "nodeType": "ExpressionStatement",
                  "src": "655:18:28"
                }
              ]
            },
            "documentation": "@dev This function sents the owner and userContract address\n@param _userContract is the UserContract.sol address",
            "id": 12671,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 12657,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 12656,
                  "name": "_userContract",
                  "nodeType": "VariableDeclaration",
                  "scope": 12671,
                  "src": "557:21:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 12655,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "557:7:28",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "556:23:28"
            },
            "returnParameters": {
              "id": 12658,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "587:0:28"
            },
            "scope": 12901,
            "src": "545:135:28",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 12687,
              "nodeType": "Block",
              "src": "1087:70:28",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 12684,
                        "name": "_requestId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12673,
                        "src": "1139:10:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 12682,
                        "name": "tellorUserContract",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12646,
                        "src": "1104:18:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_UserContract_$12639",
                          "typeString": "contract UserContract"
                        }
                      },
                      "id": 12683,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "getCurrentValue",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 12469,
                      "src": "1104:34:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_bool_$_t_uint256_$_t_uint256_$",
                        "typeString": "function (uint256) view external returns (bool,uint256,uint256)"
                      }
                    },
                    "id": 12685,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1104:46:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$_t_uint256_$",
                      "typeString": "tuple(bool,uint256,uint256)"
                    }
                  },
                  "functionReturnParameters": 12681,
                  "id": 12686,
                  "nodeType": "Return",
                  "src": "1097:53:28"
                }
              ]
            },
            "documentation": "@dev Allows the user to get the latest value for the requestId specified\n@param _requestId is the requestId to look up the value for\n@return bool true if it is able to retreive a value, the value, and the value's timestamp",
            "id": 12688,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getCurrentValue",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 12674,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 12673,
                  "name": "_requestId",
                  "nodeType": "VariableDeclaration",
                  "scope": 12688,
                  "src": "985:18:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 12672,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "985:7:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "984:20:28"
            },
            "returnParameters": {
              "id": 12681,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 12676,
                  "name": "ifRetrieve",
                  "nodeType": "VariableDeclaration",
                  "scope": 12688,
                  "src": "1026:15:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 12675,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1026:4:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 12678,
                  "name": "value",
                  "nodeType": "VariableDeclaration",
                  "scope": 12688,
                  "src": "1043:13:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 12677,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1043:7:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 12680,
                  "name": "_timestampRetrieved",
                  "nodeType": "VariableDeclaration",
                  "scope": 12688,
                  "src": "1058:27:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 12679,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1058:7:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1025:61:28"
            },
            "scope": 12901,
            "src": "960:197:28",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 12707,
              "nodeType": "Block",
              "src": "1779:92:28",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 12703,
                        "name": "_requestId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12690,
                        "src": "1841:10:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 12704,
                        "name": "_timestamp",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12692,
                        "src": "1853:10:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 12701,
                        "name": "tellorUserContract",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12646,
                        "src": "1796:18:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_UserContract_$12639",
                          "typeString": "contract UserContract"
                        }
                      },
                      "id": 12702,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "getFirstVerifiedDataAfter",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 12560,
                      "src": "1796:44:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$_t_uint256_$",
                        "typeString": "function (uint256,uint256) view external returns (bool,uint256,uint256)"
                      }
                    },
                    "id": 12705,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1796:68:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$_t_uint256_$",
                      "typeString": "tuple(bool,uint256,uint256)"
                    }
                  },
                  "functionReturnParameters": 12700,
                  "id": 12706,
                  "nodeType": "Return",
                  "src": "1789:75:28"
                }
              ]
            },
            "documentation": "@dev Allows the user to get the first verified value for the requestId after the specified timestamp\n@param _requestId is the requestId to look up the value for\n@param _timestamp after which to search for first verified value\n@return bool true if it is able to retreive a value, the value, and the value's timestamp, the timestamp after\nwhich it searched for the first verified value",
            "id": 12708,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getFirstVerifiedDataAfter",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 12693,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 12690,
                  "name": "_requestId",
                  "nodeType": "VariableDeclaration",
                  "scope": 12708,
                  "src": "1674:18:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 12689,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1674:7:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 12692,
                  "name": "_timestamp",
                  "nodeType": "VariableDeclaration",
                  "scope": 12708,
                  "src": "1694:18:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 12691,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1694:7:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1673:40:28"
            },
            "returnParameters": {
              "id": 12700,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 12695,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 12708,
                  "src": "1735:4:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 12694,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1735:4:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 12697,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 12708,
                  "src": "1741:7:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 12696,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1741:7:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 12699,
                  "name": "_timestampRetrieved",
                  "nodeType": "VariableDeclaration",
                  "scope": 12708,
                  "src": "1750:27:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 12698,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1750:7:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1734:44:28"
            },
            "scope": 12901,
            "src": "1639:232:28",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 12727,
              "nodeType": "Block",
              "src": "2400:82:28",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 12723,
                        "name": "_requestId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12710,
                        "src": "2452:10:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 12724,
                        "name": "_timestamp",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12712,
                        "src": "2464:10:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 12721,
                        "name": "tellorUserContract",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12646,
                        "src": "2417:18:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_UserContract_$12639",
                          "typeString": "contract UserContract"
                        }
                      },
                      "id": 12722,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "getAnyDataAfter",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 12638,
                      "src": "2417:34:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$_t_uint256_$",
                        "typeString": "function (uint256,uint256) view external returns (bool,uint256,uint256)"
                      }
                    },
                    "id": 12725,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2417:58:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$_t_uint256_$",
                      "typeString": "tuple(bool,uint256,uint256)"
                    }
                  },
                  "functionReturnParameters": 12720,
                  "id": 12726,
                  "nodeType": "Return",
                  "src": "2410:65:28"
                }
              ]
            },
            "documentation": "@dev Allows the user to get the first value for the requestId after the specified timestamp\n@param _requestId is the requestId to look up the value for\n@param _timestamp after which to search for first verified value\n@return bool true if it is able to retreive a value, the value, and the value's timestamp",
            "id": 12728,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getAnyDataAfter",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 12713,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 12710,
                  "name": "_requestId",
                  "nodeType": "VariableDeclaration",
                  "scope": 12728,
                  "src": "2248:18:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 12709,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2248:7:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 12712,
                  "name": "_timestamp",
                  "nodeType": "VariableDeclaration",
                  "scope": 12728,
                  "src": "2268:18:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 12711,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2268:7:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2247:40:28"
            },
            "returnParameters": {
              "id": 12720,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 12715,
                  "name": "_ifRetrieve",
                  "nodeType": "VariableDeclaration",
                  "scope": 12728,
                  "src": "2333:16:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 12714,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2333:4:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 12717,
                  "name": "_value",
                  "nodeType": "VariableDeclaration",
                  "scope": 12728,
                  "src": "2351:14:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 12716,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2351:7:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 12719,
                  "name": "_timestampRetrieved",
                  "nodeType": "VariableDeclaration",
                  "scope": 12728,
                  "src": "2367:27:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 12718,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2367:7:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2332:63:28"
            },
            "scope": 12901,
            "src": "2223:259:28",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 12774,
              "nodeType": "Block",
              "src": "3255:280:28",
              "statements": [
                {
                  "assignments": [
                    12740
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 12740,
                      "name": "_tellor",
                      "nodeType": "VariableDeclaration",
                      "scope": 12774,
                      "src": "3265:14:28",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Tellor_$316",
                        "typeString": "contract Tellor"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 12739,
                        "name": "Tellor",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 316,
                        "src": "3265:6:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Tellor_$316",
                          "typeString": "contract Tellor"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 12746,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "argumentTypes": null,
                            "id": 12742,
                            "name": "tellorUserContract",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 12646,
                            "src": "3289:18:28",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_UserContract_$12639",
                              "typeString": "contract UserContract"
                            }
                          },
                          "id": 12743,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "tellorStorageAddress",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 12204,
                          "src": "3289:39:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_address_payable_$",
                            "typeString": "function () view external returns (address payable)"
                          }
                        },
                        "id": 12744,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3289:41:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 12741,
                      "name": "Tellor",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 316,
                      "src": "3282:6:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_Tellor_$316_$",
                        "typeString": "type(contract Tellor)"
                      }
                    },
                    "id": 12745,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3282:49:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Tellor_$316",
                      "typeString": "contract Tellor"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3265:66:28"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 12749,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 12747,
                      "name": "_tip",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12736,
                      "src": "3345:4:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 12748,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3352:1:28",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "3345:8:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 12764,
                  "nodeType": "IfStatement",
                  "src": "3341:120:28",
                  "trueBody": {
                    "id": 12763,
                    "nodeType": "Block",
                    "src": "3355:106:28",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "expression": {
                                    "argumentTypes": null,
                                    "id": 12753,
                                    "name": "msg",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 12916,
                                    "src": "3398:3:28",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_message",
                                      "typeString": "msg"
                                    }
                                  },
                                  "id": 12754,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "sender",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": null,
                                  "src": "3398:10:28",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address_payable",
                                    "typeString": "address payable"
                                  }
                                },
                                {
                                  "argumentTypes": null,
                                  "arguments": [
                                    {
                                      "argumentTypes": null,
                                      "id": 12756,
                                      "name": "this",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 12982,
                                      "src": "3418:4:28",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_UsingTellor_$12901",
                                        "typeString": "contract UsingTellor"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_contract$_UsingTellor_$12901",
                                        "typeString": "contract UsingTellor"
                                      }
                                    ],
                                    "id": 12755,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "3410:7:28",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_address_$",
                                      "typeString": "type(address)"
                                    },
                                    "typeName": "address"
                                  },
                                  "id": 12757,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "3410:13:28",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                {
                                  "argumentTypes": null,
                                  "id": 12758,
                                  "name": "_tip",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 12736,
                                  "src": "3425:4:28",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address_payable",
                                    "typeString": "address payable"
                                  },
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 12751,
                                  "name": "_tellor",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 12740,
                                  "src": "3377:7:28",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_Tellor_$316",
                                    "typeString": "contract Tellor"
                                  }
                                },
                                "id": 12752,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "transferFrom",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 291,
                                "src": "3377:20:28",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                                  "typeString": "function (address,address,uint256) external returns (bool)"
                                }
                              },
                              "id": 12759,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3377:53:28",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "hexValue": "5472616e73666572206661696c6564",
                              "id": 12760,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3432:17:28",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51",
                                "typeString": "literal_string \"Transfer failed\""
                              },
                              "value": "Transfer failed"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51",
                                "typeString": "literal_string \"Transfer failed\""
                              }
                            ],
                            "id": 12750,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              12919,
                              12920
                            ],
                            "referencedDeclaration": 12920,
                            "src": "3369:7:28",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 12761,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3369:81:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 12762,
                        "nodeType": "ExpressionStatement",
                        "src": "3369:81:28"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 12768,
                        "name": "_request",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12730,
                        "src": "3490:8:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 12769,
                        "name": "_symbol",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12732,
                        "src": "3500:7:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 12770,
                        "name": "_granularity",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12734,
                        "src": "3509:12:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 12771,
                        "name": "_tip",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12736,
                        "src": "3523:4:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        },
                        {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 12765,
                        "name": "_tellor",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12740,
                        "src": "3470:7:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Tellor_$316",
                          "typeString": "contract Tellor"
                        }
                      },
                      "id": 12767,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "requestData",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 174,
                      "src": "3470:19:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (string memory,string memory,uint256,uint256) external"
                      }
                    },
                    "id": 12772,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3470:58:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 12773,
                  "nodeType": "ExpressionStatement",
                  "src": "3470:58:28"
                }
              ]
            },
            "documentation": "@dev Allows the user to submit a request for data to the oracle using Tributes\nAllowing this prevents us from increasing spread too high (since if we set the price too hight\nusers will just go to an exchange and get tokens from there)\n@param _request string API being requested to be mined\n@param _symbol is the short string symbol for the api request\n@param _granularity is the number of decimals miners should include on the submitted value\n@param _tip amount the requester is willing to pay to be get on queue. Miners\nmine the onDeckQueryHash, or the api with the highest payout pool",
            "id": 12775,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "requestData",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 12737,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 12730,
                  "name": "_request",
                  "nodeType": "VariableDeclaration",
                  "scope": 12775,
                  "src": "3159:24:28",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_calldata_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 12729,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "3159:6:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 12732,
                  "name": "_symbol",
                  "nodeType": "VariableDeclaration",
                  "scope": 12775,
                  "src": "3185:23:28",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_calldata_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 12731,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "3185:6:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 12734,
                  "name": "_granularity",
                  "nodeType": "VariableDeclaration",
                  "scope": 12775,
                  "src": "3210:20:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 12733,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3210:7:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 12736,
                  "name": "_tip",
                  "nodeType": "VariableDeclaration",
                  "scope": 12775,
                  "src": "3232:12:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 12735,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3232:7:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3158:87:28"
            },
            "returnParameters": {
              "id": 12738,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3255:0:28"
            },
            "scope": 12901,
            "src": "3138:397:28",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 12800,
              "nodeType": "Block",
              "src": "4152:112:28",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 12794,
                        "name": "_request",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12777,
                        "src": "4219:8:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 12795,
                        "name": "_symbol",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12779,
                        "src": "4229:7:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 12796,
                        "name": "_granularity",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12781,
                        "src": "4238:12:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 12797,
                        "name": "_tip",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12783,
                        "src": "4252:4:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        },
                        {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 12791,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 12916,
                            "src": "4208:3:28",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 12792,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "4208:9:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 12786,
                            "name": "tellorUserContract",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 12646,
                            "src": "4162:18:28",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_UserContract_$12639",
                              "typeString": "contract UserContract"
                            }
                          },
                          "id": 12789,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "requestDataWithEther",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 12359,
                          "src": "4162:39:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_payable$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$__$",
                            "typeString": "function (string memory,string memory,uint256,uint256) payable external"
                          }
                        },
                        "id": 12790,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "value",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "4162:45:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_setvalue_nonpayable$_t_uint256_$returns$_t_function_external_payable$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$__$value_$",
                          "typeString": "function (uint256) returns (function (string memory,string memory,uint256,uint256) payable external)"
                        }
                      },
                      "id": 12793,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4162:56:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$__$value",
                        "typeString": "function (string memory,string memory,uint256,uint256) payable external"
                      }
                    },
                    "id": 12798,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4162:95:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 12799,
                  "nodeType": "ExpressionStatement",
                  "src": "4162:95:28"
                }
              ]
            },
            "documentation": "@dev Allows the user to submit a request for data to the oracle using ETH\n@param _request string API being requested to be mined\n@param _symbol is the short string symbol for the api request\n@param _granularity is the number of decimals miners should include on the submitted value\n@param _tip amount the requester is willing to pay to be get on queue. Miners\nmine the onDeckQueryHash, or the api with the highest payout pool",
            "id": 12801,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "requestDataWithEther",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 12784,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 12777,
                  "name": "_request",
                  "nodeType": "VariableDeclaration",
                  "scope": 12801,
                  "src": "4048:24:28",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_calldata_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 12776,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "4048:6:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 12779,
                  "name": "_symbol",
                  "nodeType": "VariableDeclaration",
                  "scope": 12801,
                  "src": "4074:23:28",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_calldata_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 12778,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "4074:6:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 12781,
                  "name": "_granularity",
                  "nodeType": "VariableDeclaration",
                  "scope": 12801,
                  "src": "4099:20:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 12780,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4099:7:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 12783,
                  "name": "_tip",
                  "nodeType": "VariableDeclaration",
                  "scope": 12801,
                  "src": "4121:12:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 12782,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4121:7:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4047:87:28"
            },
            "returnParameters": {
              "id": 12785,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4152:0:28"
            },
            "scope": 12901,
            "src": "4018:246:28",
            "stateMutability": "payable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 12836,
              "nodeType": "Block",
              "src": "4480:216:28",
              "statements": [
                {
                  "assignments": [
                    12809
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 12809,
                      "name": "_tellor",
                      "nodeType": "VariableDeclaration",
                      "scope": 12836,
                      "src": "4490:14:28",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Tellor_$316",
                        "typeString": "contract Tellor"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 12808,
                        "name": "Tellor",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 316,
                        "src": "4490:6:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Tellor_$316",
                          "typeString": "contract Tellor"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 12815,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "argumentTypes": null,
                            "id": 12811,
                            "name": "tellorUserContract",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 12646,
                            "src": "4514:18:28",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_UserContract_$12639",
                              "typeString": "contract UserContract"
                            }
                          },
                          "id": 12812,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "tellorStorageAddress",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 12204,
                          "src": "4514:39:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_address_payable_$",
                            "typeString": "function () view external returns (address payable)"
                          }
                        },
                        "id": 12813,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4514:41:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 12810,
                      "name": "Tellor",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 316,
                      "src": "4507:6:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_Tellor_$316_$",
                        "typeString": "type(contract Tellor)"
                      }
                    },
                    "id": 12814,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4507:49:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Tellor_$316",
                      "typeString": "contract Tellor"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4490:66:28"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 12819,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 12916,
                              "src": "4595:3:28",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 12820,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "4595:10:28",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 12822,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 12982,
                                "src": "4615:4:28",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_UsingTellor_$12901",
                                  "typeString": "contract UsingTellor"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_UsingTellor_$12901",
                                  "typeString": "contract UsingTellor"
                                }
                              ],
                              "id": 12821,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "4607:7:28",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": "address"
                            },
                            "id": 12823,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4607:13:28",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 12824,
                            "name": "_tip",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 12805,
                            "src": "4622:4:28",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "id": 12817,
                            "name": "_tellor",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 12809,
                            "src": "4574:7:28",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Tellor_$316",
                              "typeString": "contract Tellor"
                            }
                          },
                          "id": 12818,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "transferFrom",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 291,
                          "src": "4574:20:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (address,address,uint256) external returns (bool)"
                          }
                        },
                        "id": 12825,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4574:53:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "5472616e73666572206661696c6564",
                        "id": 12826,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4629:17:28",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51",
                          "typeString": "literal_string \"Transfer failed\""
                        },
                        "value": "Transfer failed"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51",
                          "typeString": "literal_string \"Transfer failed\""
                        }
                      ],
                      "id": 12816,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        12919,
                        12920
                      ],
                      "referencedDeclaration": 12920,
                      "src": "4566:7:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 12827,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4566:81:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 12828,
                  "nodeType": "ExpressionStatement",
                  "src": "4566:81:28"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 12832,
                        "name": "_requestId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12803,
                        "src": "4672:10:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 12833,
                        "name": "_tip",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12805,
                        "src": "4684:4:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 12829,
                        "name": "_tellor",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12809,
                        "src": "4657:7:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Tellor_$316",
                          "typeString": "contract Tellor"
                        }
                      },
                      "id": 12831,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "addTip",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 153,
                      "src": "4657:14:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256) external"
                      }
                    },
                    "id": 12834,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4657:32:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 12835,
                  "nodeType": "ExpressionStatement",
                  "src": "4657:32:28"
                }
              ]
            },
            "documentation": "@dev Allows the user to tip miners for the specified request using Tributes\n@param _requestId to tip\n@param _tip amount",
            "id": 12837,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "addTip",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 12806,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 12803,
                  "name": "_requestId",
                  "nodeType": "VariableDeclaration",
                  "scope": 12837,
                  "src": "4439:18:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 12802,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4439:7:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 12805,
                  "name": "_tip",
                  "nodeType": "VariableDeclaration",
                  "scope": 12837,
                  "src": "4459:12:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 12804,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4459:7:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4438:34:28"
            },
            "returnParameters": {
              "id": 12807,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4480:0:28"
            },
            "scope": 12901,
            "src": "4423:273:28",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 12856,
              "nodeType": "Block",
              "src": "5018:100:28",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 12852,
                        "name": "_requestId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12839,
                        "src": "5094:10:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 12853,
                        "name": "_tip",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12841,
                        "src": "5106:4:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 12849,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 12916,
                            "src": "5083:3:28",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 12850,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "5083:9:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 12845,
                                "name": "tellorUserContract",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 12646,
                                "src": "5041:18:28",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_UserContract_$12639",
                                  "typeString": "contract UserContract"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_UserContract_$12639",
                                  "typeString": "contract UserContract"
                                }
                              ],
                              "id": 12844,
                              "name": "UserContract",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 12639,
                              "src": "5028:12:28",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_UserContract_$12639_$",
                                "typeString": "type(contract UserContract)"
                              }
                            },
                            "id": 12846,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5028:32:28",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_UserContract_$12639",
                              "typeString": "contract UserContract"
                            }
                          },
                          "id": 12847,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "addTipWithEther",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 12399,
                          "src": "5028:48:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_payable$_t_uint256_$_t_uint256_$returns$__$",
                            "typeString": "function (uint256,uint256) payable external"
                          }
                        },
                        "id": 12848,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "value",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "5028:54:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_setvalue_nonpayable$_t_uint256_$returns$_t_function_external_payable$_t_uint256_$_t_uint256_$returns$__$value_$",
                          "typeString": "function (uint256) returns (function (uint256,uint256) payable external)"
                        }
                      },
                      "id": 12851,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5028:65:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$_t_uint256_$_t_uint256_$returns$__$value",
                        "typeString": "function (uint256,uint256) payable external"
                      }
                    },
                    "id": 12854,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5028:83:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 12855,
                  "nodeType": "ExpressionStatement",
                  "src": "5028:83:28"
                }
              ]
            },
            "documentation": "@dev Allows user to add tip with Ether by sending the ETH to the userContract and exchanging it for Tributes\nat the price specified by the userContract owner.\n@param _requestId to tip\n@param _tip amount",
            "id": 12857,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "addTipWithEther",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 12842,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 12839,
                  "name": "_requestId",
                  "nodeType": "VariableDeclaration",
                  "scope": 12857,
                  "src": "4969:18:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 12838,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4969:7:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 12841,
                  "name": "_tip",
                  "nodeType": "VariableDeclaration",
                  "scope": 12857,
                  "src": "4989:12:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 12840,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4989:7:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4968:34:28"
            },
            "returnParameters": {
              "id": 12843,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5018:0:28"
            },
            "scope": 12901,
            "src": "4944:174:28",
            "stateMutability": "payable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 12876,
              "nodeType": "Block",
              "src": "5286:148:28",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        "id": 12866,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 12863,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 12916,
                            "src": "5304:3:28",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 12864,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "5304:10:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 12865,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 12648,
                          "src": "5318:5:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "5304:19:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "53656e646572206973206e6f74206f776e6572",
                        "id": 12867,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5325:21:28",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c31e61005312bc4f751533ef9aaa8e9a41448b72bb628fe51500ef66060b25c4",
                          "typeString": "literal_string \"Sender is not owner\""
                        },
                        "value": "Sender is not owner"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c31e61005312bc4f751533ef9aaa8e9a41448b72bb628fe51500ef66060b25c4",
                          "typeString": "literal_string \"Sender is not owner\""
                        }
                      ],
                      "id": 12862,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        12919,
                        12920
                      ],
                      "referencedDeclaration": 12920,
                      "src": "5296:7:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 12868,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5296:51:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 12869,
                  "nodeType": "ExpressionStatement",
                  "src": "5296:51:28"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 12874,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 12870,
                      "name": "tellorUserContract",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12646,
                      "src": "5379:18:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_UserContract_$12639",
                        "typeString": "contract UserContract"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 12872,
                          "name": "_userContract",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 12859,
                          "src": "5413:13:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 12871,
                        "name": "UserContract",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12639,
                        "src": "5400:12:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_UserContract_$12639_$",
                          "typeString": "type(contract UserContract)"
                        }
                      },
                      "id": 12873,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5400:27:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_UserContract_$12639",
                        "typeString": "contract UserContract"
                      }
                    },
                    "src": "5379:48:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_UserContract_$12639",
                      "typeString": "contract UserContract"
                    }
                  },
                  "id": 12875,
                  "nodeType": "ExpressionStatement",
                  "src": "5379:48:28"
                }
              ]
            },
            "documentation": "@dev allows owner to set the user contract address\n@param _userContract address",
            "id": 12877,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setUserContract",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 12860,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 12859,
                  "name": "_userContract",
                  "nodeType": "VariableDeclaration",
                  "scope": 12877,
                  "src": "5256:21:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 12858,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5256:7:28",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "5255:23:28"
            },
            "returnParameters": {
              "id": 12861,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5286:0:28"
            },
            "scope": 12901,
            "src": "5231:203:28",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 12899,
              "nodeType": "Block",
              "src": "5595:148:28",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        "id": 12886,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 12883,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 12916,
                            "src": "5613:3:28",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 12884,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "5613:10:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 12885,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 12648,
                          "src": "5627:5:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "5613:19:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "53656e646572206973206e6f74206f776e6572",
                        "id": 12887,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5634:21:28",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c31e61005312bc4f751533ef9aaa8e9a41448b72bb628fe51500ef66060b25c4",
                          "typeString": "literal_string \"Sender is not owner\""
                        },
                        "value": "Sender is not owner"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c31e61005312bc4f751533ef9aaa8e9a41448b72bb628fe51500ef66060b25c4",
                          "typeString": "literal_string \"Sender is not owner\""
                        }
                      ],
                      "id": 12882,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        12919,
                        12920
                      ],
                      "referencedDeclaration": 12920,
                      "src": "5605:7:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 12888,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5605:51:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 12889,
                  "nodeType": "ExpressionStatement",
                  "src": "5605:51:28"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 12891,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12648,
                        "src": "5692:5:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 12892,
                        "name": "_newOwner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12879,
                        "src": "5699:9:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 12890,
                      "name": "OwnershipTransferred",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12654,
                      "src": "5671:20:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (address,address)"
                      }
                    },
                    "id": 12893,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5671:38:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 12894,
                  "nodeType": "EmitStatement",
                  "src": "5666:43:28"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 12897,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 12895,
                      "name": "owner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12648,
                      "src": "5719:5:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 12896,
                      "name": "_newOwner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12879,
                      "src": "5727:9:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "5719:17:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "id": 12898,
                  "nodeType": "ExpressionStatement",
                  "src": "5719:17:28"
                }
              ]
            },
            "documentation": "@dev allows owner to transfer ownership\n@param _newOwner address",
            "id": 12900,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "transferOwnership",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 12880,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 12879,
                  "name": "_newOwner",
                  "nodeType": "VariableDeclaration",
                  "scope": 12900,
                  "src": "5559:25:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "typeName": {
                    "id": 12878,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5559:15:28",
                    "stateMutability": "payable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "5558:27:28"
            },
            "returnParameters": {
              "id": 12881,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5595:0:28"
            },
            "scope": 12901,
            "src": "5532:211:28",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          }
        ],
        "scope": 12902,
        "src": "210:5535:28"
      }
    ],
    "src": "0:5746:28"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.8+commit.23d335f2.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.0.11",
  "updatedAt": "2019-10-02T13:26:13.793Z",
  "devdoc": {
    "methods": {
      "addTip(uint256,uint256)": {
        "details": "Allows the user to tip miners for the specified request using Tributes",
        "params": {
          "_requestId": "to tip",
          "_tip": "amount"
        }
      },
      "addTipWithEther(uint256,uint256)": {
        "details": "Allows user to add tip with Ether by sending the ETH to the userContract and exchanging it for Tributes at the price specified by the userContract owner.",
        "params": {
          "_requestId": "to tip",
          "_tip": "amount"
        }
      },
      "constructor": {
        "details": "This function sents the owner and userContract address",
        "params": {
          "_userContract": "is the UserContract.sol address"
        }
      },
      "getAnyDataAfter(uint256,uint256)": {
        "details": "Allows the user to get the first value for the requestId after the specified timestamp",
        "params": {
          "_requestId": "is the requestId to look up the value for",
          "_timestamp": "after which to search for first verified value"
        },
        "return": "bool true if it is able to retreive a value, the value, and the value's timestamp"
      },
      "getCurrentValue(uint256)": {
        "details": "Allows the user to get the latest value for the requestId specified",
        "params": {
          "_requestId": "is the requestId to look up the value for"
        },
        "return": "bool true if it is able to retreive a value, the value, and the value's timestamp"
      },
      "getFirstVerifiedDataAfter(uint256,uint256)": {
        "details": "Allows the user to get the first verified value for the requestId after the specified timestamp",
        "params": {
          "_requestId": "is the requestId to look up the value for",
          "_timestamp": "after which to search for first verified value"
        },
        "return": "bool true if it is able to retreive a value, the value, and the value's timestamp, the timestamp after which it searched for the first verified value"
      },
      "requestData(string,string,uint256,uint256)": {
        "details": "Allows the user to submit a request for data to the oracle using Tributes Allowing this prevents us from increasing spread too high (since if we set the price too hight users will just go to an exchange and get tokens from there)",
        "params": {
          "_granularity": "is the number of decimals miners should include on the submitted value",
          "_request": "string API being requested to be mined",
          "_symbol": "is the short string symbol for the api request",
          "_tip": "amount the requester is willing to pay to be get on queue. Miners mine the onDeckQueryHash, or the api with the highest payout pool"
        }
      },
      "requestDataWithEther(string,string,uint256,uint256)": {
        "details": "Allows the user to submit a request for data to the oracle using ETH",
        "params": {
          "_granularity": "is the number of decimals miners should include on the submitted value",
          "_request": "string API being requested to be mined",
          "_symbol": "is the short string symbol for the api request",
          "_tip": "amount the requester is willing to pay to be get on queue. Miners mine the onDeckQueryHash, or the api with the highest payout pool"
        }
      },
      "setUserContract(address)": {
        "details": "allows owner to set the user contract address",
        "params": {
          "_userContract": "address"
        }
      },
      "transferOwnership(address)": {
        "details": "allows owner to transfer ownership",
        "params": {
          "_newOwner": "address"
        }
      }
    },
    "title": "UsingTellor This contracts creates for easy integration to the Tellor Tellor System"
  },
  "userdoc": {
    "methods": {}
  }
}