{"version":3,"sources":["../src/ContractWrapper.js"],"names":["EMPTY_VARS","_challenge","_requestId","_difficult","_queryString","ContractWrapper","props","master","masterAddress","chain","wallet","forEach","fn","Error","bind","caller","_call","vars","toString","_difficulty","_granularity","_totalTip","address","status","queryString","symbol","requestId","multiplier","tip","_send","_nonce","_value","con","method","args","methods","call","from","gas","web3","Promise","done","err","eth","getTransactionCount","e","nonce","txn","data","encodeABI","txParams","gasPrice","utils","toHex","toWei","gasLimit","to","value","signTransaction","raw","console","log","sendSignedTransaction","on","txHash","receipt","catch"],"mappings":"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","file":"ContractWrapper.js","sourcesContent":["import Web3 from 'web3';\n\nconst EMPTY_VARS = {\n  _challenge: null,\n  _requestId: 0,\n  _difficult: 0,\n  _queryString: null\n}\n\nexport default class ContractWrapper {\n  constructor(props) {\n    this.master = props.master;\n    this.masterAddress = props.masterAddress;\n    this.chain = props.chain;\n    this.wallet = props.wallet;\n\n    [\n      'init',\n      'unload',\n      'requestData',\n      'addTip',\n      'getCurrentVariables',\n      'getStakerInfo',\n      'submitMiningSolution',\n      '_call',\n      '_send'\n    ].forEach(fn=>{\n      if(!this[fn]) { throw new Error(\"Web3Contract missing fn: \" + fn)}\n      this[fn]=this[fn].bind(this);\n    });\n  }\n\n  async init() {\n\n  }\n\n  async unload() {\n\n  }\n\n  async getCurrentVariables(caller) {\n      let vars = await this._call(caller, this.master, \"getCurrentVariables\", []);\n      if(!vars || vars[1].toString()-0 === 0) {\n        return EMPTY_VARS;\n      }\n\n      return {\n        _challenge: vars[0],\n        _requestId: vars[1].toString()-0,\n        _difficulty: vars[2].toString()-0,\n        _queryString: vars[3],\n        _granularity: vars[4].toString()-0,\n        _totalTip: vars[5].toString()-0\n      }\n  }\n\n  async getStakerInfo(address) {\n    let vars = await this._call(address, this.master, \"getStakerInfo\", [address]);\n    return {\n      status: vars[0].toString()-0\n    }\n  }\n\n  requestData(caller, queryString, symbol, requestId, multiplier, tip) {\n    return this._send(caller, this.master, \"requestData\", [queryString, symbol, requestId, multiplier, tip]);\n  }\n\n  addTip(caller, requestId, tip) {\n    return this._send(caller, this.master, \"addTip\", [requestId, tip]);\n  }\n\n  submitMiningSolution(caller, _nonce, _requestId, _value) {\n    return this._send(caller, this.master, \"submitMiningSolution\", [_nonce, _requestId, _value]);\n  }\n\n  _call(caller, con, method, args) {\n    return con.methods[method](...args).call({\n      from: caller,\n      gas: 100000\n    });\n  }\n\n  _send(caller, con, method, args) {\n    let web3 = this.chain.web3;\n\n    return new Promise((done,err)=>{\n      web3.eth.getTransactionCount(caller, (e, nonce) => {\n        if(e) {\n          err(e);\n          return;\n        }\n\n        let txn = con.methods[method](...args);\n        let data = txn.encodeABI();\n        let web3 = this.chain.web3;\n\n        let txParams = {\n          nonce: nonce,\n          gasPrice: web3.utils.toHex(web3.utils.toWei('20', 'gwei')),\n          gasLimit: 2000000,\n          to: this.masterAddress,\n          from: caller,\n          value: 0,\n          data: data,\n        }\n        this.wallet.signTransaction(txParams, (e,raw)=>{\n          if(raw) {\n            console.log(\"Sending signed txn...\", txParams);\n            try {\n            \tweb3.eth.sendSignedTransaction(raw)\n                .on('transactionHash',  (txHash) => {\n                  console.log(\"Txn hash\", txHash);\n                  done(txHash);\n              \t})\n                .on('receipt', (receipt) => {\n                  console.log(\"Txn receipt\", receipt);\n             \t\t})\n                .on('error', (e) => {\n                  console.log(\"Txn error\", e);\n                  err(e);\n            \t  }).catch((e)=>{\n                  console.log(\"Txn error\", e);\n                  err(e);\n                });\n            } catch (e) {\n          \t\tconsole.log(\"Problem with sending txn\", e);\n          \t\terr(e);\n            }\n          } else if(e) {\n            console.log(\"Problem submitting nonce\", e);\n            err(e);\n          }\n        });\n      });\n    });\n  }\n}\n"]}